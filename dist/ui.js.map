{"version":3,"file":"ui.js","mappings":"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","sources":["webpack://@webqit/subscript/./src/ui/SubscriptCodeBlock.js","webpack://@webqit/subscript/./src/ui/Interactable.js","webpack://@webqit/subscript/./src/ui/ObserverBlock.js","webpack://@webqit/subscript/./src/ui/Path.js","webpack://@webqit/subscript/./src/ui/index.js","webpack://@webqit/subscript/./src/ui/SubscriptVisualizer.js"],"sourcesContent":["\n/**\n * @SubscriptCodeBlock\n */\nexport default class SubscriptCodeBlock extends HTMLElement {\n\n    constructor() {\n        super();\n        this.attachShadow( { mode: 'open' } );\n    }\n\n    connectedCallback() {\n        let escape = html => html.replace( new RegExp( '&', 'g' ), '&amp;' ).replace( new RegExp( '<', 'g' ), '&lt;' );\n        this._lang = 'javascript';\n        this._editable = this.getAttribute( 'editable' );\n        this._styledBlock = this.getAttribute( 'styled-block' ) || 'pre';\n        // ----------------\n        this._div = document.createElement( 'div' );\n        this._preBlock = this._div.appendChild( document.createElement( 'pre' ) );\n        this._codeBlock = this._preBlock.appendChild( document.createElement( 'code' ) );\n        this._div.classList.add( 'line-numbers' );\n        //this._preBlock.setAttribute( 'data-label', 'Test' );\n        //this._div.classList.add( 'match-braces' );\n        //this._preBlock.setAttribute( 'data-line', '1' );\n        if ( this._lang ) {\n            this._preBlock.classList.add( 'language-' + this._lang );\n            this._codeBlock.classList.add( 'language-' + this._lang );\n        }\n        this._contentSlot = document.createElement( 'slot' );\n        this._contentSlot.setAttribute( 'aria-hidden', 'true' );\n        this._contentSlot.setAttribute( 'hidden', 'true' );\n        this._contentSlot.addEventListener( 'slotchange', () => {\n            let html = this._contentSlot.assignedNodes().reduce( ( _html, node ) => _html + ( node.outerHTML || node.nodeValue || '' ), '' );\n            if ( this._textarea ) {\n                this._textarea.value = html;\n            }\n            this._updateCodeBlock( escape( html ) );\n        } );\n        // ----------------\n        if ( this._editable === 'true' ) {\n            this._addEditor();\n        }\n        // ----------------\n        this.shadowRoot.append( this._contentSlot, this._textarea || '', this._div );\n        // ----------------\n        [].concat( this.css ).forEach( css => {\n            if ( css.includes( '{' ) && css.includes( ':' ) && css.includes( ';' ) ) {\n                let cssElement = this.shadowRoot.appendChild( document.createElement( 'style' ) );\n                cssElement.textContent = css;\n            } else {\n                let cssElement = this.shadowRoot.appendChild( document.createElement( 'link' ) );\n                cssElement.setAttribute( 'rel', 'stylesheet' );\n                cssElement.setAttribute( 'href', css );\n            }\n        } );\n    }\n\n    _addEditor() {\n        this._placeholder = this.getAttribute( 'placeholder' ),\n        this._name = this.getAttribute( 'name' );\n        this._textarea = this._div.appendChild( document.createElement( 'textarea' ) );\n        this._textarea.placeholder = this._placeholder || this._lang;\n        this._textarea.spellcheck = false;\n        this._textarea.name = this._name || '';\n        this._textarea.value = this._codeBlock.textContent;\n        this._preBlock.setAttribute( 'aria-hidden', 'true' );\n        this._scrollBlock = this.getAttribute( 'scroll-block' ) === 'pre' ? this._preBlock : this._codeBlock;\n        this._textarea.addEventListener( 'input', e => this._updateCodeBlock( e.target.value ) );\n        this._textarea.addEventListener( 'input', () => this._syncScrolling() );\n        this._textarea.addEventListener( 'keydown', e => this._normalizeTabbing( e ) );\n    }\n\n    _normalizeTabbing( e ) {\n        if ( !this._textarea ) return;\n        if ( e.key !== 'Tab' ) return;\n        e.preventDefault()\n        let text = this._textarea.value,\n            selectionStart = this._textarea.selectionStart, // where cursor moves after tab - moving forward by 1 indent\n            selectionEnd = this._textarea.selectionEnd; // where cursor moves after tab - moving forward by 1 indent\n        if ( selectionStart === selectionEnd ) {\n            let beforeSelection = text.slice( 0, selectionStart ); // text before tab\n            let afterSelection = text.slice( selectionEnd, text.length ); // text after tab\n            let cursorLocation = selectionEnd + 1; // where cursor moves after tab - moving forward by 1 char to after tab\n            // Add tab char\n            this._textarea.value = beforeSelection + \"\\t\" + afterSelection;\n            // Move cursor\n            this._textarea.selectionStart = cursorLocation;\n            this._textarea.selectionEnd = cursorLocation;\n        } else {\n            let lines = text.split( \"\\n\" ),\n                letter_i = 0,\n                numberIndents = 0,\n                firstLineIndents = 0;\n            for ( let i = 0; i < lines.length; i ++ ) {\n                letter_i += lines[ i ].length;\n                if( selectionStart < letter_i && selectionEnd > letter_i - lines[ i ].length ) {\n                    if( e.shiftKey ) {\n                        if ( lines[ i ][ 0 ] === \"\\t\" ) {\n                            lines[ i ] = lines[i].slice( 1 );\n                            if ( numberIndents === 0 ) firstLineIndents --;\n                            numberIndents --;\n                        }\n                    } else {\n                        lines[ i ] = \"\\t\" + lines[ i ];\n                        if ( numberIndents === 0 ) firstLineIndents ++;\n                        numberIndents ++;\n                    }\n                }\n            }\n            this._textarea.value = lines.join( \"\\n\" );\n            // Move cursor\n            this._textarea.selectionStart = selectionStart + firstLineIndents;\n            this._textarea.selectionEnd = selectionEnd + numberIndents;\n        }\n        this._updateCodeBlock( this._textarea.value );\n    }\n\n    _syncScrolling() {\n        if ( !this._scrollBlock ) return;\n        this._scrollBlock.scrollTop = this._textarea.scrollTop;\n        this._scrollBlock.scrollLeft = this._textarea.scrollLeft;\n    }\n\n    _updateCodeBlock( text ) {\n        if ( text.endsWith( \"\\n\" ) ) {\n            text += \" \";\n        }\n        if ( this._codeBlock.textContent !== text ) {\n            this._codeBlock.innerHTML = '';\n            this._codeBlock.innerHTML = text;\n            this._highlightCodeBlock();\n            this._syncScrolling();\n            return true;\n        }\n    }\n\n    _highlightCodeBlock() {\n        Prism.highlightElement( this._codeBlock );\n    }\n\n    disconnectedCallback() {\n        Array.from( this.shadowRoot.childNodes ).forEach( node => node.remove() );\n    }\n\n    attributeChangedCallback( name, oldValue, newValue ) {\n        if ( !this.childNodes.length ) {\n            return;\n        }\n        switch ( name ) {\n            case 'name':\n                this._name = newValue;\n                this._textarea.name = newValue;\n                break;\n            case 'placeholder':\n                this._placeholder = newValue;\n                this._textarea.placeholder = newValue;\n                break\n            case 'editable':\n                this._editable = newValue;\n                if ( this._textarea && newValue === 'false' ) {\n                    this._textarea.disabled = true;\n                } else if ( !this._textarea && newValue === 'true' ) {\n                    this._addEditor();\n                }\n        }\n    }\n\n    static get observedAttributes() {\n        return [ 'name', 'editable', 'placeholder' ];\n    }\n\n    get name() {\n        return this._name;\n    }\n\n    set name( newValue ) {\n        return this.setAttribute( 'name', newValue );\n    }\n\n    get placeholder() {\n        return this._placeholder;\n    }\n\n    set placeholder( newValue ) {\n        return this.setAttribute( 'placeholder', newValue );\n    }\n\n    get editable() {\n        return this._editable;\n    }\n\n    set editable( newValue ) {\n        return this.setAttribute( 'editable', newValue );\n    }\n\n    /**\n     * ----------\n     *  CSS\n     * ----------\n     */\n\n    get css() {\n        return [\n            `http://localhost:4000/prism.css`,\n            `http://localhost:4000/vs-code-dark.css`,\n            `\n            * {\n                -webkit-box-sizing: border-box;\n                -moz-box-sizing: border-box;\n                box-sizing: border-box;\n            }\n            :host {\n                /* Allow other elems to be inside */\n                position: relative;\n                top: 0;\n                left: 0;\n                display: block;\n            \n                /* Normal inline styles */\n            \n                font-size: 1rem;\n                font-family: monospace;\n                line-height: 1.3rem;\n                tab-size: 2;\n                caret-color: darkgrey;\n                white-space: pre;\n            }\n            \n            textarea, ${ this._styledBlock } {\n                /* Both elements need the same text and space styling so they are directly on top of each other */\n                margin: 0px !important;\n                padding-top: var(--vertical-padding, 1.5rem) !important;\n                padding-bottom: var(--vertical-padding, 1.5rem) !important;\n                padding-left: var(--horizontal-padding, 1rem) !important;\n                padding-right: var(--horizontal-padding, 1rem) !important;\n                border: 0 !important;\n                width: 100% !important;\n                height: 100% !important;\n            }\n            ${ this._styledBlock === 'code' ? 'pre' : 'code' } {\n                margin: 0px !important;\n                border: 0px !important;\n                padding: 0px !important;\n                overflow: auto !important;\n                width: 100% !important;\n                height: 100% !important;\n            }\n            .line-numbers :is(textarea, pre[class*=language-]) {\n                padding-left:3.8rem !important;\n            }\n            textarea, pre, pre * {\n                /* Also add text styles to highlighing tokens */\n                font-size: inherit !important;\n                font-family: inherit !important;\n                line-height: inherit !important;\n                tab-size: inherit !important;\n            }\n            \n            \n            textarea, pre {\n                /* In the same place */\n                position: absolute;\n                top: 0;\n                left: 0;\n            }\n            textarea[disabled] {\n                pointer-events: none !important;\n            }\n            \n            \n            /* Move the textarea in front of the result */\n            \n            textarea {\n                z-index: 1;\n            }\n            pre {\n                z-index: 0;\n            }\n            \n            \n            /* Make textarea almost completely transparent */\n            \n            textarea {\n                color: transparent;\n                background: transparent;\n                caret-color: inherit!important; /* Or choose your favourite color */\n            }\n            \n            /* Can be scrolled */\n            textarea, pre {\n                overflow: auto !important;\n            \n                white-space: inherit !important;\n                word-spacing: normal !important;\n                word-break: normal !important;\n                word-wrap: normal !important;\n            }\n            \n            /* No resize on textarea; stop outline */\n            textarea {\n                resize: none;\n                outline: none !important;\n            }\n            .line-numbers-rows {\n                border: none !important;\n                color: dimgray !important;\n            }\n            `,\n        ]\n    }\n\n}","\n/**\n * @Path\n */\nexport default Interactable => class extends ( Interactable || class {} ) {\n\n    setStateCallback( type, state, value, duration = 100, callback ) {\n        if ( !this._timeouts ) {\n            this._timeouts = {};\n        }\n        if ( !( type in this._timeouts ) ) {\n            this._timeouts[ type ] = [];\n        }\n        if ( value ) {\n            if ( !this._timeouts[ type ].length ) {\n                callback();\n            }\n            if ( duration ) {\n                this._timeouts[ type ].unshift( setTimeout( () => this.setState( type, state, false ), duration ) );\n            } else {\n                this._timeouts[ type ].unshift( null );\n            }\n            if ( this._related ) {\n                this._related.setState( type, state, true, duration );\n            }\n        } else {\n            this._timeouts[ type ].shift();\n            if ( !this._timeouts[ type ].length ) {\n                callback();\n                if ( this._related ) {\n                    this._related.setState( type, state, false );\n                }\n            }\n        }\n    }\n\n}","/**\n * @imports\n */\nimport Interactable from './Interactable.js';\n\n/**\n * @Path\n */\nexport default class ObserverBlock extends Interactable() {\n\n    constructor( block, observerBlocks ) {\n        super();\n        Object.assign( this, block );\n        this._observerBlocks = observerBlocks;\n        this.on( 'mouseenter', () => {\n            this.setState( 'block', 'hover', true, 0 );\n        } ).on( 'mouseleave', () => {\n            this.setState( 'block', 'hover', false );\n        } );\n        this.anchor.setAttribute( `title`, `(${ this.id }) Observer Block` );\n    }\n\n    setState( type, state, value, duration = 100 ) {\n        if ( value && this.parentId && this._observerBlocks[ this.parentId ] ) {\n            this._observerBlocks[ this.parentId ].setState( type, state, false );\n        }\n        this.setStateCallback( type, state, value, duration, () => {\n            if ( value ) {\n                this.anchor.classList.add( `${ type }-${ state }` );\n            } else {\n                this.anchor.classList.remove( `${ type }-${ state }` );\n            }\n        } );\n    }\n\n    on( eventName, callback ) {\n        this.anchor.addEventListener( eventName, callback.bind( this ) );\n        return this;\n    }\n\n}","/**\n * @imports\n */\nimport Interactable from './Interactable.js';\n\n/**\n * @Path\n */\nexport default class Path extends Interactable( Array ) {\n\n    constructor( ...entries ) {\n        super( ...entries );\n        this.forEach( element => {\n            element.ownerPath = this;\n            element.anchor.setAttribute( `title`, element.anchorTyoe === 'effect-path-identifier' ? `Effect Path/Identifier` : `Observed Path/Identifier` );\n        });\n        this.on( 'mouseenter', () => {\n            this.setState( 'path', 'hover', true, 0 );\n        } ).on( 'mouseleave', () => {\n            this.setState( 'path', 'hover', false );\n        } );\n    }\n\n    setState( type, state, value, duration = 100 ) {\n        this.setStateCallback( type, state, value, duration, () => {\n            if ( value ) {\n                this.forEach( element => element.anchor.classList.add( `${ type }-${ state }` ) );\n            } else {\n                this.forEach( element => element.anchor.classList.remove( `${ type }-${ state }` ) );\n            }\n        } );\n    }\n\n    on( eventName, callback ) {\n        this.forEach( pathElement => pathElement.anchor.addEventListener( eventName, callback.bind( this ) ) );\n        return this;\n    }\n}","\n/**\n * @imports\n */\nimport SubscriptCodeBlock from './SubscriptCodeBlock.js';\nimport SubscriptVisualizer from './SubscriptVisualizer.js';\n\n/**\n * @define\n */\ncustomElements.define( 'subscript-codeblock', SubscriptCodeBlock );\ncustomElements.define( 'subscript-visualizer', SubscriptVisualizer );\n","\n/**\n * @imports\n */\nimport SubscriptCodeBlock from './SubscriptCodeBlock.js';\nimport ObserverBlock from './ObserverBlock.js';\nimport Path from './Path.js';\n\n/**\n * @SubscriptVisualizer\n */\nexport default class SubscriptVisualizer extends SubscriptCodeBlock {\n\n    constructor() {\n        super();\n        this._effectsTree = {};\n        this._observerBlocks = {};\n        this._anchorsMap = new Map;\n    }\n\n    _updateCodeBlock( text ) {\n        let updated = super._updateCodeBlock( text );\n        if ( updated ) {\n            this._prepareVisualization();\n        }\n    }\n\n    /**\n     * ----------\n     * Visualization\n     * ----------\n     */\n\n    visualize( pathDefs, observerId ) {\n        pathDefs.forEach( pathDef => {\n            let path = this._anchorsMap.get( pathDef.path[ 0 ].id ).ownerPath;\n            path.setState( 'path-runtime', 'active', true, 600 );\n        } );\n        if ( observerId ) {\n            this._observerBlocks[ observerId ].setState( 'block-runtime', 'active', true, 600 );\n        }\n    }\n\n    setVisualization( visualizationData ) {\n        this._visualizationData = visualizationData;\n        if ( visualizationData.originalSource ) {\n            this.innerHTML = visualizationData.originalSource;\n        }\n    }\n\n    _prepareVisualization() {\n        if ( !this._visualizationData || !this._codeBlock.textContent.length ) return;\n\n        // Path util\n        let createPath = ( type, path, related = [] ) => {\n            return new Path( ...path.map( element => {\n                return this._createAnchor( type + '-identifier', { ...element } );\n            } ), ...related );\n        };\n\n        // Effect paths > observer paths\n        this._textNodes = this._getTextNodes();\n        Object.keys( this._visualizationData.effects ).forEach( effectId => {\n            this._visualizationData.effects[ effectId ].forEach( effect => {\n\n                // Effect path\n                if ( effect.meta.destructuringTrail ) {\n                    effect.meta = { ...effect.meta, destructuringTrail: createPath( 'destructuring-trail', effect.meta.destructuringTrail ) };\n                }\n\n                // Effect details\n                this._effectsTree[ effect.id ] = this._effectsTree[ effect.id ] || [];\n                this._effectsTree[ effect.id ].push( {\n                    ...effect,\n                    path: effect.id === 'globals' ? effect.path : createPath( 'effect-path', effect.path ),\n                    observers: Object.keys( effect.observers ).reduce( ( _observers, observerId ) => {\n                        \n                        // Observers\n                        effect.observers[ observerId ].forEach( observer => {\n                            let relatedPath;\n                            if ( [ 'DeclaratorInit', 'AssignmentRight' ].includes( observer.meta.role ) ) {\n                                if ( this._effectsTree[ observer.meta.effectId ] ) {\n                                    // may not be found... such as when effect kind is \"const\"\n                                    relatedPath = this._effectsTree[ observer.meta.effectId ][ 0 ].meta.destructuringTrail;\n                                }\n                            }\n                            _observers[ observerId ] = _observers[ observerId ] || [];\n                            _observers[ observerId ].push( {\n                                ...observer,\n                                path: createPath( 'observer-path', observer.path, relatedPath )\n                            } );\n                        } );\n\n                        return _observers;\n                    }, {} ),\n                } );\n\n            } );\n        } );\n\n        // Observer blocks\n        this._textNodes = this._getTextNodes();\n        Object.keys( this._visualizationData.observers ).forEach( observerId => {\n            let observer = this._visualizationData.observers[ observerId ]\n            let interactableObserver = new ObserverBlock( this._createAnchor( 'observer-block', { ...observer } ), this._observerBlocks );\n            this._observerBlocks[ observer.id ] = interactableObserver;\n        } );\n\n    }\n\n    _createAnchor( type, def ) {\n        let [ start, end ] = this._visualizationData.idLocs[ '#' + def.id ];\n        let [ startOffsetNode, startOffset ] = this._resolveOffset( start ),\n            [ endOffsetNode, endOffset ] = this._resolveOffset( end, false );\n        let range = new Range;\n        def.anchor = document.createElement( 'span' );\n        def.anchor.classList.add( type );\n        def.anchorTyoe = type;\n        this._anchorsMap.set( def.id, def );\n        if ( type === 'observer-block' ) {\n            if ( startOffset === 0 \n            && startOffsetNode.parentNode.nodeName === 'SPAN'  ) {\n                range.setStartBefore( startOffsetNode.parentNode );\n            } else {\n                range.setStart( startOffsetNode, startOffset );\n            }\n            if ( endOffset === ( endOffsetNode.nodeValue || '' ).length \n            && endOffsetNode.parentNode.nodeName === 'SPAN' ) {\n                range.setEndAfter( endOffsetNode.parentNode );\n            } else {\n                range.setEnd( endOffsetNode, endOffset );\n            }\n        } else {\n            range.setStart( startOffsetNode, startOffset );\n            range.setEnd( endOffsetNode, endOffset );\n        }\n        range.surroundContents( def.anchor );\n        return def;\n    }\n\n    _resolveOffset( offset, isStart = true ) {\n        return this._textNodes.reduce( ( [ prevNodeDef, final, prevSum ], nodeDef ) => {\n            if ( final === null ) {\n                let currentSum = prevSum + nodeDef.length;\n                if ( offset <= currentSum && !nodeDef.isBlank ) {\n                    let subOffset = offset - prevSum;\n                    if ( !isStart && subOffset === 0 ) {\n                        // We must not end at the start of a text node\n                        return [ prevNodeDef.node, prevNodeDef.length ];\n                    }\n                    if ( ( !isStart || subOffset < nodeDef.length ) ) {\n                        // We're sure not starting at the end of a text node\n                        return [ nodeDef.node, subOffset ];\n                    }\n                }\n                [ prevNodeDef, final, prevSum ] = [ nodeDef, final, currentSum ];\n            }\n            return [ prevNodeDef, final, prevSum ];\n        }, [ null, null, 0 ] );\n    }\n\n    _getTextNodes() {\n        let rejectScriptTextFilter = {\n            acceptNode: function( node ) {\n                if ( node.parentNode.nodeName === 'SCRIPT' ) return;\n                return window.NodeFilter.FILTER_ACCEPT;\n            }\n        };\n        let walker = window.document.createTreeWalker( this._codeBlock, window.NodeFilter.SHOW_TEXT, rejectScriptTextFilter, false );\n        let textNodes = [], node;\n        while( node = walker.nextNode() ) {\n            let textContent = node.nodeValue || '';\n            textNodes.push( { node, length: textContent.length, isBlank: textContent.trim().length === 0 } );\n        }\n        return textNodes;\n    }\n\n    /**\n     * ----------\n     *  CSS\n     * ----------\n     */\n\n    get css() {\n        return super.css.concat([\n            `\n            .effect-path-identifier {\n                cursor: pointer;\n            }\n            \n            .destructuring-trail-identifier,\n            .observer-path-identifier {\n                cursor: default;\n            }\n\n            .effect-path-identifier:is(.path-hover, .path-runtime-active) {\n                color: violet;\n                font-style: italic;\n            }\n            .effect-path-identifier.path-runtime-active {\n                font-style: normal;\n                text-decoration: underline;\n            }\n\n            :is(.destructuring-trail-identifier, .observer-path-identifier):is(.path-hover, .path-runtime-active) {\n                color: aqua;\n                font-style: italic;\n            }\n            .token.keyword .observer-path-identifier:is(.path-hover, .path-runtime-active) {\n                color: mediumturquoise;\n            }\n            :is(.destructuring-trail-identifier, .observer-path-identifier).path-runtime-active {\n                font-style: normal;\n                text-decoration: underline;\n            }\n\n            .observer-block.block-hover,\n            .observer-block.block-runtime-active {\n                outline: 1px dashed gray;\n                outline-offset: 0.3rem;\n                border-radius: 0.3rem;\n            }\n            .observer-block.block-runtime-active {\n                background-color: rgba(100, 100, 100, 0.25);\n            }\n            `\n        ]);\n    }\n\n}"],"names":["SubscriptCodeBlock","HTMLElement","constructor","super","this","attachShadow","mode","connectedCallback","_lang","_editable","getAttribute","_styledBlock","_div","document","createElement","_preBlock","appendChild","_codeBlock","classList","add","_contentSlot","setAttribute","addEventListener","html","assignedNodes","reduce","_html","node","outerHTML","nodeValue","_textarea","value","_updateCodeBlock","replace","RegExp","escape","_addEditor","shadowRoot","append","concat","css","forEach","includes","textContent","cssElement","_placeholder","_name","placeholder","spellcheck","name","_scrollBlock","e","target","_syncScrolling","_normalizeTabbing","key","preventDefault","text","selectionStart","selectionEnd","beforeSelection","slice","afterSelection","length","cursorLocation","lines","split","letter_i","numberIndents","firstLineIndents","i","shiftKey","join","scrollTop","scrollLeft","endsWith","innerHTML","_highlightCodeBlock","Prism","highlightElement","disconnectedCallback","Array","from","childNodes","remove","attributeChangedCallback","oldValue","newValue","disabled","observedAttributes","editable","Interactable","setStateCallback","type","state","duration","callback","_timeouts","unshift","setTimeout","setState","_related","shift","ObserverBlock","block","observerBlocks","Object","assign","_observerBlocks","on","anchor","id","parentId","eventName","bind","Path","entries","element","ownerPath","anchorTyoe","pathElement","customElements","define","_effectsTree","_anchorsMap","Map","_prepareVisualization","visualize","pathDefs","observerId","pathDef","get","path","setVisualization","visualizationData","_visualizationData","originalSource","createPath","related","map","_createAnchor","_textNodes","_getTextNodes","keys","effects","effectId","effect","meta","destructuringTrail","push","observers","_observers","observer","relatedPath","role","interactableObserver","def","start","end","idLocs","startOffsetNode","startOffset","_resolveOffset","endOffsetNode","endOffset","range","Range","set","parentNode","nodeName","setStartBefore","setStart","setEndAfter","setEnd","surroundContents","offset","isStart","prevNodeDef","final","prevSum","nodeDef","currentSum","isBlank","subOffset","rejectScriptTextFilter","acceptNode","window","NodeFilter","FILTER_ACCEPT","walker","createTreeWalker","SHOW_TEXT","textNodes","nextNode","trim"],"sourceRoot":""}