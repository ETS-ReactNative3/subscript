{"version":3,"file":"console.js","mappings":"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","sources":["webpack://@webqit/subscript/./src/console/Base.js","webpack://@webqit/subscript/./src/console/CodeBlock.js","webpack://@webqit/subscript/./src/util.js","webpack://@webqit/subscript/./src/console/Interactable.js","webpack://@webqit/subscript/./src/console/Ref.js","webpack://@webqit/subscript/./src/console/Effect.js","webpack://@webqit/subscript/./src/console/Console.js","webpack://@webqit/subscript/./src/console/index.js"],"sourcesContent":["\n/**\n * @Console2\n */\nexport default Element => class Base extends Element {\n\n    constructor() {\n        super();\n        this.attachShadow( { mode: 'open' } );\n    }\n\n    connectedCallback() {\n        [].concat( this.css ).forEach( css => {\n            if ( css.includes( '{' ) && css.includes( ':' ) && css.includes( ';' ) ) {\n                let cssElement = this.shadowRoot.appendChild( document.createElement( 'style' ) );\n                cssElement.textContent = css;\n            } else {\n                let cssElement = this.shadowRoot.appendChild( document.createElement( 'link' ) );\n                cssElement.setAttribute( 'rel', 'stylesheet' );\n                cssElement.setAttribute( 'href', css );\n            }\n        } );\n    }\n\n    /**\n     * ----------\n     *  CSS\n     * ----------\n     */\n\n     get css() {\n        return []\n    }\n\n}","\n/**\n * @imports\n */\nimport { normalizeTabs } from '../util.js';\nimport Base from './Base.js';\n\n/**\n * @CodeBlock\n */\nexport default CodeBlock => class extends Base( CodeBlock || HTMLElement ) {\n\n    static get observedAttributes() {\n        return [ 'name', 'editable', 'placeholder' ];\n    }\n\n    connectedCallback() {\n        let escape = html => html.replace( new RegExp( '&', 'g' ), '&amp;' ).replace( new RegExp( '<', 'g' ), '&lt;' );\n        this._lang = 'javascript';\n        this._editable = this.getAttribute( 'editable' );\n        this._styledBlock = this.getAttribute( 'styled-block' ) || 'pre';\n        // ----------------\n        this._div = document.createElement( 'div' );\n        this._preBlock = this._div.appendChild( document.createElement( 'pre' ) );\n        this._codeBlock = this._preBlock.appendChild( document.createElement( 'code' ) );\n        this._div.classList.add( 'line-numbers' );\n        //this._preBlock.setAttribute( 'data-label', 'Test' );\n        //this._div.classList.add( 'match-braces' );\n        //this._preBlock.setAttribute( 'data-line', '1' );\n        if ( this._lang ) {\n            this._preBlock.classList.add( 'language-' + this._lang );\n            this._codeBlock.classList.add( 'language-' + this._lang );\n        }\n        this._contentSlot = document.createElement( 'slot' );\n        this._contentSlot.setAttribute( 'aria-hidden', 'true' );\n        this._contentSlot.setAttribute( 'hidden', 'true' );\n        this._initialSlotEvent = false;\n        this._contentSlot.addEventListener( 'slotchange', () => {\n            let html = this._contentSlot.assignedNodes().reduce( ( _html, node ) => _html + ( node.outerHTML || node.nodeValue || '' ), '' );\n            if ( !this._initialSlotEvent ) {\n                html = normalizeTabs( html.trimStart() );\n                this._initialSlotEvent = true;\n            }\n            if ( this._textarea ) {\n                this._textarea.value = html;\n            }\n            this.source = escape( html );\n        } );\n        // ----------------\n        if ( this._editable === 'true' ) {\n            this._addEditor();\n        }\n        // ----------------\n        this.shadowRoot.append( this._contentSlot, this._textarea || '', this._div );\n        // ----------------\n        super.connectedCallback();\n    }\n\n    get source() {\n        return this._codeBlock.textContent;\n    }\n\n    set source( text ) {\n        if ( text.endsWith( \"\\n\" ) ) {\n            text += \" \";\n        }\n        this._codeBlock.innerHTML = '';\n        this._codeBlock.innerHTML = text;\n        this._highlightCodeBlock();\n        this._syncScrolling();\n    }\n\n    get name() {\n        return this._name;\n    }\n\n    set name( newValue ) {\n        return this.setAttribute( 'name', newValue );\n    }\n\n    get placeholder() {\n        return this._placeholder;\n    }\n\n    set placeholder( newValue ) {\n        return this.setAttribute( 'placeholder', newValue );\n    }\n\n    get editable() {\n        return this._editable;\n    }\n\n    set editable( newValue ) {\n        return this.setAttribute( 'editable', newValue === true ? 'true' : ( newValue === false ? 'false' : newValue ) );\n    }\n\n    _addEditor() {\n        this._placeholder = this.getAttribute( 'placeholder' ),\n        this._name = this.getAttribute( 'name' );\n        this._textarea = this._div.appendChild( document.createElement( 'textarea' ) );\n        this._textarea.placeholder = this._placeholder || this._lang;\n        this._textarea.spellcheck = false;\n        this._textarea.name = this._name || '';\n        this._textarea.value = this._codeBlock.textContent;\n        this._preBlock.setAttribute( 'aria-hidden', 'true' );\n        this._scrollBlock = this.getAttribute( 'scroll-block' ) === 'pre' ? this._preBlock : this._codeBlock;\n        this._textarea.addEventListener( 'input', e => { this.source = e.target.value } );\n        this._textarea.addEventListener( 'input', () => this._syncScrolling() );\n        this._textarea.addEventListener( 'keydown', e => this._handleTabKeyEvent( e ) );\n    }\n\n    _handleTabKeyEvent( e ) {\n        if ( !this._textarea ) return;\n        if ( e.key !== 'Tab' ) return;\n        e.preventDefault()\n        let text = this._textarea.value,\n            selectionStart = this._textarea.selectionStart, // where cursor moves after tab - moving forward by 1 indent\n            selectionEnd = this._textarea.selectionEnd; // where cursor moves after tab - moving forward by 1 indent\n        if ( selectionStart === selectionEnd ) {\n            let beforeSelection = text.slice( 0, selectionStart ); // text before tab\n            let afterSelection = text.slice( selectionEnd, text.length ); // text after tab\n            let cursorLocation = selectionEnd + 1; // where cursor moves after tab - moving forward by 1 char to after tab\n            // Add tab char\n            this._textarea.value = beforeSelection + \"\\t\" + afterSelection;\n            // Move cursor\n            this._textarea.selectionStart = cursorLocation;\n            this._textarea.selectionEnd = cursorLocation;\n        } else {\n            let lines = text.split( \"\\n\" ),\n                letter_i = 0,\n                numberIndents = 0,\n                firstLineIndents = 0;\n            for ( let i = 0; i < lines.length; i ++ ) {\n                letter_i += lines[ i ].length;\n                if( selectionStart < letter_i && selectionEnd > letter_i - lines[ i ].length ) {\n                    if( e.shiftKey ) {\n                        if ( lines[ i ][ 0 ] === \"\\t\" ) {\n                            lines[ i ] = lines[i].slice( 1 );\n                            if ( numberIndents === 0 ) firstLineIndents --;\n                            numberIndents --;\n                        }\n                    } else {\n                        lines[ i ] = \"\\t\" + lines[ i ];\n                        if ( numberIndents === 0 ) firstLineIndents ++;\n                        numberIndents ++;\n                    }\n                }\n            }\n            this._textarea.value = lines.join( \"\\n\" );\n            // Move cursor\n            this._textarea.selectionStart = selectionStart + firstLineIndents;\n            this._textarea.selectionEnd = selectionEnd + numberIndents;\n        }\n        this.source = this._textarea.value;\n    }\n\n    _syncScrolling() {\n        if ( !this._scrollBlock ) return;\n        this._scrollBlock.scrollTop = this._textarea.scrollTop;\n        this._scrollBlock.scrollLeft = this._textarea.scrollLeft;\n    }\n\n    _highlightCodeBlock() {\n        Prism.highlightElement( this._codeBlock );\n    }\n\n    disconnectedCallback() {\n        Array.from( this.shadowRoot.childNodes ).forEach( node => node.remove() );\n    }\n\n    attributeChangedCallback( name, oldValue, newValue ) {\n        if ( !this.childNodes.length ) {\n            return;\n        }\n        switch ( name ) {\n            case 'name':\n                this._name = newValue;\n                this._textarea.name = newValue;\n                break;\n            case 'placeholder':\n                this._placeholder = newValue;\n                this._textarea.placeholder = newValue;\n                break\n            case 'editable':\n                this._editable = newValue;\n                if ( this._textarea ) {\n                    this._textarea.disabled = newValue === 'false';\n                } else if ( newValue === 'true' ) {\n                    this._addEditor();\n                }\n                if ( newValue === 'true' ) {\n                    this._textarea.focus();\n                }\n        }\n    }\n\n    /**\n     * ----------\n     *  CSS\n     * ----------\n     */\n\n    get css() {\n        return [\n            `https://unpkg.com/@webqit/subscript/src/console/assets/prism.css`,\n            `https://unpkg.com/@webqit/subscript/src/console/assets/vs-code-dark.css`,\n            `\n            * {\n                -webkit-box-sizing: border-box;\n                -moz-box-sizing: border-box;\n                box-sizing: border-box;\n            }\n            :host {\n                /* Allow other elems to be inside */\n                position: relative;\n                top: 0;\n                left: 0;\n                display: block;\n            \n                /* Normal inline styles */\n            \n                font-size: 0.8rem;\n                font-family: monospace;\n                line-height: 1.2rem;\n                tab-size: 2;\n                caret-color: darkgrey;\n                white-space: pre;\n                overflow: hidden;\n            }\n            \n            textarea, ${ this._styledBlock } {\n                /* Both elements need the same text and space styling so they are directly on top of each other */\n                margin: 0px !important;\n                padding-top: var(--vertical-padding, 1.5rem) !important;\n                padding-bottom: var(--vertical-padding, 1.5rem) !important;\n                padding-left: var(--horizontal-padding, 1rem) !important;\n                padding-right: var(--horizontal-padding, 1rem) !important;\n                border: 0 !important;\n                width: 100% !important;\n                height: 100% !important;\n            }\n            ${ this._styledBlock === 'code' ? 'pre' : 'code' } {\n                margin: 0px !important;\n                border: 0px !important;\n                padding: 0px !important;\n                overflow: auto !important;\n                width: 100% !important;\n                height: 100% !important;\n            }\n            .line-numbers :is(textarea, pre[class*=language-]) {\n                padding-left:3.8rem !important;\n            }\n            textarea, pre, pre * {\n                /* Also add text styles to highlighing tokens */\n                font-size: inherit !important;\n                font-family: inherit !important;\n                line-height: inherit !important;\n                tab-size: inherit !important;\n            }\n            \n            \n            textarea, pre {\n                /* In the same place */\n                position: absolute;\n                top: 0;\n                left: 0;\n            }\n            textarea[disabled] {\n                pointer-events: none !important;\n            }\n            \n            \n            /* Move the textarea in front of the result */\n            \n            textarea {\n                z-index: 1;\n            }\n            pre {\n                z-index: 0;\n            }\n            \n            \n            /* Make textarea almost completely transparent */\n            \n            textarea {\n                color: transparent;\n                background: transparent;\n                caret-color: inherit!important; /* Or choose your favourite color */\n            }\n            \n            /* Can be scrolled */\n            textarea, pre {\n                overflow: auto !important;\n            \n                white-space: inherit !important;\n                word-spacing: normal !important;\n                word-break: normal !important;\n                word-wrap: normal !important;\n            }\n            \n            /* No resize on textarea; stop outline */\n            textarea {\n                resize: none;\n                outline: none !important;\n            }\n            .line-numbers-rows {\n                border: none !important;\n                color: dimgray !important;\n            }\n            `,\n        ]\n    }\n\n}\n","\n/**\n * @normalizeTabs\n */\nexport  function normalizeTabs( rawSource ) {\n    let rawSourceSplit = rawSource.split(/\\n/g);\n    if ( rawSourceSplit.length > 1 ) {\n        let possibleBodyIndentLevel = rawSourceSplit[ 1 ].split(/[^\\s]/)[0].length;\n        if ( possibleBodyIndentLevel ) {\n            return rawSourceSplit.map( ( line, i ) => {\n                if ( !i ) return line;\n                let possibleIndent = line.substring( 0, possibleBodyIndentLevel );\n                if ( !possibleIndent.trim().length ) {\n                    return line.substring( possibleBodyIndentLevel );\n                }\n                // Last line?\n                if ( possibleIndent.trim() === '}' && i === rawSourceSplit.length - 1 ) {\n                    return '}';\n                }\n                return line;\n            } ).join( \"\\n\" );\n        }\n    }\n    return rawSource;\n}","\n/**\n * @Path\n */\nexport default Interactable => class extends ( Interactable || class {} ) {\n\n    setStateCallback( type, state, value, duration = 100, callback ) {\n        if ( !this._timeouts ) {\n            this._timeouts = {};\n        }\n        if ( !( type in this._timeouts ) ) {\n            this._timeouts[ type ] = [];\n        }\n        if ( value ) {\n            if ( !this._timeouts[ type ].length ) {\n                callback();\n            }\n            if ( duration ) {\n                this._timeouts[ type ].unshift( setTimeout( () => this.setState( type, state, false ), duration ) );\n            } else {\n                this._timeouts[ type ].unshift( null );\n            }\n            if ( this._related ) {\n                this._related.setState( type, state, true, duration );\n            }\n        } else {\n            this._timeouts[ type ].shift();\n            if ( !this._timeouts[ type ].length ) {\n                callback();\n                if ( this._related ) {\n                    this._related.setState( type, state, false );\n                }\n            }\n        }\n    }\n\n}","/**\n * @imports\n */\nimport Interactable from './Interactable.js';\n\n/**\n * @Ref\n */\nexport default class Ref extends Interactable() {\n\n    bind( binding ) {\n        Object.assign( this, binding );\n\n        this.fullPaths = [];\n        this.$fullPaths = [];\n        if ( this.ownerProduction.assignee ) {\n            this.ownerProduction.assignee.refs.forEach( ref => {\n                if ( !ref.depth ) return;\n                this.fullPaths.push( [ ...this.path, ...ref.depth ] );\n            } );\n        }\n        if ( !this.fullPaths.length ) {\n            this.fullPaths = [ this.path ];\n        }\n\n        this.fullPaths.forEach( ( fullPath, pathIndex ) => {\n            this.$fullPaths.push( fullPath.map( element => ( 'memoId' in element ) ? `[[computed]]` : element.name ).join( '.' ) );\n            \n            fullPath.forEach( element => {\n                element.anchor.classList.add( 'ref-identifier' );\n                element.anchor.classList.add( this.subscriptions ? 'affected' : 'cause' );\n                let existingTitle = element.anchor.getAttribute( `title` );\n                let currentTitle = '> ' \n                    + this.$fullPaths[ pathIndex ] \n                    + ( this.subscriptions ? ' (Creates a signal)' : ' (Receives a signal)' );\n                element.anchor.setAttribute( `title`, existingTitle ? existingTitle + \"\\n\" + currentTitle : currentTitle );\n            });\n\n            this._on( pathIndex, 'mouseenter', () => {\n                this._setState( pathIndex, 'path', 'hover', true, 0 );\n            } )._on( pathIndex, 'mouseleave', () => {\n                this._setState( pathIndex, 'path', 'hover', false );\n            } );\n\n            if ( this.subscriptions ) {\n                this._on( pathIndex, 'click', () => {\n                    this.ownerProduction.ownerEffect.signal( fullPath );\n                } );\n            }\n        } );\n    }\n\n    _setState( pathIndex, type, state, value, duration = 100 ) {\n        this.setStateCallback( pathIndex + '|' + type, state, value, duration, () => {\n            if ( value ) {\n                this.fullPaths[ pathIndex ].forEach( element => element.anchor.classList.add( `${ type }-${ state }` ) );\n            } else {\n                this.fullPaths[ pathIndex ].forEach( element => element.anchor.classList.remove( `${ type }-${ state }` ) );\n            }\n        } );\n    }\n\n    setState( type, state, value, duration = 100 ) {\n        let [ _index, _type ] = type.split( '|' );\n        if ( _type !== undefined ) {\n            return this._setState( _index, _type, state, value, duration );\n        }\n        this.fullPaths.forEach( ( p, i ) => {\n            this._setState( i, type, state, value, duration );\n        } );\n    }\n\n    _on( pathIndex, eventName, callback ) {\n        this.fullPaths[ pathIndex ].forEach( pathElement => pathElement.anchor.addEventListener( eventName, callback.bind( this ) ) );\n        return this;\n    }\n\n    on( eventName, callback ) {\n        this.fullPaths.forEach( ( p, i ) => {\n            this._on( i, eventName, callback );\n        } );\n    }\n}","/**\n * @imports\n */\nimport Interactable from './Interactable.js';\nimport Ref from './Ref.js';\n\n/**\n * @Path\n */\nexport default class Effect extends Interactable( HTMLElement ) {\n\n    bind( binding ) {\n        Object.assign( this, binding );\n        if ( !this.graph ) return;\n        \n        if ( this.childEffects ) {\n            this.childEffects.forEach( childEffect => {\n                childEffect.replaceWith( ...childEffect.childNodes );\n            } );\n        }\n        this.childEffects = new Map;\n        this._textNodes = this.getTextNodes();\n        for ( let effectId in this.graph.childEffects ) {\n            let graph = this.graph.childEffects[ effectId ];\n            let childInstance = this.createChildEffect( { parentEffect: this, graph } );\n            this.childEffects.set( graph.id, childInstance );\n        }\n\n        this.affecteds = new Map;\n        this.causes = new Map;\n        if ( this.refAnchors ) {\n            for ( let anchorId in this.refAnchors ) {\n                let anchor = this.refAnchors[ anchorId ];\n                anchor.replaceWith( ...anchor.childNodes );\n            }\n        }\n        this.refAnchors = {};\n        this._textNodes = this.getTextNodes();\n        const renderRefs = type => {\n            for ( let productionId in this.graph[ type ] ) {\n                let productionInstance = this.createProduction( { ownerEffect: this, ...this.graph[ type ][ productionId ] } );\n                this[ type ].set( productionId, productionInstance );\n            }\n        };\n        renderRefs( 'affecteds' );\n        renderRefs( 'causes' );\n\n        this.on( 'mouseenter', () => {\n            this.setState( 'block', 'hover', true, 0 );\n        } ).on( 'mouseleave', () => {\n            this.setState( 'block', 'hover', false );\n        } );\n        this.observe( ( event, refs ) => {\n            this.setState( 'block', 'runtime-active', true, 100 );\n            refs.forEach( ref => {\n                let productionInstance = this.causes.get( ref.productionId + '' );\n                if ( !productionInstance ) return;\n                productionInstance.refs.get( ref.id ).setState( 'path', 'runtime-active', true, 100 );\n            } );\n        } );\n    }\n\n    get program() {\n        if ( this.parentEffect ) return this.parentEffect.program;\n        return this.runtime;\n    }\n\n    signal( ...refs ) {\n        let runtimeEffect = this.program.locate( this.graph.lineage );\n        if ( !runtimeEffect ) return;\n        return runtimeEffect.signal( ...refs );\n    }\n\n    observe( callback ) {\n        return this.program.observe( this.graph.lineage, callback );\n    }\n\n    createChildEffect( childBinding ) {\n        let childInstance = document.createElement( 'subscript-effect' );\n        this.insertNode( childInstance, childBinding.graph.loc, 'effect' );\n        childInstance.bind( childBinding );\n        return childInstance;\n    }\n\n    createProduction( productionBinding ) {\n        let productionInstance = { ...productionBinding, refs: new Map };\n        if ( 'assignee' in productionBinding ) {\n            productionInstance.assignee = this.affecteds.get( productionBinding.assignee + '' );\n        }\n        for ( let refDef of productionBinding.refs ) {\n            let refInstance = this.createRef( { ownerProduction: productionInstance, ...refDef } );\n            productionInstance.refs.set( refDef.id, refInstance );\n        }\n        return productionInstance;\n    }\n\n    createRef( refBinding ) {\n        let refInstance = new Ref;\n        const createAnchor = element => {\n            let [ start, end ] = element.loc, anchorId = start + '-' + end;\n            let anchor = this.refAnchors[ anchorId ];\n            if ( !anchor ) {\n                anchor = document.createElement( 'span' );\n                this.insertNode( anchor, [ start, end ], 'ref' );\n                this.refAnchors[ anchorId ] = anchor;\n            }\n            return anchor;\n        };\n        refBinding = { ...refBinding, path: refBinding.path.map( element => {\n            let anchor = createAnchor( element );\n            return { anchor, ...element };\n        } ), };\n        if ( refBinding.depth ) {\n            refBinding.depth = refBinding.depth.map( element => {\n                let anchor = createAnchor( element );\n                return { anchor, ...element };\n            } );\n        }\n        refInstance.bind( refBinding );\n        return refInstance;\n    }\n\n    insertNode( node, loc, type ) {\n        let [ start, end ] = loc;\n        let ownLocStart = this.graph.loc ? this.graph.loc[ 0 ] : 0;\n        let [ startOffsetNode, startOffset ] = this.resolveOffset( start - ownLocStart ),\n            [ endOffsetNode, endOffset ] = this.resolveOffset( end - ownLocStart, false );\n        let range = new Range;\n        if ( type === 'effect' ) {\n            if ( startOffset === 0 \n            && startOffsetNode.parentNode.nodeName === 'SPAN'  ) {\n                range.setStartBefore( startOffsetNode.parentNode );\n            } else {\n                range.setStart( startOffsetNode, startOffset );\n            }\n            if ( endOffset === ( endOffsetNode.nodeValue || '' ).length \n            && endOffsetNode.parentNode.nodeName === 'SPAN' ) {\n                range.setEndAfter( endOffsetNode.parentNode );\n            } else {\n                range.setEnd( endOffsetNode, endOffset );\n            }\n        } else {\n            range.setStart( startOffsetNode, startOffset );\n            range.setEnd( endOffsetNode, endOffset );\n        }\n        range.surroundContents( node );\n        return node;\n    }\n\n    resolveOffset( offset, isStart = true ) {\n        return this._textNodes.reduce( ( [ prevNodeDef, final, prevSum ], nodeDef ) => {\n            if ( final === null ) {\n                let currentSum = prevSum + nodeDef.length;\n                if ( offset <= currentSum && !nodeDef.isBlank ) {\n                    let subOffset = offset - prevSum;\n                    if ( !isStart && subOffset === 0 ) {\n                        // We must not end at the start of a text node\n                        return [ prevNodeDef.node, prevNodeDef.length ];\n                    }\n                    if ( ( !isStart || subOffset < nodeDef.length ) ) {\n                        // We're sure not starting at the end of a text node\n                        return [ nodeDef.node, subOffset ];\n                    }\n                }\n                [ prevNodeDef, final, prevSum ] = [ nodeDef, final, currentSum ];\n            }\n            return [ prevNodeDef, final, prevSum ];\n        }, [ null, null, 0 ] );\n    }\n\n    getTextNodes( from = this ) {\n        let rejectScriptTextFilter = {\n            acceptNode: function( node ) {\n                if ( node.parentNode.nodeName === 'SCRIPT' ) return;\n                return window.NodeFilter.FILTER_ACCEPT;\n            }\n        };\n        let walker = window.document.createTreeWalker( from || this, window.NodeFilter.SHOW_TEXT, rejectScriptTextFilter, false );\n        let textNodes = [], node;\n        while( node = walker.nextNode() ) {\n            let textContent = node.nodeValue || '';\n            textNodes.push( { node, length: textContent.length, isBlank: textContent.trim().length === 0 } );\n        }\n        return textNodes;\n    }\n\n    setState( type, state, value, duration = 100 ) {\n        if ( value && this.parentEffect ) {\n            this.parentEffect.setState( type, state, false );\n        }\n        this.setStateCallback( type, state, value, duration, () => {\n            if ( value ) {\n                this.classList.add( `${ type }-${ state }` );\n            } else {\n                this.classList.remove( `${ type }-${ state }` );\n            }\n        } );\n    }\n\n    on( eventName, callback ) {\n        this.addEventListener( eventName, callback.bind( this ) );\n        return this;\n    }\n\n}","\n/**\n * @imports\n */\nimport CodeBlock from './CodeBlock.js';\nimport Effect from './Effect.js';\n\n/**\n * @Console\n */\nexport default class Console extends CodeBlock( Effect ) {\n\n    bind( subscriptFunction, autoRender = true ) {\n        if ( autoRender ) {\n            // Sets both textarea and codeBlock\n            this.innerHTML = subscriptFunction.originalSource;\n        }\n        setTimeout( () => {\n            if ( !this._codeBlock.textContent.length ) return;\n            let runtime = subscriptFunction.runtime;\n            super.bind( { runtime, graph: runtime.graph } );\n        }, 0 );\n    }\n\n    createRef( refBinding ) { }\n\n    getTextNodes( from = null ) {\n        return super.getTextNodes( from || this._codeBlock );\n    }\n\n    /**\n     * ----------\n     *  CSS\n     * ----------\n     */\n\n    get css() {\n        return super.css.concat([\n            `\n            .ref-identifier:is(.path-hover, .path-runtime-active) {\n                text-decoration: underline;\n            }\n            .ref-identifier:is(.path-runtime-active) {\n            }\n\n            .ref-identifier.cause {\n                cursor: default;\n            }\n\n            .ref-identifier.affected {\n                cursor: pointer;\n            }\n\n            .ref-identifier.cause:is(.path-hover, .path-runtime-active) {\n                color: aqua;\n            }\n            .token.keyword .ref-identifier.cause:is(.path-hover, .path-runtime-active) {\n                color: mediumturquoise;\n            }\n            \n            .ref-identifier.affected:is(.path-hover, .path-runtime-active) {\n                color: yellowgreen;\n            }\n\n            .ref-identifier.cause.affected:is(.path-hover, .path-runtime-active) {\n                color: lightgreen;\n            }\n\n            subscript-effect.block-hover,\n            subscript-effect.block-runtime-active {\n                outline: 1px dashed gray;\n                outline-offset: 0.1rem;\n                border-radius: 0.1rem;\n                /*\n                background-color: darkblue;\n                */\n            }\n            subscript-effect.block-runtime-active {\n                background-color: rgba(100, 100, 100, 0.35);\n            }\n            `\n        ]);\n    }\n\n}","\n/**\n * @imports\n */\nimport CodeBlock from './CodeBlock.js';\nimport Console from './Console.js';\nimport Effect from './Effect.js';\n\n/**\n * @define\n */\ncustomElements.define( 'subscript-codeblock', CodeBlock() );\ncustomElements.define( 'subscript-console', Console );\ncustomElements.define( 'subscript-effect', Effect );"],"names":["Element","constructor","super","this","attachShadow","mode","connectedCallback","concat","css","forEach","includes","shadowRoot","appendChild","document","createElement","textContent","cssElement","setAttribute","CodeBlock","Base","HTMLElement","observedAttributes","_lang","_editable","getAttribute","_styledBlock","_div","_preBlock","_codeBlock","classList","add","_contentSlot","_initialSlotEvent","addEventListener","html","assignedNodes","reduce","_html","node","outerHTML","nodeValue","rawSource","rawSourceSplit","split","length","possibleBodyIndentLevel","map","line","i","possibleIndent","substring","trim","join","normalizeTabs","trimStart","_textarea","value","source","replace","RegExp","escape","_addEditor","append","text","endsWith","innerHTML","_highlightCodeBlock","_syncScrolling","name","_name","newValue","placeholder","_placeholder","editable","spellcheck","_scrollBlock","e","target","_handleTabKeyEvent","key","preventDefault","selectionStart","selectionEnd","beforeSelection","slice","afterSelection","cursorLocation","lines","letter_i","numberIndents","firstLineIndents","shiftKey","scrollTop","scrollLeft","Prism","highlightElement","disconnectedCallback","Array","from","childNodes","remove","attributeChangedCallback","oldValue","disabled","focus","Interactable","setStateCallback","type","state","duration","callback","_timeouts","unshift","setTimeout","setState","_related","shift","Ref","bind","binding","Object","assign","fullPaths","$fullPaths","ownerProduction","assignee","refs","ref","depth","push","path","fullPath","pathIndex","element","anchor","subscriptions","existingTitle","currentTitle","_on","_setState","ownerEffect","signal","_index","_type","undefined","p","eventName","pathElement","on","Effect","graph","childEffects","childEffect","replaceWith","Map","_textNodes","getTextNodes","effectId","childInstance","createChildEffect","parentEffect","set","id","affecteds","causes","refAnchors","anchorId","renderRefs","productionId","productionInstance","createProduction","observe","event","get","program","runtime","runtimeEffect","locate","lineage","childBinding","insertNode","loc","productionBinding","refDef","refInstance","createRef","refBinding","createAnchor","start","end","ownLocStart","startOffsetNode","startOffset","resolveOffset","endOffsetNode","endOffset","range","Range","parentNode","nodeName","setStartBefore","setStart","setEndAfter","setEnd","surroundContents","offset","isStart","prevNodeDef","final","prevSum","nodeDef","currentSum","isBlank","subOffset","rejectScriptTextFilter","acceptNode","window","NodeFilter","FILTER_ACCEPT","walker","createTreeWalker","SHOW_TEXT","textNodes","nextNode","Console","subscriptFunction","autoRender","originalSource","customElements","define"],"sourceRoot":""}