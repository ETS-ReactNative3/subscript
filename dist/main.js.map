{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@webqit/util/js/isArray.js","webpack:///./node_modules/@webqit/util/js/isTypeFunction.js","webpack:///./node_modules/@webqit/util/js/isFunction.js","webpack:///./node_modules/@webqit/util/js/isObject.js","webpack:///./node_modules/@webqit/util/js/isTypeObject.js","webpack:///./node_modules/@webqit/util/js/isNumber.js","webpack:///./node_modules/@webqit/util/js/isNumeric.js","webpack:///./node_modules/@webqit/util/obj/getAllPropertyNames.js","webpack:///./node_modules/@webqit/util/obj/getPrototypeChain.js","webpack:///./node_modules/@webqit/util/arr/pushUnique.js","webpack:///./node_modules/@webqit/util/obj/mergeCallback.js","webpack:///./node_modules/@webqit/util/obj/merge.js","webpack:///./node_modules/@webqit/util/js/isNull.js","webpack:///./node_modules/@webqit/util/js/isUndefined.js","webpack:///./node_modules/@webqit/util/js/isPlainObject.js","webpack:///./node_modules/@webqit/util/js/isBoolean.js","webpack:///./node_modules/@webqit/util/obj/each.js","webpack:///./node_modules/@webqit/util/obj/even.js","webpack:///./node_modules/@webqit/util/obj/compareCallback.js","webpack:///./src/ExprInterface.js","webpack:///./src/grammar/ReferenceInterface.js","webpack:///./src/grammar/CallInterface.js","webpack:///./src/IndependentExprInterface.js","webpack:///./src/grammar/IfInterface.js","webpack:///./src/SyntaxError.js","webpack:///./src/Parser.js","webpack:///./node_modules/@webqit/util/arr/remove.js","webpack:///./node_modules/@webqit/util/str/wrapped.js","webpack:///./node_modules/@webqit/util/str/after.js","webpack:///./node_modules/@webqit/util/str/before.js","webpack:///./node_modules/@webqit/util/str/unwrap.js","webpack:///./node_modules/@webqit/util/str/beforeLast.js","webpack:///./node_modules/@webqit/util/js/isString.js","webpack:///./node_modules/@webqit/util/arr/from.js","webpack:///./node_modules/@webqit/util/js/isEmpty.js","webpack:///./node_modules/@webqit/util/js/isTypeArray.js","webpack:///./node_modules/@webqit/util/arr/flatten.js","webpack:///./node_modules/@webqit/util/arr/first.js","webpack:///./node_modules/@webqit/util/arr/last.js","webpack:///./node_modules/@webqit/util/obj/copyPlain.js","webpack:///./node_modules/@webqit/util/str/Lexer.js","webpack:///./src/grammar/AbstractionInterface.js","webpack:///./src/grammar/Abstraction.js","webpack:///./src/grammar/ArrInterface.js","webpack:///./src/grammar/Arr.js","webpack:///./src/grammar/ArgumentsInterface.js","webpack:///./src/grammar/Arguments.js","webpack:///./node_modules/@webqit/util/arr/unique.js","webpack:///./src/grammar/AssertionInterface.js","webpack:///./src/grammar/Assertion.js","webpack:///./src/grammar/AssignmentInterface.js","webpack:///./src/ReferenceError.js","webpack:///./src/grammar/Assignment.js","webpack:///./src/grammar/BlockInterface.js","webpack:///./src/grammar/ReturnInterface.js","webpack:///./src/grammar/DeletionInterface.js","webpack:///./src/grammar/NumInterface.js","webpack:///./src/grammar/StrInterface.js","webpack:///./src/util.js","webpack:///./src/Scope.js","webpack:///./node_modules/@webqit/util/js/isClass.js","webpack:///./src/grammar/Block.js","webpack:///./src/grammar/BoolInterface.js","webpack:///./src/grammar/Bool.js","webpack:///./src/grammar/Call.js","webpack:///./src/grammar/ComparisonInterface.js","webpack:///./src/grammar/Comparison.js","webpack:///./src/grammar/ConditionInterface.js","webpack:///./src/grammar/Condition.js","webpack:///./src/grammar/Deletion.js","webpack:///./src/grammar/FuncInterface.js","webpack:///./src/grammar/Func.js","webpack:///./src/grammar/If.js","webpack:///./node_modules/@webqit/util/arr/intersect.js","webpack:///./src/grammar/MathInterface.js","webpack:///./src/grammar/Math.js","webpack:///./src/grammar/Num.js","webpack:///./src/grammar/ObjInterface.js","webpack:///./src/grammar/Obj.js","webpack:///./src/grammar/PresenceInterface.js","webpack:///./src/grammar/Presence.js","webpack:///./src/grammar/Reference.js","webpack:///./src/grammar/Return.js","webpack:///./src/grammar/Str.js","webpack:///./src/grammar/VoidInterface.js","webpack:///./src/grammar/Void.js","webpack:///./src/grammar.js","webpack:///./src/index.js","webpack:///./src/browser-entry.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Array","isArray","val","toString","Number","isNaN","keysAll","until","prototypalChain","obj","indexOf","push","getPrototypeOf","forEach","items","itm","arr","getOwnPropertyNames","mergeCallback","objs","callback","deepProps","isReplace","withSymbols","depth","obj1","shift","length","Error","obj2","valAtObj1","valAtObj2","getOwnPropertyDescriptor","e","k","arguments","undefined","returnValue","keys","parseFloat","_even","assertion","obj1Keys","obj2Keys","result","contn","v1","testPass","v2","netComparison","contrast","returnOnFirstFalse","Expr","jsenType","this","Super","comments","meta","vars","Interface","ExprInterface","args","super","cache","expr","grammar","params","_parsed","allowCache","parseOne","_grammar","values","parsed","assert","SyntaxError","reads","writes","deletes","calls","others","deep","parse","_expr","_params","subStmt","ReferenceInterface","hasCallHead","_context","context","CallInterface","role","type","_var","IndependentExprInterface","reference","IfInterface","branch","onTrue","concat","limit","splice","explain","subject","startsWith","openingTag","endsWith","closingTag","search","pos","afterLast","lastIndexOf","substr","beforeLast","String","castObject","slice","_flatten","withObjects","reduce","acc","count","firsts","amount","reverse","filter","str","delims","options","copyResult","nesting","maxDepth","tokens","matches","matchesi","$cache","cached","lex","$str","$options","blocks","$blocks","quotes","$quotes","$comments","runtime","cursor","_evalCharsAt","join","charWidth","commentTest","quoteTest","nestingTest","openComment","_testQuotes","openQuote","_testComments","ending","_push","chars","starting","_testNesting","stopChar","_testChars","stopChars","stopCharForward","matchedDelim","preserveDelims","nextIndex","quote","block","Math","max","testList","test","ret","useRegex","match","RegExp","ci","toLowerCase","target","isNewSeries","splitSeries","splitSeries2","regParse","AbstractionInterface","eval","stringify","parseCallback","split","ArrInterface","exprs","newExprs","exprA","uniqueSoFar","exprB","even","map","trim","ArgumentsInterface","list","arg","index","self","AssertionInterface","logic","Assertion","constructor","negation","operators","toUpperCase","isOr","or","isNor","nor","isAnd","and","isNand","nand","lastResult","trues","Assignment","AssignmentInterface","initKeyword","operator","postIncrDecr","initialVal","getEval","includes","operandA","operandB","set","references","_pushUnique","ReferenceError","message","testBlockEnd","isIncrDecr","a","b","pathStartsWith","prev","referencesToPaths","seg","pathArray","unshift","NumInterface","int","StrInterface","stack","errorLevel","local","$local","trap","observe","props","prop","_has","main","scope","subtree","tags","diff","changes","path","keysMain","oldValue","ref","unobserve","final","level","callMain","handle","bindThis","contxtObj","contxtMeta","advance","_get","Function","isRootVar","_set","cntxt","localContxtMeta","LogicalError","strictMode","deleteProperty","del","prop2","contextObj2","fn","exec","apply","execUnknown","scopeObj","cntxts","supr","has","BlockInterface","stmts","delim","returned","returnCallback","flag","callEval","stmt","catch","results","deepReads","isDirectEventTarget","v","isIndirectEventTarget","ReturnInterface","abortive","DeletionInterface","basePath","leafPath","BoolInterface","state","pop","ComparisonInterface","operand1","operand2","compare","oper","strict","exact","is","isNull","equalsTo","strictlyNotEqualsTo","notEqualsTo","relative","lesserThan","greaterThan","lesserThanOrEqualsTo","greaterThanOrEqualsTo","between","partial","contains","any","in","ConditionInterface","onFalse","splits","Deletion","red","Func","FuncInterface","paramters","statements","arrowFunctionFormatting","isIndependent","parentParams","ownParams","nameInParent","nameInSelf","defaultValInParent","defaultValInSelf","sup","instance","newMainContext","defaultVal","nestedContext","retrn","body","headNoWrap","head","bodyNoWrap","funcHead","funcBody","param","paramSplit","onTrueIsBlock","onFalseIsBlock","rest","arr2","val1","val2","MathInterface","currentTotal","sub","dec","parseInt","Obj","ObjInterface","entries","_entriesSplit","entry","Presence","PresenceInterface","backticks","sourceContext","subjectContext","separator","nameSplit","exprLc","If","Return","Abstraction","Condition","Comparison","Arr","Num","Str","Bool","Void","VoidInterface","Call","Reference","window","WN","Jsen","WebNative"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\r\n/**\r\n * Tells if val is of type \"array\".\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn Array.isArray(val);\r\n};\r\n","\r\n/**\r\n * Tells if val is of type \"function\".\r\n * This holds true for both regular functions and classes.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn typeof val === 'function';\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeFunction from './isTypeFunction.js';\r\n\r\n/**\r\n * Tells if val is of type \"function\".\r\n *\r\n * @param object \t\tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isTypeFunction(val) || (val && {}.toString.call(val) === '[object function]');\r\n};\r\n","\r\n/**\r\n * Tells if val is pure object.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn !Array.isArray(val) && typeof val === 'object' && val;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeFunction from './isTypeFunction.js';\r\n\r\n/**\r\n * Tells if val is of type \"object\".\r\n * This holds true for anything object, including built-ins.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn Array.isArray(val) || (typeof val === 'object' && val) || _isTypeFunction(val);\r\n};\r\n","\r\n/**\r\n * Tells if val is of type \"number\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val instanceof Number || (typeof val === 'number');\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNumber from './isNumber.js';\r\n/**\r\n * Tells if val is of type \"string\" or a numeric string.\r\n * This holds true for both numbers and numeric strings.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isNumber(val) || (val !== true && val !== false && val !== null && val !== '' && !isNaN(val * 1));\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _pushUnique from '../arr/pushUnique.js';\r\nimport _getPrototypeChain from './getPrototypeChain.js';\r\n\r\n/**\r\n * Eagerly retrieves object members all down the prototype chain.\r\n *\r\n * @param object\t \tobj\r\n * @param object\t \tuntil\r\n *\r\n * @return array\r\n */\r\nexport default function(obj, until) {\r\n\tvar keysAll = [];\r\n\t_getPrototypeChain(obj, until).forEach(obj => {\r\n\t\t_pushUnique(keysAll, ...Object.getOwnPropertyNames(obj));\r\n\t});\r\n\treturn keysAll;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\n\r\n/**\r\n * Returns the prototype chain.\r\n *\r\n * @param object \t\tobj\r\n * @param object\t \tuntil\r\n *\r\n * @return bool\r\n */\r\nexport default function(obj, until) {\r\n\tuntil = until || Object.prototype;\r\n\tuntil = until && !_isArray(until) ? [until] : until;\r\n\t// We get the chain of inheritance\r\n\tvar prototypalChain = [];\r\n\tvar obj = obj;\r\n\twhile((obj && (!until || until.indexOf(obj) < 0) && obj.name !== 'default')) {\r\n\t\tprototypalChain.push(obj);\r\n\t\tobj = obj ? Object.getPrototypeOf(obj) : null;\r\n\t}\r\n\treturn prototypalChain;\r\n};\r\n","\r\n/**\r\n * Adds an item if not already exist.\r\n *\r\n * @param array \tarr\r\n * @param array\t \t...itms\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, ...items) {\r\n\titems.forEach(itm => {\r\n\t\tif (arr.indexOf(itm) < 0) {\r\n\t\t\tarr.push(itm);\r\n\t\t}\r\n\t});\r\n\treturn arr;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\nimport _getAllPropertyNames from './getAllPropertyNames.js';\r\n\r\n/**\r\n  * Merges values from subsequent arrays/objects first array/object;\r\n  * optionally recursive\r\n  *\r\n  * @param array ...objs\r\n  *\r\n  * @return void\r\n  */\r\nexport default function mergeCallback(objs, callback, deepProps = false, isReplace = false, withSymbols = false) {\r\n\tvar depth = 0;\r\n\tvar obj1 = objs.shift();\r\n\tif (_isNumeric(obj1) || obj1 === true || obj1 === false) {\r\n\t\tdepth = obj1;\r\n\t\tobj1 = objs.shift();\r\n\t}\r\n\tif (!objs.length) {\r\n\t\tthrow new Error('_merge() requires two or more array/objects.');\r\n\t}\r\n\tobjs.forEach((obj2, i) => {\r\n\t\tif (!_isTypeObject(obj2) && !_isFunction(obj2)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t(deepProps ? _getAllPropertyNames(obj2) : Object.getOwnPropertyNames(obj2)).forEach(key => {\r\n\t\t\tif (!callback(key, obj1, obj2, i)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar valAtObj1 = obj1[key];\r\n\t\t\tvar valAtObj2 = obj2[key];\r\n\t\t\tif (((_isArray(valAtObj1) && _isArray(valAtObj2)) || (_isObject(valAtObj1) && _isObject(valAtObj2))) \r\n\t\t\t&& (depth === true || depth > 0)) {\r\n\t\t\t\t// RECURSE...\r\n\t\t\t\tobj1[key] = _isArray(valAtObj1) && _isArray(valAtObj2) ? [] : {};\r\n\t\t\t\tmergeCallback([_isNumeric(depth) ? depth - 1 : depth, obj1[key], valAtObj1, valAtObj2], callback, deepProps, isReplace, withSymbols);\r\n\t\t\t} else {\r\n\t\t\t\tif (_isArray(obj1) && _isArray(obj2)) {\r\n\t\t\t\t\tif (isReplace) {\r\n\t\t\t\t\t\tobj1[key] = valAtObj2;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tobj1.push(valAtObj2);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// In case we're setting a read-only property\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tif (withSymbols) {\r\n\t\t\t\t\t\t\tObject.defineProperty(obj1, key, Object.getOwnPropertyDescriptor(obj2, key));\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tobj1[key] = obj2[key];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} catch(e) {}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\treturn obj1;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _mergeCallback from './mergeCallback.js';\r\n\r\n/**\r\n  * Merges values from subsequent arrays/objects first array/object;\r\n  * optionally recursive\r\n  *\r\n  * @param array ...objs\r\n  *\r\n  * @return void\r\n  */\r\nexport default function(...objs) {\r\n\treturn _mergeCallback(objs, (k, obj1, obj2) => {\r\n\t\treturn true;\r\n\t}, false/*deepProps*/, false/*isReplace*/, false/*withSymbols*/);\r\n};\r\n","\r\n/**\r\n * Tells if val is undefined or is null.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val === null || val === '';\r\n};\r\n","\r\n/**\r\n * Tells if val is undefined or is of type \"undefined\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn arguments.length && (val === undefined || typeof val === 'undefined');\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isObject from './isObject.js';\r\n\r\n/**\r\n * Tells if an object is direct instance of Object.prototype.\r\n * Quite useful in differentiating native objects and class instances from plain objects ({}).\r\n *\r\n * @param object \tobj\r\n *\r\n * @return bool\r\n */\r\nexport default function(obj) {\r\n\treturn _isObject(obj) && Object.getPrototypeOf(obj) === Object.prototype;\r\n};\r\n","\r\n/**\r\n * Tells if val is undefined or is of type \"boolean\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val === true || val === false;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\n\r\n/**\r\n * Loops thru obj flatly with a callback function.\r\n * Stops when callback returns a non-undefined value.\r\n *\r\n * @param array|object \t\t\tobj \t\t\tThe array or object to iterate.\r\n * @param function \t\t\t\tcallback \t\tThe callback function.\r\n *\r\n * @return mixed|null\t\t\tAny non-null return from callback\r\n */\r\nexport default function(obj, callback) {\r\n\tvar returnValue = undefined;\r\n\tif (_isTypeObject(obj)) {\r\n\t\tObject.keys(obj).forEach((k, i) => {\r\n\t\t\tif (returnValue !== false) {\r\n\t\t\t\treturnValue = callback(_isNumeric(k) ? parseFloat(k) : k, obj[k], i);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\treturn returnValue;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNumber from '../js/isNumber.js';\r\nimport _isArray from '../js/isArray.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _isPlainObject from '../js/isPlainObject.js';\r\nimport _compareCallback from './compareCallback.js';\r\n\r\n/**\r\n * Asserts (members of) the first value against (members of) subsequent values.\r\n * Assertion could be TRUE, FALSE, or custom.\r\n *\r\n * @param mixed \t\t\tobj1\r\n * @param mixed \t\t\tobj2\r\n * @param bool|function\t\tassertion\r\n * @param int\t\t\t\tdepth\r\n *\r\n * @return bool\r\n */\r\nconst _even = function(obj1, obj2, assertion = true, depth = 1) {\r\n\tif (_isArray(obj1) && _isArray(obj2) && obj1.length !== obj2.length) {\r\n\t\treturn !assertion;\r\n\t}\r\n\tif (_isObject(obj1) && _isObject(obj2)) {\r\n\t\tvar obj1Keys = Object.keys(obj1);\r\n\t\tvar obj2Keys = Object.keys(obj2);\r\n\t\tif (!obj1Keys.length && !obj2Keys.length) {\r\n\t\t\t// Objects that won't show keys must be compared by instance\r\n\t\t\t// Many native objects won't. So we can't judge by keys alone.\r\n\t\t\treturn _isPlainObject(obj1) && _isPlainObject(obj2) \r\n\t\t\t\t? assertion\r\n\t\t\t\t: (obj1 === obj2) === assertion;\r\n\t\t}\r\n\t\tif (!_even(obj1Keys, obj2Keys)) {\r\n\t\t\treturn !assertion;\r\n\t\t}\r\n\t}\r\n\tif (depth > 0 && ((_isArray(obj1) && _isArray(obj2)) || (_isObject(obj1) && _isObject(obj2)))) {\r\n\t\tvar result = _compareCallback(obj1, obj2, (v1, v2) => {\r\n\t\t\treturn _even(v1, v2, assertion, depth - 1);\r\n\t\t}, false/*netComparison*/, false/*contrast*/, true/*returnOnFirstFalse*/);\r\n\t\treturn _isArray(result) \r\n\t\t\t? result.length === obj1.length && result.length === obj2.length \r\n\t\t\t: (_isObject(result) && _isObject(obj1) \r\n\t\t\t\t? Object.keys(result).length === Object.keys(obj1).length && Object.keys(result).length ===  Object.keys(obj2).length \r\n\t\t\t\t: result);\r\n\t}\r\n\treturn _isFunction(assertion) ? assertion(obj1, obj2) : (\r\n\t\t_isNumber(obj1) && _isNumber(obj2) && isNaN(obj1) && isNaN(obj2) \r\n\t\t\t? assertion \r\n\t\t\t: (obj1 === obj2) === assertion\r\n\t);\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default _even;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isBoolean from '../js/isBoolean.js';\r\nimport _each from './each.js';\r\n\r\n/**\r\n * Gets the match(es) between (members of) two values;\r\n * assertion optionally custom.\r\n *\r\n * @param mixed \t\t\tob1\r\n * @param mixed \t\t\tobj2\r\n * @param string|function\tassertion\r\n * @param bool\t\t\t\tnetComparison\r\n * @param bool\t\t\t\tcontrast\r\n * @param bool\t\t\t\treturnOnFirstFalse\r\n *\r\n * @return bool|array|object\r\n */\r\nexport default function(obj1, obj2, assertion = true, netComparison = true, contrast = false, returnOnFirstFalse = false) {\r\n\tif (_isArray(obj1) && _isArray(obj2)) {\r\n\t\tvar result = [];\r\n\t\tvar contn = true;\r\n\t\tobj1.forEach(v1 => {\r\n\t\t\tif (!contn) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar testPass = false;\r\n\t\t\t_each(obj2, (k, v2) => {\r\n\t\t\t\tif (!testPass || (netComparison && _isTypeObject(v1))) {\r\n\t\t\t\t\ttestPass = assertion(v1, v2);\r\n\t\t\t\t\tif ((_isArray(testPass) && !testPass.length) || (_isObject(testPass) && !Object.keys(testPass).length)) {\r\n\t\t\t\t\t\ttestPass = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (_isTypeObject(testPass) && netComparison) {\r\n\t\t\t\t\t\t// Further recursions should use this testPass as v1\r\n\t\t\t\t\t\tv1 = testPass;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (_isTypeObject(testPass)) {\r\n\t\t\t\tresult.push(netComparison ? testPass : v1);\r\n\t\t\t} else if (!_isBoolean(testPass)) {\r\n\t\t\t\tresult.push(testPass);\r\n\t\t\t} else if ((contrast && !testPass) || (!contrast && testPass)) {\r\n\t\t\t\tresult.push(v1);\r\n\t\t\t} else if (returnOnFirstFalse) {\r\n\t\t\t\tcontn = false;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\tif (_isObject(obj1) && _isObject(obj2)) {\r\n\t\tvar result = {};\r\n\t\tvar contn = true;\r\n\t\tObject.keys(obj1).forEach(k => {\r\n\t\t\tif (!contn) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar testPass = assertion(obj1[k], obj2[k]);\r\n\t\t\tif ((_isArray(testPass) && !testPass.length) || (_isObject(testPass) && !Object.keys(testPass).length)) {\r\n\t\t\t\ttestPass = false;\r\n\t\t\t}\r\n\t\t\tif (_isTypeObject(testPass)) {\r\n\t\t\t\tresult[k] = netComparison ? testPass : obj1[k];\r\n\t\t\t} else if (!_isBoolean(testPass)) {\r\n\t\t\t\tresult[k] = testPass;\r\n\t\t\t} else if ((contrast && !testPass) || (!contrast && testPass)) {\r\n\t\t\t\tresult[k] = obj1[k];\r\n\t\t\t} else if (returnOnFirstFalse) {\r\n\t\t\t\tcontn = false;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isObject from '@webqit/util/js/isObject.js';\r\nimport _even from '@webqit/util/obj/even.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ExprInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class {\r\n\t\r\n\t/**\r\n\t * Compares the current instance with another object.\r\n\t *\r\n\t * @param object Expr\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\teven(Expr) {\r\n\t\tif (_isObject(Expr) && Expr.jsenType === this.jsenType) {\r\n\t\t\treturn _even(Expr, this);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Inherits properties from a super Expr.\r\n\t *\r\n\t * @param ExprInterface Super\r\n\t *\r\n\t * @return this\r\n\t */\r\n\tinherit(Super) {\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Adds comments to the instance.\r\n\t *\r\n\t * @param string\t comments\r\n\t *\r\n\t * @return this\r\n\t */\r\n\twithComments(comments) {\r\n\t\tif (!this.meta) {\r\n\t\t\tthis.meta = {};\r\n\t\t}\r\n\t\tthis.meta.comments = comments;\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Adds variables to the instance.\r\n\t *\r\n\t * @param array\t\t vars\r\n\t *\r\n\t * @return this\r\n\t */\r\n\twithVars(vars) {\r\n\t\tif (!this.meta) {\r\n\t\t\tthis.meta = {};\r\n\t\t}\r\n\t\tthis.meta.vars = vars;\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Evaluates the expression instance for a result,\r\n\t * optionally in the context of an object.\r\n\t *\r\n\t * @param object context\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\t//eval(context = null, params = {})\r\n\t\r\n\t/**\r\n\t * SAttempts to parse a string into the class instance.\r\n\t *\r\n\t * @param string expr\r\n\t * @param object params\r\n\t *\r\n\t * @return ExprInterface\r\n\t */\r\n\t//static parse(expr, params = {})\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ReferenceInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Reference'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * CallInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'CallExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from './ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * IndependentScopeInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class extends ExprInterface {};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * IfInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'IfConstruct'; },\r\n});\r\nexport default Interface;\r\n","/**\r\n * SyntaxError\r\n */\r\nexport default class extends Error {\r\n    constructor(...args) {\r\n        super(...args);\r\n        this.name = 'Syntax Error';\r\n    }\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _merge from '@webqit/util/obj/merge.js';\r\nimport _isEmpty from '@webqit/util/js/isEmpty.js';\r\nimport _remove from '@webqit/util/arr/remove.js';\r\nimport _isArray from '@webqit/util/js/isArray.js';\r\nimport ReferenceInterface from './grammar/ReferenceInterface.js';\r\nimport CallInterface from './grammar/CallInterface.js';\r\nimport IndependentExprInterface from './IndependentExprInterface.js';\r\nimport IfInterface from './grammar/IfInterface.js';\r\nimport SyntaxError from './SyntaxError.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Parser class\r\n * ---------------------------\r\n */\t\t\t\t\r\nconst cache = {};\r\nexport default class Parser {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, grammar, params = {}) {\r\n\t\tif (expr.length) {\r\n\t\t\tif (cache[expr] && !grammar && params.allowCache !== false) {\r\n\t\t\t\tvar _parsed;\r\n\t\t\t\tif (_parsed = this.parseOne(expr, cache[expr], params)) {\r\n\t\t\t\t\treturn _parsed;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// -----------------------------\r\n\t\t\tvar _grammar = Object.values(grammar || this.grammar);\r\n\t\t\tfor (var i = 0; i < _grammar.length; i ++) {\r\n\t\t\t\tvar parsed = this.parseOne(expr, _grammar[i], params);\r\n\t\t\t\tif (parsed) {\r\n\t\t\t\t\tif (!grammar && params.allowCache !== false) {\r\n\t\t\t\t\t\tcache[expr] = _grammar[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn parsed;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// -----------------------------\r\n\t\t\tif (params.assert === false) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthrow new SyntaxError(expr);\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\r\n\tstatic parseOne(expr, Expr, params = {}) {\r\n\t\t// From this point forward, all vars is within current scope\r\n\t\tvar meta = createMeta();\r\n\t\tvar parsed = Expr.parse(expr, (_expr, _grammar, _params = {}) => {\r\n\t\t\tvar subStmt = this.parse(_expr, _grammar, _params ? _merge({}, params, _params) : params);\r\n\t\t\tif (subStmt instanceof ReferenceInterface) {\r\n\t\t\t\tvar hasCallHead, _context = subStmt;\r\n\t\t\t\twhile(_context = _context.context) {\r\n\t\t\t\t\tif (_context instanceof CallInterface) {\r\n\t\t\t\t\t\thasCallHead = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tsubStmt.role = _params.role;\r\n\t\t\t\tif (!hasCallHead && _params.role !== 'CONTEXT') {\r\n\t\t\t\t\tvar type = _params.role === 'ASSIGNMENT_SPECIFIER' ? 'writes' \r\n\t\t\t\t\t\t: (_params.role === 'DELETION_SPECIFIER' ? 'deletes' \r\n\t\t\t\t\t\t\t: (_params.role === 'CALL_SPECIFIER' ? 'calls' : 'reads'));\r\n\t\t\t\t\tmeta[type].push(subStmt);\r\n\t\t\t\t}\r\n\t\t\t} else if (subStmt instanceof CallInterface) {\r\n\t\t\t\tmeta.others.push(subStmt);\r\n\t\t\t}\r\n\t\t\tif (subStmt) {\r\n\t\t\t\tObject.keys(subStmt.meta).forEach(type => {\r\n\t\t\t\t\tsubStmt.meta[type].forEach(_var => meta[type].push(_var));\r\n\t\t\t\t});\r\n\t\t\t\tObject.keys(subStmt.meta.deep).forEach(type => {\r\n\t\t\t\t\tif (!meta.deep[type]) {\r\n\t\t\t\t\t\tmeta.deep[type] = [];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsubStmt.meta.deep[type].forEach(_var => meta.deep[type].push(_var));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn subStmt;\r\n\t\t}, params);\r\n\r\n\t\t// Add/remove vars to scope\r\n\t\tif (parsed) {\r\n\t\t\tif (parsed instanceof IndependentExprInterface) {\r\n\t\t\t\tparsed.meta = createMeta();\r\n\t\t\t} else {\r\n\t\t\t\tparsed.meta = meta;\r\n\t\t\t}\r\n\t\t\tif (parsed instanceof CallInterface) {\r\n\t\t\t\tif (parsed.reference.context && !(parsed.reference.context instanceof CallInterface)) {\r\n\t\t\t\t\tparsed.meta.reads.push(parsed.reference.context);\r\n\t\t\t\t}\r\n\t\t\t} else if ((parsed instanceof IfInterface)) {\r\n\t\t\t\t['onTrue', 'onFalse'].forEach(branch => {\r\n\t\t\t\t\tif (parsed[branch]) {\r\n\t\t\t\t\t\tObject.keys(createMeta()).forEach(type => {\r\n\t\t\t\t\t\t\tif (type === 'deep') return;\r\n\t\t\t\t\t\t\tvar variables = parsed.onTrue.meta[type].concat(parsed.onTrue.meta.deep[type] || []);\r\n\t\t\t\t\t\t\tvariables.forEach(_var => {\r\n\t\t\t\t\t\t\t\t_remove(parsed.meta[type], _var);\r\n\t\t\t\t\t\t\t\tif (!parsed.meta.deep[type]) {\r\n\t\t\t\t\t\t\t\t\tparsed.meta.deep[type] = [];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tparsed.meta.deep[type].push(_var);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (_isArray(params.explain)) {\r\n\t\t\t\tparams.explain.push(expr + ' >>------------->> ' + parsed.jsenType);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn parsed;\r\n\t}\r\n};\r\n\r\nfunction createMeta() {\r\n\treturn {reads: [], writes: [], deletes: [], calls: [], others: [], deep: [],};\r\n};","\r\n/**\r\n * Removes instances of reference up to <limit> times.\r\n *\r\n * @param array \tarr\r\n * @param mixed\t \titm\r\n * @param int|bool \tlimit\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, itm, limit = false) {\r\n\tvar i = arr.indexOf(itm);\r\n\twhile (i > -1 && (limit || limit === false)) {\r\n\t\tarr.splice(i, 1);\r\n\t\tif (limit > 0) {\r\n\t\t\tlimit --;\r\n\t\t};\r\n\t\ti = arr.indexOf(itm);\r\n\t};\r\n\treturn arr;\r\n};\r\n","\r\n/**\r\n * Tells if the string is warapped with the given opening and closing tags.\r\n *\r\n * @param  string  subject\r\n * @param  string  openingTag\r\n * @param  string  closingTag\r\n *\r\n * @return bool\r\n */\r\nexport default function(subject, openingTag, closingTag) {\r\n\treturn subject.startsWith(openingTag) && subject.endsWith(closingTag);\r\n};\r\n","\r\n/**\r\n * Return the remainder of a string after a given value.\r\n *\r\n * @param  string  subject\r\n * @param  string  search\r\n * @param  bool\t   afterLast\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, search, afterLast = false) {\r\n\tif (search == '') {\r\n\t\treturn subject;\r\n\t}\r\n\tvar pos = afterLast ? subject.lastIndexOf(search) : subject.indexOf(search);\r\n\tif (pos === -1) {\r\n\t\treturn '';\r\n\t}\r\n\treturn subject.substr(pos + search.length);\r\n};\r\n","\r\n/**\r\n * Return the part of a string before a given value.\r\n *\r\n * @param  string  subject\r\n * @param  string  search\r\n * @param  bool\t   beforeLast\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, search, beforeLast = false) {\r\n\tif (search == '') {\r\n\t\treturn subject;\r\n\t}\r\n\tvar pos = beforeLast ? subject.lastIndexOf(search) : subject.indexOf(search);\r\n\tif (pos === -1) {\r\n\t\treturn subject;\r\n\t}\r\n\treturn subject.substr(0, pos);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _after from './after.js';\r\nimport _beforeLast from './beforeLast.js';\r\n\r\n/**\r\n * Returns the string without the given opening and closing tags.\r\n *\r\n * @param  string  subject\r\n * @param  string  openingTag\r\n * @param  string  closingTag\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, openingTag, closingTag) {\r\n\treturn _beforeLast(_after(subject, openingTag), closingTag);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _before from './before.js';\r\n\r\n/**\r\n * Return the part of a string before last occurence of a given value.\r\n *\r\n * @param  string  subject\r\n * @param  string  search\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, search) {\r\n\treturn _before(subject, search, true);\r\n};\r\n","\r\n/**\r\n * Tells if val is of type \"string\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val instanceof String || (typeof val === 'string' && val !== null);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isTypeArray from '../js/isTypeArray.js';\r\nimport _isEmpty from '../js/isEmpty.js';\r\nimport _isObject from '../js/isObject.js';\r\n\r\n/**\r\n * Casts an array-like object to an array.\r\n *\r\n * @param mixed \tval\r\n * @param bool\t \tcastObject\r\n *\r\n * @return array\r\n */\r\nexport default function(val, castObject = true) {\r\n\tif (_isArray(val)) {\r\n\t\treturn val;\r\n\t};\r\n\tif (!castObject && _isObject(val)) {\r\n\t\treturn [val];\r\n\t};\r\n\tif (val !== false && val !== 0 && _isEmpty(val)) {\r\n\t\treturn [];\r\n\t};\r\n\tif (_isTypeArray(val)) {\r\n\t\treturn Array.prototype.slice.call(val);\r\n\t};\r\n\tif (_isObject(val)) {\r\n\t\treturn Object.values(val);\r\n\t};\r\n\treturn [val];\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNull from './isNull.js';\r\nimport _isUndefined from './isUndefined.js';\r\nimport _isTypeObject from './isTypeObject.js';\r\n\r\n/**\r\n * Tells if val is empty in its own type.\r\n * This holds true for NULLs, UNDEFINED, FALSE, 0,\r\n * objects without keys, empty arrays.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isNull(val) || _isUndefined(val) || val === false || val === 0 \r\n\t\t|| (_isTypeObject(val) && !Object.keys(val).length);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isString from './isString.js';\r\nimport _isUndefined from './isUndefined.js';\r\n\r\n/**\r\n * Tells if val is \"array-like\".\r\n * This holds true for anything that has a length property.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn !_isString(val) && !_isUndefined(val.length);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\n\r\n/**\r\n * Flattens a nested array to the given depth.\r\n *\r\n * @param array \tarr\r\n * @param int \t \tdepth\r\n * @param bool \t \twithObjects\r\n *\r\n * @return array\r\n */\r\nconst _flatten = function(arr, depth = 1, withObjects = true) {\r\n\tif (!_isNumeric(depth) || depth <= 0) {\r\n\t\treturn arr;\r\n\t};\r\n\tif (!_isArray(arr) && _isObject(arr) && withObjects) {\r\n\t\tarr = Object.values(arr);\r\n\t};\r\n\tif (!_isArray(arr)) {\r\n\t\treturn arr;\r\n\t};\r\n\treturn arr.reduce((acc, val) => _isArray(val) || (_isObject(val) && withObjects) \r\n\t\t? acc.concat(_flatten(!_isArray(val) ? Object.values(val) : val, depth - 1, withObjects)) \r\n\t\t: acc.concat(val), []);\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default _flatten;","\r\n/**\r\n * Returns THE FIRST ENTRY OR A NUMBER OF ENTRIES counting forward from the begining.\r\n *\r\n * @param array \tarr\r\n * @param int\t \tamount\r\n *\r\n * @return mixed|array\r\n */\r\nexport default function(arr, amount = 1) {\r\n\tvar count = 0;\r\n\tarr.forEach(itm => {\r\n\t\tcount ++;\r\n\t});\r\n\tvar firsts = arr.slice(arr.length - count, amount);\r\n\treturn arguments.length > 1 ? firsts : firsts[0];\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _first from './first.js';\r\n\r\n/**\r\n * Returns THE LAST ENTRY OR A NUMBER OF ENTRIES counting forward to the end.\r\n *\r\n * @param array \tarr\r\n * @param int\t \tamount\r\n *\r\n * @return mixed|array\r\n */\r\nexport default function(arr, amount = 1) {\r\n\treturn arguments.length > 1\r\n\t\t? _first(arr.slice().reverse(), amount).reverse()\r\n\t\t: _first(arr.slice().reverse());\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _mergeCallback from './mergeCallback.js';\r\n\r\n/**\r\n * Copies only properties of an object.\r\n *\r\n * @param object\t \tobj\r\n * @param array\t\t \tonly\r\n * @param array\t\t \texcept\r\n *\r\n * @return object\r\n */\r\nexport default function(obj, filter = []) {\r\n\treturn _mergeCallback([{}, obj], (key, obj1, obj2) => {\r\n\t\tif (!_isFunction(obj2[key])) {\r\n\t\t\treturn _isFunction(filter) ? filter(key) \r\n\t\t\t\t: (_isArray(filter) && filter.length ? filter.indexOf(key) > -1 : true);\r\n\t\t}\r\n\t}, false/*deepProps*/, false/*isReplace*/, false/*withSymbols*/);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isString from '../js/isString.js';\r\nimport _isUndefined from '../js/isUndefined.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _arrFrom from '../arr/from.js';\r\nimport _flatten from '../arr/flatten.js';\r\nimport _first from '../arr/first.js';\r\nimport _last from '../arr/last.js';\r\nimport _merge from '../obj/merge.js';\r\nimport _even from '../obj/even.js';\r\nimport _copyPlain from '../obj/copyPlain.js';\r\n\r\n/**\r\n * --------------------------\r\n * TOKENIZER\r\n * --------------------------\r\n */\r\n\r\nexport default class Lexer {\r\n\r\n\t/**\r\n\t * Factory method.\r\n\t *\r\n\t * Handles caching.\r\n\t *\r\n\t * @see constructor()\r\n\t */\r\n\tstatic lex(str, delims, options = {}) {\r\n\t\tif (!_isString(str = str + '')) {\r\n\t\t\tthrow new Error('Argument1 must be a string!');\r\n\t\t}\r\n\t\tvar copyResult = result => {\r\n\t\t\treturn {\r\n\t\t\t\tdelims: result.delims.slice(),\r\n\t\t\t\toptions: _copyPlain(result.options),\r\n\t\t\t\tnesting: result.nesting.slice(),\r\n\t\t\t\tmaxDepth: result.maxDepth,\r\n\t\t\t\tcomments: result.comments.slice(),\r\n\t\t\t\ttokens: result.tokens.slice(),\r\n\t\t\t\tmatches: result.matches.slice(),\r\n\t\t\t\tmatchesi: _copyPlain(result.matchesi),\r\n\t\t\t};\r\n\t\t};\r\n\t\t// ASK CACHE ---------------------------\r\n\t\tif (Lexer.$cache[str] && options.cache !== false) {\r\n\t\t\tfor (var i = 0; i < Lexer.$cache[str].length; i ++) {\r\n\t\t\t\tvar cached = Lexer.$cache[str][i];\r\n\t\t\t\tif (_even(cached.delims, delims)) {\r\n\t\t\t\t\treturn copyResult(cached);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// FRESH PARSE\t -------------------------------\r\n\t\tvar instance = new Lexer(str, options);\r\n\t\tvar result = instance.lex(delims);\r\n\t\t// SAVE TO CACHE -------------------------------\r\n\t\tif (options.cache !== false) {\r\n\t\t\tLexer.$cache[str] = Lexer.$cache[str] || [];\r\n\t\t\tLexer.$cache[str].push(result);\r\n\t\t}\r\n\t\treturn copyResult(result);\r\n\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Factory method for .split().\r\n\t *\r\n\t * Handles caching.\r\n\t *\r\n\t * @see constructor()\r\n\t */\r\n\tstatic split(str, delims, options) {\r\n\t\treturn Lexer.lex(str, delims, options).tokens;\r\n\t}\r\n\r\n\t/**\r\n\t * Factory method for .match().\r\n\t *\r\n\t * Handles caching.\r\n\t *\r\n\t * @see constructor()\r\n\t */\r\n\tstatic match(str, delims, options) {\r\n\t\treturn Lexer.lex(str, delims, options).matches;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a lexer instance on a string with the given options.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions:\r\n\t * @param string \t\tblocks\t\t\t\tThe strings that begin and end a nested structure\r\n\t * @param number \t\tlimit\t\t\t\tMax results to return\r\n\t * @param string \t\tbackreference\t\tA character like (\\) that prefixes non-delim characters\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tconstructor(str, options) {\r\n\t\tif (!_isString(str)) {\r\n\t\t\tthrow new Error('Lexer requires the first argument to be a string.');\r\n\t\t}\r\n\t\tthis.$str = str;\r\n\t\tthis.$options = options || {};\r\n\t\tif (!this.$options.blocks) {\r\n\t\t\tthis.$options.blocks = Lexer.$blocks;\r\n\t\t}\r\n\t\tif (!this.$options.quotes) {\r\n\t\t\tthis.$options.quotes = Lexer.$quotes;\r\n\t\t}\r\n\t\tif (!this.$options.comments) {\r\n\t\t\tthis.$options.comments = Lexer.$comments;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the instance string on the given delimeters.\r\n\t *\r\n\t * This method supports static calling,\r\n\t * in which case a string is required as the first argument.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return object\r\n\t */\r\n\tlex(delims, options) {\r\n\t\tvar runtime = {\r\n\t\t\tdelims: _arrFrom(delims),\r\n\t\t\toptions: _merge(true, {}, this.$options, options || {}),\r\n\t\t\tnesting: [],\r\n\t\t\tmaxDepth: 0,\r\n\t\t\tcomments: [],\r\n\t\t\ttokens: [],\r\n\t\t\tmatches: [],\r\n\t\t\tmatchesi: {},\r\n\t\t};\r\n\t\t// Iterate over each character, keep track of current row and column (of the returned array)\r\n\t\tvar cursor = 0;\r\n\t\twhile(typeof cursor === 'number') {\r\n\t\t\tcursor = this._evalCharsAt(runtime, cursor);\r\n\t\t}\r\n\t\tif (runtime.nesting.length) {\r\n\t\t\tthrow new Error('Error parsing the string: ' + this.$str + '. Unterminated blocks: ' + _flatten(runtime.nesting).join(', ') + '');\r\n\t\t}\r\n\t\t// RETURN NEW ----------------------------------\r\n\t\treturn runtime;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: evaluates and handles the character on the current cursor.\r\n\t * Advances the cursor.\r\n\t *\r\n\t * @param object \truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return void\r\n\t */\r\n\t_evalCharsAt(runtime, i) {\r\n\t\tif (i >= this.$str.length) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar charWidth = 1;\r\n\t\tvar commentTest = {}, quoteTest = {}, nestingTest = {};\r\n\t\t// Quotes inside comments must be ignored\r\n\t\tif (!runtime.openComment) {\r\n\t\t\tquoteTest = this._testQuotes(runtime, i);\r\n\t\t}\r\n\t\t// Comments inside quotes must be ignored\r\n\t\tif (!runtime.openQuote) {\r\n\t\t\tcommentTest = this._testComments(runtime, i);\r\n\t\t}\r\n\t\t// Save comments\r\n\t\tif (runtime.openComment || commentTest.ending) {\r\n\t\t\t// Save only outer comments\r\n\t\t\tif (!runtime.nesting.length && !nestingTest.ending) {\r\n\t\t\t\tvar chars = commentTest.starting || commentTest.ending || this.$str[i];\r\n\t\t\t\tcharWidth = chars.length;\r\n\t\t\t\tthis._push(runtime, chars, 'comments', commentTest.starting);\r\n\t\t\t} else {\r\n\t\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t\t}\r\n\t\t} else if (runtime.openQuote || quoteTest.ending) {\r\n\t\t\t// Yes add quotes\r\n\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t} else if (runtime.options.limit && runtime.matches.length === runtime.options.limit) {\r\n\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t\treturn i + 1;\r\n\t\t} else {\r\n\t\t\t// Nesting tags inside comments and quotes have been ignored\r\n\t\t\tnestingTest = this._testNesting(runtime, i);\r\n\t\t\t// ---------------------\r\n\t\t\t// STOP ON THIS CHARACTER...?\r\n\t\t\t// ---------------------\r\n\t\t\tvar nestingTest = this._testNesting(runtime, i);\r\n\t\t\t// STOP CHAR(S)? at top level?\r\n\t\t\tvar stopChar = this._testChars(runtime.options.stopChars || [], runtime, i);\r\n\t\t\tif (!runtime.nesting.length && stopChar !== false) {\r\n\t\t\t\truntime.options.stopChar = stopChar;\r\n\t\t\t\truntime.options.stopCharForward = this.$str.substr(i);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t// ---------------------\r\n\t\t\t// Match and split now...\r\n\t\t\t// ---------------------\r\n\t\t\tif (!runtime.delims.length) {\r\n\t\t\t\t// BLOCK-BASED SPLITTING...\r\n\t\t\t\tif (runtime.nesting.length === 2 && nestingTest.starting) {\r\n\t\t\t\t\truntime.matches.push(null);\r\n\t\t\t\t\tthis._push(runtime, nestingTest.starting);\r\n\t\t\t\t\tcharWidth = nestingTest.starting.length;\r\n\t\t\t\t} else if (!runtime.nesting.length && nestingTest.ending) {\r\n\t\t\t\t\tthis._push(runtime, nestingTest.ending);\r\n\t\t\t\t\tcharWidth = nestingTest.ending.length;\r\n\t\t\t\t\truntime.matches.push(null);\r\n\t\t\t\t} else/*no-nesting flag*/ {\r\n\t\t\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// ---------------------\r\n\t\t\t\t// DELIMS-BASED SPLITTING\r\n\t\t\t\t// ---------------------\r\n\t\t\t\tif (!runtime.nesting.length && !nestingTest.ending) {\r\n\t\t\t\t\t// In case the chars at index 0 is a delim,\r\n\t\t\t\t\t// the resulting split should first have an empty string, instead of undefined\r\n\t\t\t\t\tthis._push(runtime, '');\r\n\t\t\t\t\tvar matchedDelim = this._testChars(runtime.delims, runtime, i);\r\n\t\t\t\t\tif (matchedDelim !== false) {\r\n\t\t\t\t\t\truntime.matches.push(matchedDelim);\r\n\t\t\t\t\t\truntime.matchesi[i] = matchedDelim;\r\n\t\t\t\t\t\tcharWidth = matchedDelim.length || 1;\r\n\t\t\t\t\t\tif (!runtime.options.preserveDelims) {\r\n\t\t\t\t\t\t\t// The current character is a delimiter...\r\n\t\t\t\t\t\t\t// and should not get to appending to the split series down the line\r\n\t\t\t\t\t\t\tvar nextIndex = i + (matchedDelim.length || 1);\r\n\t\t\t\t\t\t\tif (nextIndex === this.$str.length) {\r\n\t\t\t\t\t\t\t\t// In case the chars at last index is a delim,\r\n\t\t\t\t\t\t\t\t// the resulting split should last have an empty string\r\n\t\t\t\t\t\t\t\tthis._push(runtime, '');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn nextIndex;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._push(runtime, matchedDelim || this.$str[i]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar chars = nestingTest.starting || nestingTest.ending || this.$str[i];\r\n\t\t\t\t\tcharWidth = chars.length;\r\n\t\t\t\t\tthis._push(runtime, chars);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn i + charWidth;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a quote start/end character on the current cursor.\r\n\t *\r\n\t * @param object\truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return object\r\n\t */\r\n\t_testQuotes(runtime, i) {\r\n\t\tvar result = {};\r\n\t\t(runtime.options.quotes || []).forEach(quote => {\r\n\t\t\tif (this.$str.substr(i, 1) === quote) {\r\n\t\t\t\tif (!runtime.openQuote) {\r\n\t\t\t\t\truntime.openQuote = quote;\r\n\t\t\t\t\tresult.starting = quote;\r\n\t\t\t\t} else if (quote === runtime.openQuote) {\r\n\t\t\t\t\truntime.openQuote = false;\r\n\t\t\t\t\tresult.ending = quote;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a comment start/end character on the current cursor.\r\n\t *\r\n\t * @param object\truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return object\r\n\t */\r\n\t_testComments(runtime, i) {\r\n\t\tvar result = {};\r\n\t\t(runtime.options.comments || []).forEach(block => {\r\n\t\t\tif (!runtime.openComment) {\r\n\t\t\t\tvar starting = _first(block);\r\n\t\t\t\tif (this.$str.substr(i).startsWith(starting)) {\r\n\t\t\t\t\truntime.openComment = block;\r\n\t\t\t\t\tresult.starting = starting;\r\n\t\t\t\t}\r\n\t\t\t} else if (_last(block) === _last(runtime.openComment)) {\r\n\t\t\t\tvar ending = _last(block);\r\n\t\t\t\tif (this.$str.substr(i).startsWith(ending)) {\r\n\t\t\t\t\truntime.openComment = false;\r\n\t\t\t\t\tresult.ending = ending;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a nesting start/end character on the current cursor.\r\n\t *\r\n\t * @param object\truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return object\r\n\t */\r\n\t_testNesting(runtime, i) {\r\n\t\tvar result = {};\r\n\t\t(runtime.options.blocks || []).forEach(block => {\r\n\t\t\tvar starting = _first(block);\r\n\t\t\tif (this.$str.substr(i).startsWith(starting)) {\r\n\t\t\t\truntime.nesting = runtime.nesting.concat([block]);\r\n\t\t\t\tresult.starting = starting;\r\n\t\t\t} else if (runtime.nesting.length && _last(block) === _last(_last(runtime.nesting))) {\r\n\t\t\t\tvar ending = _last(block);\r\n\t\t\t\tif (this.$str.substr(i).startsWith(ending)) {\r\n\t\t\t\t\truntime.nesting = runtime.nesting.slice(0, -1);\r\n\t\t\t\t\tresult.ending = ending;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\truntime.maxDepth = Math.max(runtime.maxDepth, runtime.nesting.length);\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a delimiter or stop character on the current cursor.\r\n\t *\r\n\t * @param array\t\ttestList\r\n\t * @param object \truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\t_testChars(testList, runtime, i) {\r\n\t\tfor (var k = 0; k < testList.length; k ++) {\r\n\t\t\tvar test = testList[k];\r\n\t\t\tif (_isFunction(test)) {\r\n\t\t\t\tvar ret = test(this.$str.substr(0, i), this.$str.substr(i));\r\n\t\t\t\tif (ret !== false) {\r\n\t\t\t\t\treturn ret;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (runtime.options.useRegex) {\r\n\t\t\t\tvar m = this.$str.substr(i).match(new RegExp('^' + test, runtime.options.useRegex !== true ? runtime.options.useRegex : ''));\r\n\t\t\t\tif (m) {\r\n\t\t\t\t\treturn m[0];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ((!runtime.options.ci && this.$str.substr(i, test.length) === test)\r\n\t\t\t|| (runtime.options.ci && this.$str.substr(i, test.length).toLowerCase() === test.toLowerCase())) {\r\n\t\t\t\treturn test;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Expr helper: pushes a character or set of characters into the current split series.\r\n\t *\r\n\t * @param object \truntime\r\n\t * @param string\tchars\r\n\t * @param string\ttarget\r\n\t * @param bool\t\tisNewSeries\r\n\t *\r\n\t * @return void\r\n\t */\r\n\t_push(runtime, chars, target = 'tokens', isNewSeries = false) {\r\n\t\tvar splitSeries = runtime.matches.length;\r\n\t\tif (_isUndefined(runtime.tokens[splitSeries])) {\r\n\t\t\truntime.tokens[splitSeries] = '';\r\n\t\t}\r\n\r\n\t\tif (target === 'comments') {\r\n\t\t\tif (!runtime.tokens[splitSeries].comments) {\r\n\t\t\t\truntime.tokens[splitSeries] = new String(runtime.tokens[splitSeries]);\r\n\t\t\t\truntime.tokens[splitSeries].comments = [];\r\n\t\t\t}\r\n\t\t\tvar splitSeries2 = runtime.tokens[splitSeries].comments.length - (!runtime.tokens[splitSeries].comments.length || isNewSeries ? 0 : 1);\r\n\t\t\truntime.tokens[splitSeries].comments[splitSeries2] = (runtime.tokens[splitSeries].comments[splitSeries2] || '') + chars;\r\n\t\t} else {\r\n\t\t\tvar comments = runtime.tokens[splitSeries].comments;\r\n\t\t\truntime.tokens[splitSeries] = runtime.tokens[splitSeries] + chars;\r\n\t\t\t//runtime.tokens[splitSeries].comments = comments;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Splits the instance string on the given delimeters and returns the tokens.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tsplit(str, delims, options) {\r\n\t\treturn this.lex(delims, options).tokens;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Splits the instance string on the given delimeters and returns the matches.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions:\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tmatch(str, delims, options) {\r\n\t\treturn this.lex(delims, options).matches;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Parses the instance string on the given delimeters using regex.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return object\r\n\t */\r\n\tregParse(delims, options) {\r\n\t\treturn this.lex(delims, _merge({useRegex: true}, options || {}));\r\n\t}\r\n\t\r\n\t/**\r\n\t * Splits the instance string on the given delimeters using regex; returns the tokens.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tregSplit(delims, options) {\r\n\t\treturn this.regParse(delims, options).tokens;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Matches the instance string on the given delimeters using regex; returns the matches.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tregMatch(delims, options) {\r\n\t\treturn this.regParse(delims, options).matches;\r\n\t}\r\n};\r\n\r\n/**\r\n * @var array\r\n */\r\nLexer.$blocks = [['(', ')'], ['[', ']'], ['{', '}'],];\r\n\r\n/**\r\n * @var array\r\n */\r\nLexer.$quotes = ['\"', \"'\", '`',];\r\n\r\n/**\r\n * @var array\r\n */\r\nLexer.$comments = [['/*', '*/'], ['//', \"\\n\"],];\r\n\r\n/**\r\n * @var object\r\n */\r\nLexer.$cache = {};","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * AbstractionInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Abstraction'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport AbstractionInterface from './AbstractionInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Abstraction class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Abstraction = class extends AbstractionInterface {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(expr) {\r\n\t\tsuper();\r\n\t\tthis.expr = expr;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.expr.eval(context, params);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn '(' + this.expr.stringify(params) + ')';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (_wrapped(expr, '(', ')') && !Lexer.match(expr, [' ']).length && Lexer.split(expr, []).length === 2/* recognizing the first empty slot */) {\r\n\t\t\treturn new this(\r\n\t\t\t\tparseCallback(_unwrap(expr, '(', ')'))\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Abstraction;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ArrInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'ArrayType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\nimport ArrInterface from './ArrInterface.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Array utils\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Arr = class extends ArrInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(exprs) {\r\n\t\tsuper();\r\n\t\tthis.exprs = exprs || [];\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tinherit(Super) {\r\n\t\tif (Super instanceof ArrInterface) {\r\n\t\t\tvar newExprs = Super.exprs.filter(exprA => {\r\n\t\t\t\treturn this.exprs.reduce((uniqueSoFar, exprB) => uniqueSoFar && !exprA.even(exprB), true);\r\n\t\t\t});\r\n\t\t\tthis.exprs = newExprs.concat(this.exprs);\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.exprs.map(expr => expr.eval(context, params));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn '[' + this.exprs.map(expr => expr.stringify(params)).join(', ') + ']';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (_wrapped(expr, '[', ']') && !Lexer.match(expr.trim(), [' ']).length) {\r\n\t\t\tvar splits = Lexer.split(_unwrap(expr, '[', ']'), [','])\r\n\t\t\t\t.map(n => n.trim()).filter(n => n).map(expr => parseCallback(expr));\r\n\t\t\treturn new this(splits);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @export\r\n */\r\nexport default Arr;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ArgumentsInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Arguments'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport ArgumentsInterface from './ArgumentsInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Arguments class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Arguments = class extends ArgumentsInterface {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(list = []) {\r\n\t\tsuper();\r\n\t\tthis.list = list;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.list.map(arg => arg.eval(context, params));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn '(' + this.list.map(arg => arg.stringify(params)).join(', ') + ')';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar args; expr = expr.trim();\r\n\t\tif (_wrapped(expr, '(', ')') && !Lexer.match(expr, [' ']).length) {\r\n\t\t\treturn new this(\r\n\t\t\t\tLexer.split(_unwrap(expr, '(', ')'), [',']).map(arg => parseCallback(arg.trim()))\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Arguments;\r\n","\r\n/**\r\n * Returns a list of unique items.\r\n *\r\n * @param array\t \t\t\t\tarr\r\n *\t *\r\n * @return array\r\n */\r\nexport default function(arr) {\r\n\tconst distinct = (value, index, self) => {\r\n\t\treturn self.indexOf(value) === index;\r\n\t};\r\n\treturn arr.filter(distinct);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * AssertionInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'AssertionExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _first from '@webqit/util/arr/first.js';\r\nimport _flatten from '@webqit/util/arr/flatten.js';\r\nimport _unique from '@webqit/util/arr/unique.js';\r\nimport AssertionInterface from './AssertionInterface.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Assertion class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Assertion = class extends AssertionInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(exprs, logic) {\r\n\t\tsuper();\r\n\t\tthis.exprs = exprs;\r\n\t\tthis.logic = logic;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\t eval(context = null, params = {}) {\r\n\t\tvar Assertion = this.constructor;\r\n\t\tif (this.logic.toLowerCase() === Assertion.negation.toLowerCase()) {\r\n\t\t\treturn !_first(this.exprs).eval(context, params);\r\n\t\t}\r\n\t\tvar operators = _flatten(Assertion.operators);\r\n\t\tvar logic = (this.logic || '').trim().toUpperCase();\r\n\t\tvar isOr = logic === (Assertion.operators.or || '').trim().toUpperCase();\r\n\t\tvar isNor = logic === (Assertion.operators.nor || '').trim().toUpperCase();\r\n\t\tvar isAnd = logic === (Assertion.operators.and || '').trim().toUpperCase();\r\n\t\tvar isNand = logic === (Assertion.operators.nand || '').trim().toUpperCase();\r\n\t\tvar lastResult = true, trues = 0;\r\n\t\tfor(var i = 0; i < this.exprs.length; i ++) {\r\n\t\t\tlastResult = this.exprs[i].eval(context, params);\r\n\t\t\tif (isAnd && !lastResult) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (isNand && !lastResult) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tif (isOr && lastResult) {\r\n\t\t\t\treturn lastResult;\r\n\t\t\t}\r\n\t\t\ttrues += lastResult ? 1 : 0;\r\n\t\t}\r\n\t\tif (isOr) {\r\n\t\t\t// Which is falsey,\r\n\t\t\t// by virtue of getting here\r\n\t\t\treturn lastResult;\r\n\t\t}\r\n\t\tif (isAnd || isNand) {\r\n\t\t\t// For AND and NAND, all entries must be true by now,\r\n\t\t\t// by virtue of getting here.\r\n\t\t\t// For AND, this means true; for NAND, false\r\n\t\t\treturn isAnd;\r\n\t\t}\r\n\t\t// For NOR, all entries need to be false\r\n\t\treturn isNor && trues === 0;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\tvar Assertion = this.constructor;\r\n\t\tif (this.logic.toLowerCase() === Assertion.negation.toLowerCase()) {\r\n\t\t\treturn this.logic + _first(this.exprs).stringify(params);\r\n\t\t}\r\n\t\treturn this.exprs.map(expr => expr.stringify(params)).join(' ' + this.logic + ' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (expr.toUpperCase().startsWith(this.negation.toUpperCase())) {\r\n\t\t\treturn new this(\r\n\t\t\t\t[parseCallback(expr.substr(this.negation.length))],\r\n\t\t\t\tthis.negation\r\n\t\t\t);\r\n\t\t}\r\n\t\tvar parse = Lexer.lex(expr, _flatten(this.operators));\r\n\t\tif (parse.tokens.length > 1) {\r\n\t\t\tvar logic = _unique(parse.matches);\r\n\t\t\tif (logic.length > 1) {\r\n\t\t\t\tthrow new Error('\"AND\" and \"OR\" logic cannot be asserted in the same expression: ' + expr + '!');\r\n\t\t\t}\r\n\t\t\treturn new this(\r\n\t\t\t\tparse.tokens.map(expr => parseCallback(expr.trim())),\r\n\t\t\t\t_first(logic)\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nAssertion.negation = '!';\r\n\r\n/**\r\n * @prop object\r\n */\r\nAssertion.operators = {\r\n\tand: '&&',\r\n\tor: '||',\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Assertion;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * AssignmentInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'AssignmentExpression'; },\r\n});\r\nexport default Interface;\r\n","/**\r\n * ReferenceError\r\n */\r\nexport default class extends Error {\r\n    constructor(...args) {\r\n        super(...args);\r\n        this.name = 'Reference Error';\r\n    }\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _last from '@webqit/util/arr/last.js';\r\nimport _before from '@webqit/util/str/before.js';\r\nimport _after from '@webqit/util/str/after.js';\r\nimport _isNumber from '@webqit/util/js/isNumber.js';\r\nimport _isArray from '@webqit/util/js/isArray.js';\r\nimport _isUndefined from '@webqit/util/js/isUndefined.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport AssignmentInterface from './AssignmentInterface.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport SyntaxError from '../SyntaxError.js';\r\nimport ReferenceError from '../ReferenceError.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Assignment class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Assignment = class extends AssignmentInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(initKeyword, reference, val, operator = '=', postIncrDecr = false) {\r\n\t\tsuper();\r\n\t\tthis.initKeyword = initKeyword;\r\n\t\tthis.reference = reference;\r\n\t\tthis.val = val;\r\n\t\tthis.operator = operator;\r\n\t\tthis.postIncrDecr = postIncrDecr;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\tvar val, initialVal, reference = this.reference.getEval(context, params);\r\n\t\tif (['++', '--'].includes(this.operator)) {\r\n\t\t\tinitialVal = this.reference.eval(context, params);\r\n\t\t\tif (!_isNumber(initialVal)) {\r\n\t\t\t\tthrow new Error(this.reference + ' must be a number!');\r\n\t\t\t}\r\n\t\t\tif (this.operator === '++') {\r\n\t\t\t\tval = initialVal + 1;\r\n\t\t\t} else {\r\n\t\t\t\tval = initialVal - 1;\r\n\t\t\t}\r\n\t\t} else if (['+=', '-=', '*=', '/='].includes(this.operator)) {\r\n\t\t\tvar operandA = reference.get();\r\n\t\t\tvar operandB = this.val.eval(context, params);\r\n\t\t\tif (this.operator !== '+=' && (!_isNumber(operandA) || !_isNumber(operandB))) {\r\n\t\t\t\tthrow new Error(this + ' - operands must each be a number!');\r\n\t\t\t}\r\n\t\t\tif (this.operator === '*=') {\r\n\t\t\t\tval = operandA * operandB;\r\n\t\t\t} else if (this.operator === '/=') {\r\n\t\t\t\tval = operandA / operandB;\r\n\t\t\t} else if (this.operator === '-=') {\r\n\t\t\t\tval = operandA - operandB;\r\n\t\t\t} else {\r\n\t\t\t\tval = operandA + operandB;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tval = this.val.eval(context, params);\r\n\t\t}\r\n\t\ttry {\r\n\t\t\treference.set(val, this.initKeyword);\r\n\t\t\tif (params && _isArray(params.references)) {\r\n\t\t\t\t_pushUnique(params.references, this.reference.toString());\r\n\t\t\t}\r\n\t\t\treturn this.postIncrDecr ? initialVal : val;\r\n\t\t} catch(e) {\r\n\t\t\tif (e instanceof ReferenceError) {\r\n\t\t\t\tthrow new ReferenceError('[' + this + ']: ' + e.message);\r\n\t\t\t} else {\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\tif (['++', '--'].includes(this.operator)) {\r\n\t\t\treturn this.postIncrDecr \r\n\t\t\t\t? this.reference.stringify(params) + this.operator\r\n\t\t\t\t: this.operator + this.reference.stringify(params);\r\n\t\t}\r\n\t\treturn (this.initKeyword ? this.initKeyword + ' ' : '')\r\n\t\t\t+ [this.reference.stringify(params), this.operator, this.val.stringify(params)].join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar parse = Lexer.lex(expr, this.operators.concat([testBlockEnd]));\r\n\t\tif (parse.matches.length) {\r\n\t\t\tvar initKeyword, reference, val, operator = parse.matches[0].trim(), isIncrDecr = ['++', '--'].includes(operator), postIncrDecr;\r\n\t\t\tif (isIncrDecr) {\r\n\t\t\t\tpostIncrDecr = (expr.trim().endsWith('++') || expr.trim().endsWith('--'));\r\n\t\t\t\treference = parse.tokens[postIncrDecr ? 'shift' : 'pop']().trim();\r\n\t\t\t} else {\r\n\t\t\t\treference = parse.tokens.shift().trim();\r\n\t\t\t\tval = parse.tokens.shift().trim();\r\n\t\t\t}\r\n\t\t\tif (['var', 'let', 'const'].includes(_before(reference, ' '))) {\r\n\t\t\t\tif (operator !== '=') {\r\n\t\t\t\t\tthrow new SyntaxError('Invalid declaration: ' + expr);\r\n\t\t\t\t}\r\n\t\t\t\tinitKeyword = _before(reference, ' ');\r\n\t\t\t\treference = _after(reference, ' ').trim();\r\n\t\t\t}\r\n\t\t\tif (!((reference = parseCallback(reference, null, {role: 'ASSIGNMENT_SPECIFIER'})) instanceof ReferenceInterface) \r\n\t\t\t|| (!isIncrDecr && !(val = parseCallback(val)))) {\r\n\t\t\t\tthrow new SyntaxError(expr);\r\n\t\t\t}\r\n\t\t\treturn new this(initKeyword, reference, val, operator, postIncrDecr);\r\n\t\t}\r\n\t}\r\n};\t\r\n\r\n/**\r\n * @prop array\r\n */\r\nAssignment.operators = [\r\n\t'+=',\r\n\t'-=',\r\n\t'*=',\r\n\t'/=',\r\n\t'++',\r\n\t'--',\r\n];\r\n\r\nconst testBlockEnd = (a, b) => {\r\n\t// Match exactly \"=\", not \"=>\", \"==\", \"===\"\r\n\tif (!a.endsWith('=') && b.startsWith('=') && !b.startsWith('=>') && !b.startsWith('==') && !b.startsWith('===')) {\r\n\t\treturn '=';\r\n\t}\r\n\treturn false;\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Assignment;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * BlockInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Block'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ReturnInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'ReturnDirective'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * DeletionInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'DeleteExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * NumInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'NumberType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * StrInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'StringType'; },\r\n});\r\nexport default Interface;\r\n","/**\r\n * @imports\r\n */\r\nimport _isString from '@webqit/util/js/isString.js';\r\nimport CallInterface from './grammar/CallInterface.js';\r\nimport NumInterface from './grammar/NumInterface.js';\r\nimport StrInterface from './grammar/StrInterface.js';\r\n\r\n\r\n/**\r\n * UTILS\r\n */\r\nexport function pathStartsWith(a, b) {\r\n\treturn b.reduce((prev, value, i) => prev && value === a[i], true);\r\n};\r\nexport function pathAfter(a, b) {\r\n\treturn a.slice(b.length);\r\n};\r\nexport function pathIsSame(a, b) {\r\n\treturn a.length === b.length && a.reduce((prev, value, i) => prev && value === b[i], true);\r\n};\r\nexport function referencesToPaths(references) {\r\n    return references.map(expr => {\r\n        var seg = expr, pathArray = [];\r\n        do {\r\n            if (seg instanceof CallInterface) {\r\n                pathArray.splice(0);\r\n                seg = seg.reference;\r\n            }\r\n            if (_isString(seg.name)) {\r\n                pathArray.unshift(seg.name);\r\n            } else if (seg.name instanceof NumInterface) {\r\n                pathArray.unshift(seg.name.int);\r\n            } else if (seg.name instanceof StrInterface) {\r\n                pathArray.unshift(seg.name.expr);\r\n            } else {\r\n                pathArray.splice(0);\r\n            }\r\n        } while(seg = seg.context);\r\n        return pathArray;\r\n    });\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeObject from '@webqit/util/js/isTypeObject.js';\r\nimport _isUndefined from '@webqit/util/js/isUndefined.js';\r\nimport _isFunction from '@webqit/util/js/isFunction.js';\r\nimport _isClass from '@webqit/util/js/isClass.js';\r\nimport _isString from '@webqit/util/js/isString.js';\r\nimport _isNull from '@webqit/util/js/isNull.js';\r\nimport _isNumber from '@webqit/util/js/isNumber.js';\r\nimport _after from '@webqit/util/str/after.js';\r\nimport _before from '@webqit/util/str/before.js';\r\nimport _unique from '@webqit/util/arr/unique.js';\r\nimport ReferenceError from './ReferenceError.js';\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default class Scope {\r\n\r\n\t/**\r\n\t * Creates a new context stack.\r\n\t *\r\n\t * @param object\t \tparams\r\n\t * @param object\t\tparams\r\n\t *\r\n\t * @return Scope\r\n\t */\r\n\tconstructor(stack, params = {}) {\r\n\t\tif (!('main' in stack)) {\r\n\t\t\tthrow new Error('A \"main\" context must be provided!');\r\n\t\t}\r\n\t\tObject.defineProperty(this, 'stack', {value: stack || {}, enumerable: false});\r\n\t\tObject.defineProperty(this, 'params', {value: params || {}, enumerable: false});\r\n\t\tif (stack.super) {\r\n\t\t\tObject.defineProperty(this.stack, 'super', {value: Scope.create(stack.super, {errorLevel: params.errorLevel}), enumerable: false});\r\n\t\t}\r\n\t\tObject.defineProperty(this.stack, 'local', {value: stack.local || {}, enumerable: false});\r\n\t\tObject.defineProperty(this.stack, '$local', {value: stack.$local || {}, enumerable: false});\r\n\t}\r\n\r\n\t/**\r\n\t * Binds a callback to changes\r\n\t * that happen in the contexts.\r\n\t *\r\n\t * @param object\t\t \ttrap\r\n\t * @param function\t\t \tcallback\r\n\t *\r\n\t * @return Scope\r\n\t */\r\n\tobserve(trap, callback, params = {}) {\r\n\t\tif (this.stack.super) {\r\n\t\t\tthis.stack.super.observe(trap, (e) => {\r\n\t\t\t\tif (e.props.filter(prop => !_has(this.stack.local, prop, trap) && !_has(this.stack.main, prop, trap)).length) {\r\n\t\t\t\t\te.scope = 'super';\r\n\t\t\t\t\treturn callback(e);\r\n\t\t\t\t}\r\n\t\t\t}, params);\r\n\t\t}\r\n\t\t\r\n\t\tvar _params  = {...params};\r\n\t\t_params.subtree = 'auto';\r\n\t\t_params.tags = [this, 'jsen-context',];\r\n\t\t_params.diff = true;\r\n\r\n\t\ttrap.observe(this.stack, /*[ ['main'], ['local'] ], */changes => {\r\n\t\t\tvar references = [];\r\n\t\t\tchanges.forEach(c => {\r\n\t\t\t\t// Changes firing directly from super and local should be ignored\r\n\t\t\t\tif (c.name === 'main') {\r\n\t\t\t\t\tif (c.path.length > 1) {\r\n\t\t\t\t\t\treferences.push(c.path.slice(1));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvar keysMain = _unique((_isTypeObject(c.value) ? Object.keys(c.value) : []).concat(c.oldValue && _isTypeObject(c.oldValue) ? Object.keys(c.oldValue) : []));\r\n\t\t\t\t\t\treferences.push(...keysMain.map(k => [k]));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treferences = references.filter(ref => !_has(this.stack.local, ref[0], trap));\r\n\t\t\tif (references.length) {\r\n\t\t\t\tvar props = references.map(ref => ref[0]);\r\n\t\t\t\t//console.log('>>>>>>>>>>>>>>>>>>>>', references.map(e => e.join('/')).join('     |    '))\r\n\t\t\t\treturn callback({\r\n\t\t\t\t\tprops,\r\n\t\t\t\t\treferences,\r\n\t\t\t\t\tscope: 'local',\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}, _params);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Unbinds callbacks previously bound\r\n\t * with observe()\r\n\t *\r\n\t * @param object\t\t \ttrap\r\n\t * @param function\t\t \tcallback\r\n\t *\r\n\t * @return Scope\r\n\t */\r\n\tunobserve(trap, callback) {\r\n\t\tif (this.stack.super) {\r\n\t\t\tthis.stack.super.unobserve(trap, callback);\r\n\t\t}\r\n\t\ttrap.unobserve(this.stack, callback, {\r\n\t\t\tsubtree: 'auto',\r\n\t\t\ttags: [this, 'jsen-context',],\r\n\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Tries the handler on the different contexts in the stack.\r\n\t *\r\n\t * @param string|number \tprop\r\n\t * @param function\t\t \tcallback\r\n\t * @param function\t\t \tfinal\r\n\t *\r\n\t * @return Scope\r\n\t */\r\n\thandle(prop, callback, final, level = 0) {\r\n\t\tvar callMain = () => {\r\n\t\t\treturn callback(this.stack.main, null, () => {\r\n\t\t\t\tif (this.stack.super) {\r\n\t\t\t\t\treturn this.stack.super.handle(prop, callback, final, level + 1);\r\n\t\t\t\t}\r\n\t\t\t\tif (final) {\r\n\t\t\t\t\treturn final();\r\n\t\t\t\t}\r\n\t\t\t}, level);\r\n\t\t};\r\n\t\t// Normally, we would begin with local...\r\n\t\t// but no if...\r\n\t\tif (prop === 'toString' && this.stack.local.toString === Object.prototype.toString) {\r\n\t\t\treturn callMain();\r\n\t\t}\r\n\t\t// Conditions are right, we begin with local\r\n\t\treturn callback(this.stack.local, this.stack.$local, callMain, level);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a property's value from the first possessing context.\r\n\t *\r\n\t * @param string|number prop\r\n\t * @param object\t\ttrap\r\n\t * @param bool\t\t\tbindThis\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\tget(prop, trap = {}, bindThis = true) {\r\n\t\tif (prop instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop = prop + '';\r\n\t\t}\r\n\t\treturn this.handle(prop, (contxtObj, contxtMeta, advance, level) => {\r\n\t\t\tvar val = _get(contxtObj, prop, trap);\r\n\t\t\t// asking first mught not go well generally && _has(this[i], prop, trap)\r\n\t\t\tif (!_isUndefined(val) || _has(contxtObj, prop, trap)) {\r\n\t\t\t\tif (_isFunction(val) && !_isClass(val) && bindThis) {\r\n\t\t\t\t\treturn val.bind(contxtObj);\r\n\t\t\t\t}\r\n\t\t\t\treturn val;\r\n\t\t\t}\r\n\t\t\treturn advance();\r\n\t\t}/* Not good for RQL derived fields , () => {throw new ReferenceError('\"' + prop + '\" is undefined!');}*/);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Updates a property's value from the first possessing context.\r\n\t * Or adds a new context to set the property.\r\n\t *\r\n\t * @param string|number prop\r\n\t * @param mixed\t\t\tval\r\n\t * @param object\t\ttrap\r\n\t * @param bool\t\t\tinitKeyword\r\n\t * @param bool\t\t\tisRootVar\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tset(prop, val, trap = {}, initKeyword = false, isRootVar = true) {\r\n\t\tif (this.params.type === 2 && initKeyword === 'var' && this.stack.super) {\r\n\t\t\treturn this.stack.super.set(prop, val, trap, initKeyword);\r\n\t\t}\r\n\t\tif (prop instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop = prop + '';\r\n\t\t}\r\n\t\tconst _set = (cntxt, prop, val, trap) => {\r\n\t\t\tif (trap.set) {\r\n\t\t\t\treturn trap.set(cntxt, prop, val);\r\n\t\t\t}\r\n\t\t\tcntxt[prop] = val;\r\n\t\t\treturn true;\r\n\t\t};\r\n\t\treturn this.handle(initKeyword ? true : prop, (contxtObj, localContxtMeta, advance, level) => {\r\n\t\t\t// Whatever the level of localContext...\r\n\t\t\tif (localContxtMeta && localContxtMeta[prop] === 'const') {\r\n\t\t\t\tthrow new LogicalError('CONST ' + prop + ' cannot be modified!');\r\n\t\t\t}\r\n\t\t\t// Set this locally, we wont be getting to advance()\r\n\t\t\tif (initKeyword) {\r\n\t\t\t\tlocalContxtMeta[prop] = initKeyword;\r\n\t\t\t\treturn _set(contxtObj, prop, val, trap);\r\n\t\t\t}\r\n\t\t\t// For any other contex, it must already exists\r\n\t\t\tif (_has(contxtObj, prop, trap)) {\r\n\t\t\t\treturn _set(contxtObj, prop, val, trap);\r\n\t\t\t}\r\n\t\t\ttry {\r\n\t\t\t\treturn advance();\r\n\t\t\t} catch(e) {\r\n\t\t\t\tif ((e instanceof ReferenceError) && contxtObj && !localContxtMeta && level === 0 && this.params.strictMode === false) {\r\n\t\t\t\t\t// Assign to undeclared variables\r\n\t\t\t\t\treturn _set(contxtObj, prop, val, trap);\r\n\t\t\t\t}\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t}, () => {throw new ReferenceError('\"' + prop + '\" does not exist in scope!');});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Deletes a property from the first possessing context.\r\n\t *\r\n\t * @param string|number prop\r\n\t * @param object\t\ttrap\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tdel(prop, trap = {}) {\r\n\t\tif (prop instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop = prop + '';\r\n\t\t}\r\n\t\treturn this.handle(prop, (contxtObj, contxtMeta, advance) => {\r\n\t\t\tif (_has(contxtObj, prop, trap)) {\r\n\t\t\t\tif (contxtMeta) {\r\n\t\t\t\t\tdelete contxtMeta[prop];\r\n\t\t\t\t}\r\n\t\t\t\tif (trap.deleteProperty || trap.del) {\r\n\t\t\t\t\treturn (trap.deleteProperty || trap.del)(contxtObj, prop);\r\n\t\t\t\t}\r\n\t\t\t\tdelete contxtObj[prop];\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn advance();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Tests if a property exists in any context.\r\n\t *\r\n\t * @param string|number prop\r\n\t * @param string|number prop2\r\n\t * @param object\t\ttrap\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\thas(prop, prop2, trap = {}) {\r\n\t\tif (prop instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop = prop + '';\r\n\t\t}\r\n\t\tif (prop2 instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop2 = prop2 + '';\r\n\t\t}\r\n\t\treturn this.handle(prop, (contxtObj, contxtMeta, advance) => {\r\n\t\t\tif (_has(contxtObj, prop, trap)) {\r\n\t\t\t\tvar contextObj2 = _get(contxtObj, prop, trap);\r\n\t\t\t\treturn _has(contextObj2, prop2, trap);\r\n\t\t\t}\r\n\t\t\treturn advance();\r\n\t\t}, () => {throw new ReferenceError('\"' + prop + '\" is undefined!');});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Tests if a property exists in any context.\r\n\t *\r\n\t * @param string|number prop\r\n\t * @param array\t\t\targs\r\n\t * @param object\t\ttrap\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\texec(prop, args, trap = {}) {\r\n\t\tif (prop instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop = prop + '';\r\n\t\t}\r\n\t\treturn this.handle(prop, (contxtObj, contxtMeta, advance) => {\r\n\t\t\tvar fn = _get(contxtObj, prop, trap);\r\n\t\t\tif (!_isUndefined(fn) || _has(contxtObj, prop, trap)) {\r\n\t\t\t\tif (!_isFunction(fn)) {\r\n\t\t\t\t\tif (trap.exec) {\r\n\t\t\t\t\t\treturn trap.exec(contxtObj, prop, args);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthrow new ReferenceError('\"' + prop + '\" is not a function! (Called on type: ' + typeof contxtObj + '.)');\r\n\t\t\t\t}\r\n\t\t\t\tif (trap.apply) {\r\n\t\t\t\t\treturn trap.apply(fn, contxtObj, args);\r\n\t\t\t\t}\r\n\t\t\t\treturn fn.apply(contxtObj, args);\r\n\t\t\t}\r\n\t\t\treturn advance();\r\n\t\t}, () => {\r\n\t\t\tif (trap.execUnknown) {\r\n\t\t\t\treturn trap.execUnknown(this, prop, args);\r\n\t\t\t}\r\n\t\t\tthrow new ReferenceError('\"' + prop + '()\" is undefined!');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Factory method for making a Scope instance.\r\n\t *\r\n\t * @param array|object \tcntxt\r\n\t * @param object \t\tparams\r\n\t * @param object \t\ttrap\r\n\t *\r\n\t * @return Scope\r\n\t */\r\n\tstatic create(cntxt, params = {}, trap = {}) {\r\n\t\tif (cntxt instanceof Scope) {\r\n\t\t\treturn cntxt;\r\n\t\t}\r\n\t\tvar scopeObj = {};\r\n\t\tif (trap.set) {\r\n\t\t\ttrap.set(scopeObj, 'main', cntxt);\r\n\t\t} else {\r\n\t\t\tscopeObj.main = cntxt;\r\n\t\t}\r\n\t\treturn new Scope(scopeObj, params);\r\n\t}\r\n\r\n\t/**\r\n\t * Factory method for making a stack Scope hierarchies.\r\n\t *\r\n\t * @param array\t\t \tcntxts\r\n\t * @param object \t\tparams\r\n\t * @param object \t\ttrap\r\n\t *\r\n\t * @return Scope\r\n\t */\r\n\tstatic createStack(cntxts, params = {}, trap = {}) {\r\n\t\treturn cntxts.reverse().reduce((supr, cntxt, i) => {\r\n\t\t\tif (cntxt instanceof Scope) {\r\n\t\t\t\tif (i === 0) {\r\n\t\t\t\t\treturn cntxt;\r\n\t\t\t\t}\r\n\t\t\t\tthrow new Error('Only the top-most context is allowed to be an instance of Scope.')\r\n\t\t\t}\r\n\t\t\tvar scopeObj = {};\r\n\t\t\tif (trap.set) {\r\n\t\t\t\ttrap.set(scopeObj, 'main', cntxt);\r\n\t\t\t} else {\r\n\t\t\t\tscopeObj.main = cntxt;\r\n\t\t\t}\r\n\t\t\tscopeObj.super = supr;\r\n\t\t\treturn new Scope(scopeObj, params);\r\n\t\t}, null);\r\n\t}\r\n};\r\n\r\nconst _get = (cntxt, prop, trap) => {\r\n\tif (_isNull(cntxt) || _isUndefined(cntxt)) {\r\n\t\treturn;\r\n\t}\r\n\treturn trap.get && _isTypeObject(cntxt) ? trap.get(cntxt, prop) : (\r\n\t\tcntxt[prop]\r\n\t);\r\n};\r\n\r\nconst _has = (cntxt, prop, trap) => {\r\n\tif (_isNull(cntxt) || _isUndefined(cntxt)) {\r\n\t\treturn false;\r\n\t}\r\n\treturn trap.has && _isTypeObject(cntxt) ? trap.has(cntxt, prop) : (\r\n\t\t_isTypeObject(cntxt) ? prop in cntxt : !_isUndefined(cntxt[prop])\r\n\t);\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeFunction from './isTypeFunction.js';\r\n\r\n/**\r\n * Tells if val is of type \"class\".\r\n *\r\n * @param object \t\tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isTypeFunction(val) && /^class\\s?/.test(Function.prototype.toString.call(val));\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport _copy from '@webqit/util/obj/copy.js';\r\nimport _flatten from '@webqit/util/arr/flatten.js';\r\nimport BlockInterface from './BlockInterface.js';\r\nimport IfInterface from './IfInterface.js';\r\nimport ReturnInterface from './ReturnInterface.js';\r\nimport AssignmentInterface from './AssignmentInterface.js';\r\nimport DeletionInterface from './DeletionInterface.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport { referencesToPaths, pathStartsWith, pathAfter } from '../util.js';\r\nimport Scope from '../Scope.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Block class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Block extends BlockInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(stmts, delim) {\r\n\t\tsuper();\r\n\t\tthis.stmts = stmts || [];\r\n\t\tthis.delim = delim;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\r\n\t\tparams = {...params};\r\n\t\tvar returned, returnCallback = params.returnCallback;\r\n\t\tparams.returnCallback = flag => {\r\n\t\t\treturned = flag;\r\n\t\t};\r\n\r\n\t\t// Current!\r\n\t\tcontext = Scope.create(context);\r\n\t\tvar callEval = (stmt, context, _params) => {\r\n\t\t\ttry {\r\n\t\t\t\treturn stmt.eval(context, _params);\r\n\t\t\t} catch(e) {\r\n\t\t\t\tif (_params.catch) {\r\n\t\t\t\t\t_params.catch(e);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t};\r\n\t\t\r\n\t\tvar results = [], skippedAbort;\r\n\t\tfor (var i = 0; i < this.stmts.length; i ++) {\r\n\t\t\tvar stmt = this.stmts[i];\r\n\t\t\t// Lets be called...\r\n\t\t\tvar reads = referencesToPaths(stmt.meta.reads);\r\n\t\t\tvar deepReads = referencesToPaths(stmt.meta.deep.reads || []);\r\n\t\t\tvar isDirectEventTarget = (params.references || []).filter(ref => reads.filter(v => pathStartsWith(v, ref)).length);\r\n\t\t\tvar isIndirectEventTarget = (params.references || []).filter(ref => deepReads.filter(v => pathStartsWith(v, ref)).length);\r\n\t\t\tif (!params.references || !params.references.length \r\n\t\t\t|| (isDirectEventTarget = isDirectEventTarget.length)\r\n\t\t\t|| (isIndirectEventTarget = isIndirectEventTarget.length)) {\r\n\t\t\t\tvar _params = params;\r\n\t\t\t\tif (isDirectEventTarget) {\r\n\t\t\t\t\t_params = {...params};\r\n\t\t\t\t\tdelete _params.references;\r\n\t\t\t\t}\r\n\t\t\t\tresults[i] = callEval(stmt, context, _params);\r\n\t\t\t\tif (stmt instanceof ReturnInterface || returned) {\r\n\t\t\t\t\tif (returnCallback) {\r\n\t\t\t\t\t\treturnCallback(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn results[i];\r\n\t\t\t\t}\r\n\t\t\t\tif (((stmt instanceof IfInterface) && stmt.abortive) || returned === false) {\r\n\t\t\t\t\tskippedAbort = true;\r\n\t\t\t\t\tif (returnCallback) {\r\n\t\t\t\t\t\treturnCallback(false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// Add this change for subsequent statements\r\n\t\t\t\t// This is a local change!\r\n\t\t\t\tif (params.references && ((stmt instanceof AssignmentInterface) || (stmt instanceof DeletionInterface))) {\r\n\t\t\t\t\tparams.references = params.references.concat(referencesToPaths([stmt.reference]));\r\n\t\t\t\t}\r\n\t\t\t} else if ((params.references && stmt instanceof AssignmentInterface) && (stmt.val instanceof ReferenceInterface)) {\r\n\t\t\t\tparams.references = params.references.slice(0);\r\n\t\t\t\tlet basePath = referencesToPaths([stmt.reference])[0],\r\n\t\t\t\t\tleafPath = referencesToPaths([stmt.val])[0];\r\n\t\t\t\tparams.references.forEach(ref => {\r\n\t\t\t\t\tif (pathStartsWith(ref, leafPath)) {\r\n\t\t\t\t\t\tparams.references.push(basePath.concat(pathAfter(ref, leafPath)));\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn results;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.stmts.map(stmt => stmt.stringify(params)).join(this.delim);\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar parse = Lexer.lex(expr + ';', _flatten(this.operators).concat([Block.testBlockEnd]));\r\n\t\tif (parse.matches.length) {\r\n\t\t\treturn new this(\r\n\t\t\t\tparse.tokens.map(stmt => parseCallback(stmt.trim())).filter(a => a),\r\n\t\t\t\tparse.matches[0].trim()\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic testBlockEnd(a, b) {\r\n\t\t// Cases of code blocks that won't end in \";\"\r\n\t\tif (a.endsWith('}') && !b.trim().startsWith('else')) {\r\n\t\t\treturn '';\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop array\r\n */\r\nBlock.operators = [\r\n\t';',\r\n\t\"\\r\\n\",\r\n];\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * BoolInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'BooleanType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport BoolInterface from './BoolInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Bool (boolean) class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Bool = class extends BoolInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(state) {\r\n\t\tsuper();\r\n\t\tthis.state = state;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval() {\r\n\t\treturn this.state.toLowerCase().trim() === 'true';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.state;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar expr = expr.toLowerCase().trim();\r\n\t\tif (expr === 'true' || expr === 'false') {\r\n\t\t\treturn new this(expr);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Bool;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isUndefined from '@webqit/util/js/isUndefined.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport CallInterface from './CallInterface.js';\r\nimport Arguments from './Arguments.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport SyntaxError from '../SyntaxError.js';\r\nimport ReferenceError from '../ReferenceError.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Call class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Call = class extends CallInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(reference, args) {\r\n\t\tsuper();\r\n\t\tthis.reference = reference;\r\n\t\tthis.args = args;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\ttry {\r\n\t\t\tvar args = this.args.eval(context, params);\r\n\t\t\treturn this.reference.getEval(context, params).exec(args);\r\n\t\t} catch(e) {\r\n\t\t\tif (e instanceof ReferenceError) {\r\n\t\t\t\tthrow new ReferenceError('[' + this + ']: ' + e.message);\r\n\t\t\t} else {\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.reference.stringify(params) + this.args.stringify(params);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (expr.endsWith(')') && !Lexer.match(expr, [' ']).length) {\r\n\t\t\tvar tokens = Lexer.split(expr, []);\r\n\t\t\tvar reference, args = tokens.pop();\r\n\t\t\tif (!((reference = parseCallback(tokens.join(''), null, {role: 'CALL_SPECIFIER'})) instanceof ReferenceInterface) \r\n\t\t\t|| !(args = parseCallback(args, [Arguments]))) {\r\n\t\t\t\tthrow new SyntaxError(expr);\r\n\t\t\t}\r\n\t\t\treturn new this(reference, args);\r\n\t\t}\r\n\t}\r\n};\t\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Call;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ComparisonInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'ComparisonExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _flatten from '@webqit/util/arr/flatten.js';\r\nimport _first from '@webqit/util/arr/first.js';\r\nimport _last from '@webqit/util/arr/last.js';\r\nimport _difference from '@webqit/util/arr/difference.js';\r\nimport _isArray from '@webqit/util/js/isArray.js';\r\nimport _isObject from '@webqit/util/js/isObject.js';\r\nimport _isString from '@webqit/util/js/isString.js';\r\nimport _each from '@webqit/util/obj/each.js';\r\nimport ComparisonInterface from './ComparisonInterface.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Comparison class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Comparison extends ComparisonInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(operand1, operand2, operator) {\r\n\t\tsuper();\r\n\t\tthis.operand1 = operand1;\r\n\t\tthis.operand2 = operand2;\r\n\t\tthis.operator = operator;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.constructor.compare(\r\n\t\t\tthis.operand1.eval(context, params), \r\n\t\t\tthis.operand2.eval(context, params), \r\n\t\t\tthis.operator\r\n\t\t);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn [\r\n\t\t\tthis.operand1.stringify(params), \r\n\t\t\tthis.operator, \r\n\t\t\tthis.operand2.stringify(params)\r\n\t\t].join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar operators = _flatten(this.operators).map(oper => ' ' + oper + ' ');\r\n\t\tvar parse = Lexer.lex(expr, operators);\r\n\t\tif (parse.tokens.length > 1) {\r\n\t\t\tif (parse.tokens.length > 2) {\r\n\t\t\t\tthrow new Error('Malformed \"Comparison\" expression: ' + expr + '!');\r\n\t\t\t}\r\n\t\t\treturn new this(\r\n\t\t\t\tparseCallback(_first(parse.tokens).trim()),\r\n\t\t\t\tparseCallback(_last(parse.tokens).trim()),\r\n\t\t\t\tparse.matches[0].trim()\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * -------------------------------------------------------\r\n\t */\r\n\t \r\n\t/**\r\n\t * Use the operator type to compare the two operands\r\n\t *\r\n\t * @param mixed\t\toperand1\t\t\r\n\t * @param mixed\t\toperand2\t\t\r\n\t * @param string \toperator\t\t\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tstatic compare(operand1, operand2, operator = '==') {\r\n\t\tif (_flatten(this.operators).indexOf(operator) === -1) {\r\n\t\t\tthrow new Error('The operator \"' + operator + '\" is not recognized.');\r\n\t\t}\r\n\t\tswitch(operator) {\r\n\t\t\tcase '===':\r\n\t\t\t\treturn operand1 === operand2;\r\n\t\t\tcase '==':\r\n\t\t\tcase '=':\r\n\t\t\t\treturn operand1 == operand2;\r\n\t\t\tcase '>':\r\n\t\t\t\treturn operand1 > operand2;\r\n\t\t\tcase '<':\r\n\t\t\t\treturn operand1 < operand2;\r\n\t\t\tcase '>=':\r\n\t\t\t\treturn operand1 >= operand2;\r\n\t\t\tcase '<=':\r\n\t\t\t\treturn operand1 <= operand2;\r\n\t\t\tcase '!=':\r\n\t\t\t\treturn operand1 != operand2;\r\n\t\t\tcase '<>':\r\n\t\t\tcase '!==':\r\n\t\t\t\treturn operand1 !== operand2;\r\n\t\t\tcase '^=':\r\n\t\t\t\treturn _isString(operand1) && operand1.startsWith(operand2);\r\n\t\t\tcase '$=':\r\n\t\t\t\treturn _isString(operand1) && operand1.endsWith(operand2);\r\n\t\t\tcase '*=':\r\n\t\t\t\t// Contains\r\n\t\t\t\treturn _isArray(operand2) || _isString(operand2) ? operand1.indexOf(operand2) > -1 : false;\r\n\t\t\tcase '~=':\r\n\t\t\t\t// Contains word\r\n\t\t\t\treturn _isString(operand1) && _isString(operand2) && (' ' + operand1 + ' ').indexOf(' ' + operand2 + ' ') > -1;\r\n\t\t\tcase '>=<': // Between\r\n\t\t\t\t if (!(_isArray(operand2) && operand2.length === 2)) {\r\n\t\t\t\t\t throw new Error('A \\'Between\\' comparison requires argument 2 to be an array of exactly 2 values.');\r\n\t\t\t\t }\r\n\t\t\t\t return operand1 >= operand2[0] && operand1 <= operand2[1];\r\n\t\r\n\t\t\tcase '/**/': // Regex\r\n\t\t\t\treturn operand2.match(new RegExp(operand1));\r\n\t\t\tdefault:\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * Compares two operands for differences\r\n\t *\r\n\t * @param mixed\t\toperand1\t\t\r\n\t * @param mixed\t\toperand2\t\t\r\n\t * @param bool\t \tstrict\t\t\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tstatic diff(operand1, operand2, strict) {\r\n\t\treturn !this.compare(operand1, operand2, strict ? '===' : '==');\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nComparison.operators = {\r\n\texact: {\r\n\t\tis: '===',\r\n\t\tisNull: '===',\r\n\t\tequalsTo: '==',\r\n\t\tstrictlyNotEqualsTo: '!==',\r\n\t\tnotEqualsTo: '!=',\r\n\t},\r\n\trelative: {\r\n\t\tlesserThan: '<',\r\n\t\tgreaterThan: '>',\r\n\t\tlesserThanOrEqualsTo: '<=',\r\n\t\tgreaterThanOrEqualsTo: '>=',\r\n\t\tbetween: '>=<',\r\n\t},\r\n\tpartial: {\r\n\t\tstartsWith: '^=',\r\n\t\tendsWith: '$=',\r\n\t\tcontains: '*=',\r\n\t\tany: '~=',\r\n\t\tin: '~=',\r\n\t\tmatches: '/**/',\r\n\t},\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ConditionInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'TernaryConditional'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport ConditionInterface from './ConditionInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Condition class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Condition extends ConditionInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(assertion, onTrue, onFalse) {\r\n\t\tsuper();\r\n\t\tthis.assertion = assertion;\r\n\t\tthis.onTrue = onTrue;\r\n\t\tthis.onFalse = onFalse;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.assertion.eval(context, params) \r\n\t\t\t? this.onTrue.eval(context, params) \r\n\t\t\t: this.onFalse.eval(context, params);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn [\r\n\t\t\tthis.assertion.stringify(params), \r\n\t\t\tthis.constructor.operators[0], \r\n\t\t\tthis.onTrue.stringify(params),\r\n\t\t\tthis.constructor.operators[1], \r\n\t\t\tthis.onFalse.stringify(params)\r\n\t\t].join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar splits = Lexer.split(expr, this.operators);\r\n\t\tif (splits.length > 1) {\r\n\t\t\tif (splits.length === 2) {\r\n\t\t\t\tthrow new Error('Malformed ternary expression: ' + expr + '!');\r\n\t\t\t}\r\n\t\t\treturn new this(\r\n\t\t\t\tparseCallback(splits[0].trim()),\r\n\t\t\t\tparseCallback(splits[1].trim()),\r\n\t\t\t\tparseCallback(splits[2].trim())\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nCondition.operators = [\r\n\t'?', \r\n\t':',\r\n];","\r\n/**\r\n * @imports\r\n */\r\nimport _last from '@webqit/util/arr/last.js';\r\nimport _isUndefined from '@webqit/util/js/isUndefined.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport DeletionInterface from './DeletionInterface.js';\r\nimport SyntaxError from '../SyntaxError.js';\r\nimport ReferenceError from '../ReferenceError.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Deletion class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Deletion = class extends DeletionInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(reference, operator = 'delete') {\r\n\t\tsuper();\r\n\t\tthis.reference = reference;\r\n\t\tthis.operator = operator;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\ttry {\r\n\t\t\treturn this.reference.getEval(context, params).del();\r\n\t\t} catch(e) {\r\n\t\t\tif (e instanceof ReferenceError) {\r\n\t\t\t\tthrow new ReferenceError('[' + this + ']: ' + e.message);\r\n\t\t\t} else {\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.operator + ' ' + this.reference.stringify(params);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar parse = Lexer.lex(expr, Object.values(this.operators));\r\n\t\tif (parse.matches.length === 1 && expr.startsWith(parse.matches[0] + ' ')) {\r\n\t\t\tvar reference;\r\n\t\t\tif (!((reference = parseCallback(parse.tokens.pop().trim(), null, {role: 'DELETION_SPECIFIER'})) instanceof ReferenceInterface)) {\r\n\t\t\t\tthrow new SyntaxError(expr);\r\n\t\t\t}\r\n\t\t\treturn new this(reference, parse.matches[0].trim());\r\n\t\t}\r\n\t}\r\n};\t\r\n\r\n/**\r\n * @prop array\r\n */\r\nDeletion.operators = {\r\n\tred: 'reduce', \r\n\tdel: 'delete',\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Deletion;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport IndependentExprInterface from '../IndependentExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * FuncInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends IndependentExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'FunctionType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _copy from '@webqit/util/obj/copy.js';\r\nimport _each from '@webqit/util/obj/each.js';\r\nimport _flatten from '@webqit/util/arr/flatten.js';\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport FuncInterface from './FuncInterface.js';\r\nimport Block from './Block.js';\r\nimport Scope from '../Scope.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Func class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Func = class extends FuncInterface {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(paramters, statements, arrowFunctionFormatting = {}) {\r\n\t\tsuper();\r\n\t\tthis.paramters = paramters || {};\r\n\t\tthis.statements = statements;\r\n\t\tthis.statements.isIndependent = true;\r\n\t\tthis.arrowFunctionFormatting = arrowFunctionFormatting;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tinherit(Super) {\r\n\t\tif (Super instanceof FuncInterface) {\r\n\t\t\tvar parentParams = Object.keys(Super.paramters);\r\n\t\t\tvar ownParams = Object.keys(this.paramters);\r\n\t\t\tfor (var i = 0; i < Math.max(ownParams.length, parentParams.length); i ++) {\r\n\t\t\t\tvar nameInParent = parentParams[i];\r\n\t\t\t\tvar nameInSelf = ownParams[i];\r\n\t\t\t\tif (!nameInSelf && nameInParent) {\r\n\t\t\t\t\tthrow new Error('Parameter #' + i + ' (' + nameInParent + ') in parent function must be implemented.');\r\n\t\t\t\t}\r\n\t\t\t\tif (nameInSelf && nameInParent) {\r\n\t\t\t\t\tvar defaultValInParent = Super.paramters[nameInParent];\r\n\t\t\t\t\tvar defaultValInSelf = this.paramters[nameInSelf];\r\n\t\t\t\t\tif (defaultValInSelf && !defaultValInParent) {\r\n\t\t\t\t\t\tthrow new Error('Parameter #' + i + ' (' + nameInSelf + ') must not have a default value as established in parent function.');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (defaultValInSelf && defaultValInParent && defaultValInSelf.jsenType !== defaultValInParent.jsenType) {\r\n\t\t\t\t\t\tthrow new Error('Default value for parameter #' + i + ' (' + nameInSelf + ') must be of type ' + defaultValInParent.jsenType + ' as established in parent function.');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.sup = Super;\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\tvar instance = this;\r\n\t\tparams = {...params};\r\n\t\tdelete params.returnCallback;\r\n\t\treturn function(...args) {\r\n\t\t\tvar newMainContext = {};\r\n\t\t\t_each(Object.keys(instance.paramters), (i, name) => {\r\n\t\t\t\tvar defaultVal = instance.paramters[name];\r\n\t\t\t\tif (args.length - 1 < i && !defaultVal) {\r\n\t\t\t\t\tthrow new Error('The parameter \"' + name + '\" is required.');\r\n\t\t\t\t}\r\n\t\t\t\tnewMainContext[name] = args.length > i \r\n\t\t\t\t\t? args[i] \r\n\t\t\t\t\t: (instance.paramters[name] \r\n\t\t\t\t\t\t? instance.paramters[name].eval(context, params) \r\n\t\t\t\t\t\t: null);\r\n\t\t\t});\r\n\t\t\tif (!instance.arrowFunctionFormatting) {\r\n\t\t\t\tnewMainContext['this'] = this;\r\n\t\t\t}\r\n\t\t\t// But this newer context should come first\r\n\t\t\tvar errorLevel = context instanceof Scope ? context.params.errorLevel : undefined;\r\n\t\t\tvar nestedContext = new Scope({main:newMainContext, super:context}, {errorLevel});\r\n\t\t\tvar retrn = instance.statements.eval(nestedContext, params);\r\n\t\t\tif (instance.arrowFunctionFormatting.body === false) {\r\n\t\t\t\treturn retrn[0];\r\n\t\t\t}\r\n\t\t\treturn retrn;\r\n\t\t};\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\tvar paramters = [];\r\n\t\t_each(this.paramters, (name, value) => {\r\n\t\t\tparamters.push(name + (value ? '=' + value.stringify(params) : ''));\r\n\t\t});\r\n\t\tif (this.arrowFunctionFormatting) {\r\n\t\t\tvar headNoWrap = this.arrowFunctionFormatting.head === false || (paramters.length === 1 && paramters[0].indexOf('=') === -1);\r\n\t\t\tvar bodyNoWrap = this.arrowFunctionFormatting.body === false\r\n\t\t\treturn (headNoWrap ? paramters[0] : '(' + paramters.join(', ') + ')')\r\n\t\t\t+ ' => ' + (bodyNoWrap ? this.statements.stringify(params) : '{' + this.statements.stringify(params) + '}');\r\n\t\t}\r\n\t\treturn 'function (' + paramters.join(', ') + ') {' + this.statements.stringify(params) + '}';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\texpr = expr.trim();\r\n\t\tvar splits;\r\n\t\tif (expr.startsWith('function') \r\n\t\t&& (splits = Lexer.split(expr, []).slice(1).filter(b => b.trim())) && splits.length === 2) {\r\n\t\t\tvar arrowFunctionFormatting = false;\r\n\t\t\tvar funcHead = _unwrap(splits.shift().trim(), '(', ')');\r\n\t\t\tvar funcBody = _unwrap(splits.shift().trim(), '{', '}');\r\n\t\t} else if (!expr.startsWith('function') \r\n\t\t&& (splits = Lexer.split(expr, ['=>'])) && splits.length === 2) {\r\n\t\t\tvar funcHead = splits.shift().trim();\r\n\t\t\tvar funcBody = splits.shift().trim();\r\n\t\t\tvar arrowFunctionFormatting = {};\r\n\t\t\tif (_wrapped(funcHead, '(', ')')) {\r\n\t\t\t\tfuncHead = _unwrap(funcHead, '(', ')');\r\n\t\t\t} else {\r\n\t\t\t\tarrowFunctionFormatting.head = false;\r\n\t\t\t}\r\n\t\t\tif (_wrapped(funcBody, '{', '}')) {\r\n\t\t\t\tfuncBody = _unwrap(funcBody, '{', '}');\r\n\t\t\t} else {\r\n\t\t\t\tarrowFunctionFormatting.body = false;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar paramters = {};\r\n\t\tLexer.split(funcHead, [',']).forEach(param => {\r\n\t\t\tvar paramSplit = param.split('=');\r\n\t\t\tif (paramSplit[1]) {\r\n\t\t\t\tparamters[paramSplit[0].trim()] = parseCallback(paramSplit[1].trim(), null, {\r\n\t\t\t\t\t// Any varaibles should be added to public vars\r\n\t\t\t\t\tmeta: null,\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tparamters[param.trim()] = null;\r\n\t\t\t}\r\n\t\t});\r\n\t\tvar block = parseCallback(funcBody, [Block], {assert:false}) || parseCallback(funcBody, null, {\r\n\t\t\t// Any varaibles should be added to public vars\r\n\t\t\tmeta: null,\r\n\t\t});\r\n\t\treturn new this(\r\n\t\t\tparamters,\r\n\t\t\tblock.jsenType === 'Block' ? block : new Block([block]),\r\n\t\t\tarrowFunctionFormatting,\r\n\t\t);\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nFunc.operators = ['=>',];\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Func;","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport IfInterface from './IfInterface.js';\r\nimport ReturnInterface from './ReturnInterface.js';\r\nimport Block from './Block.js';\r\nimport Scope from '../Scope.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Condition class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst If = class extends IfInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(assertion, onTrue, onFalse, params = {}) {\r\n\t\tsuper();\r\n\t\tthis.assertion = assertion;\r\n\t\tthis.onTrue = onTrue;\r\n\t\tthis.onFalse = onFalse;\r\n\t\tthis.params = params;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n        var errorLevel = context instanceof Scope ? context.params.errorLevel : undefined;\r\n        var _context = new Scope({\r\n            main:{}, \r\n            super:context,\r\n        }, {type: 2, errorLevel});\r\n\t\treturn  this.assertion.eval(context/** original context */, params)\r\n\t\t\t? (this.onTrue ? this.onTrue.eval(_context, params) : undefined)\r\n            : (this.onFalse ? this.onFalse.eval(_context, params) : undefined);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n        var onTrue = this.onTrue && this.params.onTrueIsBlock \r\n            ? '{' + this.onTrue.stringify(params) + '}' \r\n            : (this.onTrue ? this.onTrue.stringify(params) : '');\r\n        var onFalse = this.onFalse && this.params.onFalseIsBlock \r\n            ? '{' + this.onFalse.stringify(params) + '}' \r\n            : (this.onFalse ? this.onFalse.stringify(params) : '');\r\n\t\treturn 'if (' + this.assertion.stringify(params) + ')' + onTrue + (onFalse ? ' else ' + onFalse : '');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n        expr = expr.trim();\r\n        var splits;\r\n        if (expr.startsWith('if') \r\n\t\t&& (splits = Lexer.split(expr, [], {limit:2}/*IMPORTANT*/).slice(1).filter(b => b.trim())) && splits.length === 2) {\r\n            var assertion = parseCallback(_unwrap(splits.shift().trim(), '(', ')').trim());\r\n            var rest = Lexer.split(splits.shift().trim(), ['else'], {limit:1}/*IMPORTANT*/);\r\n            var abortive;\r\n            var onTrue = rest.shift().trim(), onTrueIsBlock, onFalse = (rest.shift() || '').trim(), onFalseIsBlock;\r\n            if (_wrapped(onTrue, '{', '}')) {\r\n                // The braces gives us the onTrue block\r\n                onTrueIsBlock = true;\r\n                onTrue = _unwrap(onTrue, '{', '}').trim();\r\n            }\r\n            onTrue = parseCallback(onTrue, [Block], {assert:false, meta:null}) || parseCallback(onTrue, null, {meta:null});\r\n            if (onFalse) {\r\n                if (_wrapped(onFalse, '{', '}')) {\r\n                    // The braces gives us the onTrue block\r\n                    onFalseIsBlock = true;\r\n                    onFalse = _unwrap(onFalse, '{', '}').trim();\r\n                }\r\n                onFalse = parseCallback(onFalse, [Block], {assert:false, meta:null}) || parseCallback(onFalse, null, {meta:null});\r\n            } else if (onTrue) {\r\n                abortive = onTrue.stmts.filter(stmt => stmt instanceof ReturnInterface).length;\r\n            }\r\n\t\t\tconst instance = new this(assertion, onTrue, onFalse, {\r\n                    onTrueIsBlock,\r\n                    onFalseIsBlock\r\n                }\r\n            );\r\n            instance.abortive = abortive;\r\n            return instance;\r\n         }\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default If;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\n\r\n/**\r\n * Returns the intersection of two arrays;\r\n * optionally using a custom matching function.\r\n *\r\n * @param array \tarr\r\n * @param array\t \tarr2\r\n * @param function \tcallback\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, arr2, callback = null) {\r\n\treturn !_isArray(arr2) ? [] : arr.filter(val1 => callback \r\n\t\t? arr2.filter(val2 => callback(val1, val2)).length \r\n\t\t: arr2.indexOf(val1) !== -1\r\n\t);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * MathInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'MathExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNumeric from '@webqit/util/js/isNumeric.js';\r\nimport _flatten from '@webqit/util/arr/flatten.js';\r\nimport _intersect from '@webqit/util/arr/intersect.js';\r\nimport _unique from '@webqit/util/arr/unique.js';\r\nimport MathInterface from './MathInterface.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Math class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Math = class extends MathInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(val, exprs) {\r\n\t\tsuper();\r\n\t\tthis.val = val;\r\n\t\tthis.exprs = exprs;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.exprs.reduce((currentTotal, expr) => {\r\n\t\t\tvar val = expr.val.eval(context, params);\r\n\t\t\tvar operator = expr.operator.trim();\r\n\t\t\tif ((!_isNumeric(currentTotal) || !_isNumeric(val)) && operator !== '+') {\r\n\t\t\t\tthrow new Error('Invalid Math expression: ' + this.toString() + '!');\r\n\t\t\t}\r\n\t\t\tswitch(operator) {\r\n\t\t\t\tcase '+':\r\n\t\t\t\t\treturn currentTotal + val;\r\n\t\t\t\tcase '-':\r\n\t\t\t\t\treturn currentTotal - val;\r\n\t\t\t\tcase '*':\r\n\t\t\t\t\treturn currentTotal * val;\r\n\t\t\t\tcase '/':\r\n\t\t\t\t\treturn currentTotal / val;\r\n\t\t\t}\r\n\t\t}, this.val.eval(context, params));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn [this.val.stringify(params)].concat(\r\n\t\t\tthis.exprs.map(expr => expr.operator + ' ' + expr.val.stringify(params))\r\n\t\t).join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar parse = Lexer.lex(expr, _flatten(this.operators));\r\n\t\tif (parse.tokens.filter(t => t).length > 1 && parse.matches.length === parse.tokens.length - 1) {\r\n\t\t\tvar operators = _unique(parse.matches);\r\n\t\t\tif (_intersect(operators, this.operators.sup).length && _intersect(operators, this.operators.sub).length) {\r\n\t\t\t\tthrow new Error('\"Addition/subtraction\" and \"multiplication/division\" operators cannot be used in the same expression: ' + expr + '!');\r\n\t\t\t}\r\n\t\t\treturn new this(\r\n\t\t\t\tparseCallback(parse.tokens.shift().trim()),\r\n\t\t\t\tparse.tokens.map((expr, i) => {return {\r\n\t\t\t\t\toperator: parse.matches[i],\r\n\t\t\t\t\tval: parseCallback(expr.trim())\r\n\t\t\t\t};})\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nMath.operators = {\r\n\tsup: ['*', '/'],\r\n\tsub: ['+', '-'],\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Math;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNumeric from '@webqit/util/js/isNumeric.js';\r\nimport NumInterface from './NumInterface.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Num (number) class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Num = class extends NumInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(int, dec = 0) {\r\n\t\tsuper();\r\n\t\tthis.int = int;\r\n\t\tthis.dec = dec;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval() {\r\n\t\treturn parseFloat(this.int + (this.dec ? '.' + this.dec : null));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.int + (this.dec ? '.' + this.dec : null);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (_isNumeric(expr)) {\r\n\t\t\tvar expr = expr.split('.');\r\n\t\t\treturn new this(\r\n\t\t\t\tparseInt(expr.shift()),\r\n\t\t\t\tparseInt(expr.shift())\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Num;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ObjInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'ObjectType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\nimport _first from '@webqit/util/arr/first.js';\r\nimport _last from '@webqit/util/arr/last.js';\r\nimport _each from '@webqit/util/obj/each.js';\r\nimport ObjInterface from './ObjInterface.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Object utils\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Obj = class extends ObjInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(entries) {\r\n\t\tsuper();\r\n\t\tthis.entries = entries || {};\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tinherit(Super) {\r\n\t\tif (Super instanceof ObjInterface) {\r\n\t\t\t_each(Super.entries, (name, val) => {\r\n\t\t\t\tif (!(name in this.entries)) {\r\n\t\t\t\t\tthis.entries[name] = val;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\tvar items = {};\r\n\t\t_each(this.entries, (key, expr) => {\r\n\t\t\titems[key] = expr.eval(context, params);\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\tvar str = [];\r\n\t\t_each(this.entries, (key, expr) => {\r\n\t\t\tstr.push(key + Obj.operators.sub + expr.stringify(params));\r\n\t\t});\r\n\t\treturn '{' + str.join(Obj.operators.sup) + '}';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (_wrapped(expr, '{', '}') && !Lexer.match(expr.trim(), [' ']).length) {\r\n\t\t\tvar entries = {};\r\n\t\t\tvar _entriesSplit = Lexer.split(_unwrap(expr, '{', '}'), [Obj.operators.sup])\r\n\t\t\t\t.map(n => n.trim()).filter(n => n);\r\n\t\t\t_each(_entriesSplit, (key, expr) => {\r\n\t\t\t\tvar entry = Lexer.split(expr, [Obj.operators.sub], {limit:1}/*IMPORTANT*/);\r\n\t\t\t\tentries[_first(entry).trim()] = parseCallback(_last(entry).trim());\r\n\t\t\t});\r\n\t\t\treturn new this(entries);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nObj.operators = {\r\n\tsup: ',',\r\n\tsub: ':',\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Obj;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * PresenceInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'PresenceOperator'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _last from '@webqit/util/arr/last.js';\r\nimport _isUndefined from '@webqit/util/js/isUndefined.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport PresenceInterface from './PresenceInterface.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport SyntaxError from '../SyntaxError.js';\r\nimport ReferenceError from '../ReferenceError.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Presence class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Presence = class extends PresenceInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(prop, reference, operator = 'in') {\r\n\t\tsuper();\r\n\t\tthis.prop = prop;\r\n\t\tthis.reference = reference;\r\n\t\tthis.operator = operator;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\tvar prop = this.prop.eval(context, params);\r\n\t\ttry {\r\n\t\t\treturn this.reference.getEval(context, params).has(prop);\r\n\t\t} catch(e) {\r\n\t\t\tif (e instanceof ReferenceError) {\r\n\t\t\t\tthrow new ReferenceError('[' + this + ']: ' + e.message);\r\n\t\t\t} else {\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn [this.prop.stringify(params), this.operator, this.reference.stringify(params)].join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar parse = Lexer.lex(expr, this.operators);\r\n\t\tif (parse.tokens.length === 2) {\r\n\t\t\tvar prop, reference;\r\n\t\t\tif (!(prop = parseCallback(parse.tokens.shift().trim()))\r\n\t\t\t|| !((reference = parseCallback(parse.tokens.shift().trim())) instanceof ReferenceInterface)) {\r\n\t\t\t\tthrow new SyntaxError(expr);\r\n\t\t\t}\r\n\t\t\treturn new this(prop, reference, parse.matches[0].trim());\r\n\t\t}\r\n\t}\r\n};\t\r\n\r\n/**\r\n * @prop array\r\n */\r\nPresence.operators = [' in '];\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Presence;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isUndefined from '@webqit/util/js/isUndefined.js';\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport ExprInterface from '../ExprInterface.js';\r\nimport Scope from '../Scope.js';\r\nimport SyntaxError from '../SyntaxError.js';\r\nimport ReferenceError from '../ReferenceError.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Reference class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Reference extends ReferenceInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(context, name, backticks = false) {\r\n\t\tsuper();\r\n\t\tthis.context = context;\r\n\t\tthis.name = name;\r\n\t\tthis.backticks = backticks;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tgetEval(context = null, params = {}) {\r\n\t\tvar sourceContext = context, name = this.name;\r\n\t\tif (this.context) {\r\n\t\t\tif (name instanceof ExprInterface) {\r\n\t\t\t\tname = name.eval(context, params);\r\n\t\t\t}\r\n\t\t\tsourceContext = this.context.eval(context, params);\r\n\t\t}\r\n\t\tvar isRootVar = !this.context;\r\n\t\treturn {\r\n\t\t\tget() {\r\n\t\t\t\treturn Scope.create(sourceContext, params).get(name, params.trap);\r\n\t\t\t},\r\n\t\t\tdel() {\r\n\t\t\t\treturn Scope.create(sourceContext, params).del(name, params.trap);\r\n\t\t\t},\r\n\t\t\thas(prop) {\r\n\t\t\t\treturn Scope.create(sourceContext, params).has(name, prop, params.trap);\r\n\t\t\t},\r\n\t\t\tset(val, initKeyword = null) {\r\n\t\t\t\treturn Scope.create(sourceContext, params).set(name, val, params.trap, initKeyword, isRootVar);\r\n\t\t\t},\r\n\t\t\texec(args) {\r\n\t\t\t\treturn Scope.create(sourceContext, params).exec(name, args, params.trap);\r\n\t\t\t},\r\n\t\t};\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\ttry {\r\n\t\t\treturn this.getEval(context, params).get();\r\n\t\t} catch(e) {\r\n\t\t\tif (e instanceof ReferenceError) {\r\n\t\t\t\tthrow new ReferenceError('[' + this + ']: ' + e.message);\r\n\t\t\t} else {\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\tvar name = this.name;\r\n\t\tif (this.context) {\r\n\t\t\tvar subjectContext = this.context.stringify(params);\r\n\t\t\tif (name instanceof ExprInterface) {\r\n\t\t\t\tname = '[' + name.stringify(params) + ']';\r\n\t\t\t} else if (this.backticks) {\r\n\t\t\t\tname = '`' + name + '`';\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar subjectContext = params.context;\r\n\t\t\tif (this.backticks) {\r\n\t\t\t\tname = '`' + name + '`';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn (subjectContext || '') + (subjectContext && !name.startsWith('[') ? Reference.separator : '') + name;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (!Lexer.match(expr.trim(), [' ']).length) {\r\n\t\t\tvar splits = Lexer.split(expr, []);\r\n\t\t\t// ------------------------\r\n\t\t\t// name, first\r\n\t\t\t// ------------------------\r\n\t\t\tvar context, name = splits.pop(), backticks;\r\n\t\t\tvar nameSplit = Lexer.split(name.trim(), [this.separator], {preserveDelims:true});\r\n\t\t\tif (nameSplit.length > 1) {\r\n\t\t\t\tname = nameSplit.pop().substr(1);\r\n\t\t\t\tsplits = splits.concat(nameSplit);\r\n\t\t\t}\r\n\t\t\tif (_wrapped(name, '`', '`')) {\r\n\t\t\t\tname = _unwrap(name, '`', '`');\r\n\t\t\t\tbackticks = true;\r\n\t\t\t}\r\n\t\t\t// ------------------------\r\n\t\t\t// context, second\r\n\t\t\t// ------------------------\r\n\t\t\tif (splits.length) {\r\n\t\t\t\tcontext = parseCallback(splits.join(''), null, {role: 'CONTEXT'});\r\n\t\t\t}\r\n\t\t\tif (_wrapped(name, '[', ']')) {\r\n\t\t\t\tif (!context) {\r\n\t\t\t\t\tthrow new SyntaxError(expr);\r\n\t\t\t\t}\r\n\t\t\t\tname = parseCallback(_unwrap(name, '[', ']'));\r\n\t\t\t}\r\n\t\t\treturn new this(context, name, backticks);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop string\r\n */\r\nReference.separator = '.';\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport ReturnInterface from './ReturnInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Ret (return) class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Return = class extends ReturnInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(expr) {\r\n\t\tsuper();\r\n\t\tthis.expr = expr;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.expr ? this.expr.eval(context, params) : undefined;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.expr ? 'return ' + this.expr.stringify(params) : 'return';\r\n\t}\r\n\t\r\n\t/**\r\n\t * -------------------------------------------------------\r\n\t */\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar exprLc = expr.toLowerCase();\r\n\t\tif (exprLc.startsWith('return ') || exprLc === 'return') {\r\n\t\t\treturn new this(\r\n\t\t\t\tparseCallback(expr.substr(6).trim())\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Return;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\nimport StrInterface from './StrInterface.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport Bool from './Bool.js';\r\n\r\n/**\r\n * ---------------------------\r\n * String utils\r\n * ---------------------------\r\n */\r\n\r\nconst Str = class extends StrInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(expr, quote) {\r\n\t\tsuper();\r\n\t\tthis.expr = expr;\r\n\t\tthis.quote = quote;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval() {\r\n\t\treturn this.expr;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.quote + this.expr + this.quote;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\texpr = expr.trim();\r\n\t\tif ((_wrapped(expr, '\"', '\"') || _wrapped(expr, \"'\", \"'\")) \r\n\t\t&& !Lexer.match(expr, [' ']).length) {\r\n\t\t\tvar quote = _wrapped(expr, '\"', '\"') ? '\"' : \"'\";\r\n\t\t\treturn new this(\r\n\t\t\t\t_unwrap(expr, quote, quote),\r\n\t\t\t\tquote\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Str;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * VoidInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Void'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport VoidInterface from './VoidInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Void (boolean) class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Void = class extends VoidInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(val) {\r\n\t\tsuper();\r\n\t\tthis.val = val;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval() {\r\n\t\treturn this.val.toLowerCase().trim() === 'null' ? null : undefined;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.val;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar expr = expr.toLowerCase().trim();\r\n\t\tif (expr === 'null' || expr === 'undefined') {\r\n\t\t\treturn new this(expr);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Void;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from './ExprInterface.js';\r\nimport IndependentExprInterface from './IndependentExprInterface.js';\r\nimport Abstraction from './grammar/Abstraction.js';\r\nimport AbstractionInterface from './grammar/AbstractionInterface.js';\r\nimport Arr from './grammar/Arr.js';\r\nimport ArrInterface from './grammar/ArrInterface.js';\r\nimport Arguments from './grammar/Arguments.js';\r\nimport ArgumentsInterface from './grammar/ArgumentsInterface.js';\r\nimport Assertion from './grammar/Assertion.js';\r\nimport AssertionInterface from './grammar/AssertionInterface.js';\r\nimport Assignment from './grammar/Assignment.js';\r\nimport AssignmentInterface from './grammar/AssignmentInterface.js';\r\nimport Block from './grammar/Block.js';\r\nimport BlockInterface from './grammar/BlockInterface.js';\r\nimport Bool from './grammar/Bool.js';\r\nimport BoolInterface from './grammar/BoolInterface.js';\r\nimport Call from './grammar/Call.js';\r\nimport CallInterface from './grammar/CallInterface.js';\r\nimport Comparison from './grammar/Comparison.js';\r\nimport ComparisonInterface from './grammar/ComparisonInterface.js';\r\nimport Condition from './grammar/Condition.js';\r\nimport ConditionInterface from './grammar/ConditionInterface.js';\r\nimport Deletion from './grammar/Deletion.js';\r\nimport DeletionInterface from './grammar/DeletionInterface.js';\r\nimport Func from './grammar/Func.js';\r\nimport FuncInterface from './grammar/FuncInterface.js';\r\nimport If from './grammar/If.js';\r\nimport IfInterface from './grammar/IfInterface.js';\r\nimport Math from './grammar/Math.js';\r\nimport MathInterface from './grammar/MathInterface.js';\r\nimport Num from './grammar/Num.js';\r\nimport NumInterface from './grammar/NumInterface.js';\r\nimport Obj from './grammar/Obj.js';\r\nimport ObjInterface from './grammar/ObjInterface.js';\r\nimport Presence from './grammar/Presence.js';\r\nimport PresenceInterface from './grammar/PresenceInterface.js';\r\nimport Reference from './grammar/Reference.js';\r\nimport ReferenceInterface from './grammar/ReferenceInterface.js';\r\nimport Return from './grammar/Return.js';\r\nimport ReturnInterface from './grammar/ReturnInterface.js';\r\nimport Str from './grammar/Str.js';\r\nimport StrInterface from './grammar/StrInterface.js';\r\nimport Void from './grammar/Void.js';\r\nimport VoidInterface from './grammar/VoidInterface.js';\r\n\r\n/**\r\n * @var object\r\n */\r\nexport default {\r\n\tIf: If,\t\t\t\t\t\t// if (condition) expr1 else expre2\r\n\t//Block: Block,\t\t\t\t// field1 = 3; field2 = val2\r\n\tReturn: Return,\t\t\t\t// return field1\r\n\tDeletion: Deletion,\t\t\t// delete field1\r\n\tAssignment: Assignment,\t\t// field1[key1].key2 = k\r\n\tPresence: Presence,\t\t\t// key1 in field1\r\n\tFunc: Func,\t\t\t\t\t// (field1, field2) => {}\r\n\tAbstraction: Abstraction,\t// (field1)\r\n\tCondition: Condition,\t\t// field1 > field2 ? val1 : val2\r\n\tAssertion: Assertion,\t\t// !field1 && field2\r\n\tComparison: Comparison,\t\t// field1 > field2\r\n\tMath: Math,\t\t\t\t\t// field1 + field2\r\n\tArr: Arr,\t\t\t\t\t// [field1, field2]\r\n\tObj: Obj,\t\t\t\t\t// {field1:val1, field2:val2}\r\n\tNum: Num,\t\t\t\t\t// [0-9]\r\n\tStr: Str,\t\t\t\t\t// \"\"\r\n\tBool: Bool,\t\t\t\t\t// true\r\n\tVoid: Void,\t\t\t\t\t// null|undefined\r\n\tCall: Call,\t\t\t\t\t// field1()\r\n\tReference: Reference,\t\t// field1\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport {\r\n\tExprInterface,\r\n\tIndependentExprInterface,\r\n};\r\nexport {\r\n\tAbstraction,\r\n\tArr,\r\n\tArguments,\r\n\tAssertion,\r\n\tAssignment,\r\n\tBlock,\r\n\tBool,\r\n\tCall,\r\n\tComparison,\r\n\tCondition,\r\n\tDeletion,\r\n\tFunc,\r\n\tIf,\r\n\tMath,\r\n\tNum,\r\n\tObj,\r\n\tPresence,\r\n\tReference,\r\n\tReturn,\r\n\tStr,\r\n\tVoid,\r\n};\r\nexport {\r\n\tAbstractionInterface,\r\n\tArrInterface,\r\n\tArgumentsInterface,\r\n\tAssertionInterface,\r\n\tAssignmentInterface,\r\n\tBlockInterface,\r\n\tBoolInterface,\r\n\tCallInterface,\r\n\tComparisonInterface,\r\n\tConditionInterface,\r\n\tDeletionInterface,\r\n\tFuncInterface,\r\n\tIfInterface,\r\n\tMathInterface,\r\n\tNumInterface,\r\n\tObjInterface,\r\n\tPresenceInterface,\r\n\tReferenceInterface,\r\n\tReturnInterface,\r\n\tStrInterface,\r\n\tVoidInterface,\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport Parser from './Parser.js';\r\nimport grammar from './grammar.js';\r\nimport Scope from './Scope.js';\r\n\r\n/**\r\n * @var object\r\n */\r\nParser.grammar = grammar;\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Parser;\r\nexport {\r\n\tScope,\r\n}\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Jsen from './index.js';\r\n\r\n// As globals\r\nif (!window.WN) {\r\n\twindow.WN = {};\r\n}\r\nwindow.WN.Jsen = Jsen;\r\nif (!window.WebNative) {\r\n\twindow.WebNative = {};\r\n}\r\nwindow.WebNative.Jsen = Jsen;\r\n"],"sourceRoot":""}