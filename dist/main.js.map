{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@web-native-js/commons/js/isArray.js","webpack:///./node_modules/@web-native-js/commons/js/isTypeFunction.js","webpack:///./node_modules/@web-native-js/commons/js/isFunction.js","webpack:///./node_modules/@web-native-js/commons/js/isObject.js","webpack:///./node_modules/@web-native-js/commons/js/isTypeObject.js","webpack:///./node_modules/@web-native-js/commons/js/isNumeric.js","webpack:///./node_modules/@web-native-js/commons/obj/getAllPropertyNames.js","webpack:///./node_modules/@web-native-js/commons/obj/getPrototypeChain.js","webpack:///./node_modules/@web-native-js/commons/arr/pushUnique.js","webpack:///./node_modules/@web-native-js/commons/obj/mergeCallback.js","webpack:///./node_modules/@web-native-js/commons/obj/merge.js","webpack:///./node_modules/@web-native-js/commons/js/isNull.js","webpack:///./node_modules/@web-native-js/commons/js/isUndefined.js","webpack:///./node_modules/@web-native-js/commons/arr/remove.js","webpack:///./node_modules/@web-native-js/commons/js/instanceof.js","webpack:///./node_modules/@web-native-js/commons/js/isNumber.js","webpack:///./node_modules/@web-native-js/commons/js/isPlainObject.js","webpack:///./node_modules/@web-native-js/commons/js/isBoolean.js","webpack:///./node_modules/@web-native-js/commons/obj/each.js","webpack:///./node_modules/@web-native-js/commons/obj/even.js","webpack:///./node_modules/@web-native-js/commons/obj/compareCallback.js","webpack:///./src/ExprInterface.js","webpack:///./src/Expr/ReferenceInterface.js","webpack:///./src/Expr/CallInterface.js","webpack:///./src/Expr/FuncInterface.js","webpack:///./src/Expr/IfInterface.js","webpack:///./src/SyntaxError.js","webpack:///./src/Jsen.js","webpack:///./node_modules/@web-native-js/commons/js/isClass.js","webpack:///./node_modules/@web-native-js/commons/js/isString.js","webpack:///./node_modules/@web-native-js/commons/str/after.js","webpack:///./node_modules/@web-native-js/commons/str/before.js","webpack:///./node_modules/@web-native-js/commons/arr/unique.js","webpack:///./src/ReferenceError.js","webpack:///./src/Scope.js","webpack:///./node_modules/@web-native-js/commons/str/wrapped.js","webpack:///./node_modules/@web-native-js/commons/str/unwrap.js","webpack:///./node_modules/@web-native-js/commons/str/beforeLast.js","webpack:///./node_modules/@web-native-js/commons/arr/from.js","webpack:///./node_modules/@web-native-js/commons/js/isEmpty.js","webpack:///./node_modules/@web-native-js/commons/js/isTypeArray.js","webpack:///./node_modules/@web-native-js/commons/arr/flatten.js","webpack:///./node_modules/@web-native-js/commons/arr/first.js","webpack:///./node_modules/@web-native-js/commons/arr/last.js","webpack:///./node_modules/@web-native-js/commons/obj/copyPlain.js","webpack:///./node_modules/@web-native-js/commons/str/Lexer.js","webpack:///./src/Expr/AbstractionInterface.js","webpack:///./src/Expr/Abstraction.js","webpack:///./src/Expr/ArrInterface.js","webpack:///./src/Expr/Arr.js","webpack:///./src/Expr/ArgumentsInterface.js","webpack:///./src/Expr/Arguments.js","webpack:///./src/Expr/AssertionInterface.js","webpack:///./src/Expr/Assertion.js","webpack:///./src/Expr/AssignmentInterface.js","webpack:///./src/Expr/Assignment.js","webpack:///./node_modules/@web-native-js/commons/obj/copy.js","webpack:///./src/Expr/BlockInterface.js","webpack:///./src/Expr/ReturnInterface.js","webpack:///./src/Expr/Block.js","webpack:///./src/Expr/BoolInterface.js","webpack:///./src/Expr/Bool.js","webpack:///./src/Expr/Call.js","webpack:///./src/Expr/ComparisonInterface.js","webpack:///./src/Expr/Comparison.js","webpack:///./src/Expr/ConditionInterface.js","webpack:///./src/Expr/Condition.js","webpack:///./src/Expr/DeletionInterface.js","webpack:///./src/Expr/Deletion.js","webpack:///./src/Expr/Func.js","webpack:///./src/Expr/If.js","webpack:///./node_modules/@web-native-js/commons/arr/intersect.js","webpack:///./src/Expr/MathInterface.js","webpack:///./src/Expr/Math.js","webpack:///./src/Expr/NumInterface.js","webpack:///./src/Expr/Num.js","webpack:///./src/Expr/ObjInterface.js","webpack:///./src/Expr/Obj.js","webpack:///./src/Expr/PresenceInterface.js","webpack:///./src/Expr/Presence.js","webpack:///./src/Expr/Reference.js","webpack:///./src/Expr/Return.js","webpack:///./src/Expr/StrInterface.js","webpack:///./src/Expr/Str.js","webpack:///./src/Expr/VoidInterface.js","webpack:///./src/Expr/Void.js","webpack:///./src/index.js","webpack:///./src/browser-entry.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Array","isArray","val","toString","isNaN","keysAll","until","prototypalChain","obj","indexOf","push","getPrototypeOf","forEach","items","itm","arr","getOwnPropertyNames","mergeCallback","objs","callback","deepProps","isReplace","withSymbols","depth","obj1","shift","length","Error","obj2","valAtObj1","valAtObj2","getOwnPropertyDescriptor","e","k","arguments","undefined","limit","splice","classB","mixinTest","classA","Function","prototypes","reduce","prevAns","constructor","Number","returnValue","keys","parseFloat","_even","assertion","obj1Keys","obj2Keys","result","contn","v1","testPass","v2","netComparison","contrast","returnOnFirstFalse","Expr","jsenType","this","Super","comments","meta","vars","Interface","ExprInterface","args","super","cache","expr","Parsers","params","_parsed","allowCache","parseOne","parsers","values","grammars","parsed","assert","SyntaxError","Parser","parse","_expr","_Parsers","_params","subStmt","lodge","ReferenceInterface","CallInterface","_var","deepVars","reference","context","FuncInterface","IfInterface","onTrue","onFalse","explain","String","search","subject","pos","afterLast","lastIndexOf","substr","beforeLast","filter","index","self","stack","errorLevel","local","$local","trap","observe","props","prop","_has","main","scope","changes","references","delta","map","path","concat","oldValue","subtree","tags","unobserve","final","level","callMain","handle","bindThis","contxtObj","contxtMeta","advance","_get","test","initKeyword","type","set","_set","cntxt","localContxtMeta","LogicalError","ReferenceError","deleteProperty","del","prop2","contextObj2","fn","exec","apply","execUnknown","has","startsWith","openingTag","endsWith","closingTag","castObject","slice","_flatten","withObjects","acc","count","firsts","amount","reverse","str","delims","options","copyResult","nesting","maxDepth","tokens","matches","matchesi","$cache","cached","lex","$str","$options","blocks","$blocks","quotes","$quotes","$comments","runtime","_evalCharsAt","join","charWidth","commentTest","quoteTest","nestingTest","openComment","_testQuotes","openQuote","_testComments","ending","_push","chars","starting","_testNesting","stopChar","_testChars","stopChars","stopCharForward","matchedDelim","preserveDelims","quote","block","Math","max","testList","ret","useRegex","match","RegExp","ci","toLowerCase","target","isNewSeries","splitSeries","splitSeries2","regParse","AbstractionInterface","eval","parseCallback","ArrInterface","exprs","newExprs","exprA","uniqueSoFar","exprB","even","trim","split","ArgumentsInterface","list","arg","Assertion","AssertionInterface","logic","negation","operators","toUpperCase","isOr","or","isNor","nor","isAnd","and","isNand","nand","lastResult","trues","Assignment","AssignmentInterface","operator","postIncrDecr","initialVal","getEval","includes","operandA","operandB","_pushUnique","message","testBlockEnd","isIncrDecr","a","b","BlockInterface","stmts","delim","stringifyEach","callEval","stmt","catch","results","isDirectEventTarget","f","v","isIndirectEventTarget","ReturnInterface","BoolInterface","state","pop","ComparisonInterface","operand1","operand2","compare","oper","strict","exact","is","isNull","equalsTo","strictlyNotEqualsTo","notEqualsTo","relative","lesserThan","greaterThan","lesserThanOrEqualsTo","greaterThanOrEqualsTo","between","partial","contains","any","in","ConditionInterface","splits","Deletion","DeletionInterface","red","Func","paramters","statements","arrowFunctionFormatting","parentParams","ownParams","nameInParent","nameInSelf","defaultValInParent","defaultValInSelf","sup","instance","newMainContext","defaultVal","nestedContext","retrn","body","headNoWrap","head","bodyNoWrap","funcHead","funcBody","param","paramSplit","_context","onTrueIsBlock","onFalseIsBlock","rest","arr2","val1","val2","MathInterface","currentTotal","sub","NumInterface","int","dec","parseInt","Obj","ObjInterface","entries","_entriesSplit","entry","Presence","PresenceInterface","Reference","backticks","sourceContext","subjectContext","separator","nameSplit","isContext","exprLc","StrInterface","VoidInterface","If","Return","Abstraction","Condition","Comparison","Arr","Num","Str","Bool","Void","Call","window","WN","Jsen","WebNative"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\r\n/**\r\n * Tells if val is of type \"array\".\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn Array.isArray(val);\r\n};\r\n","\r\n/**\r\n * Tells if val is of type \"function\".\r\n * This holds true for both regular functions and classes.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn typeof val === 'function';\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeFunction from './isTypeFunction.js';\r\n\r\n/**\r\n * Tells if val is of type \"function\".\r\n *\r\n * @param object \t\tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isTypeFunction(val) || (val && {}.toString.call(val) === '[object function]');\r\n};\r\n","\r\n/**\r\n * Tells if val is pure object.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn !Array.isArray(val) && typeof val === 'object' && val;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeFunction from './isTypeFunction.js';\r\n\r\n/**\r\n * Tells if val is of type \"object\".\r\n * This holds true for anything object, including built-ins.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn Array.isArray(val) || (typeof val === 'object' && val) || _isTypeFunction(val);\r\n};\r\n","\r\n/**\r\n * Tells if val is of type \"string\" or a numeric string.\r\n * This holds true for both numbers and numeric strings.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val !== true && val !== false && val !== null && val !== '' && !isNaN(val * 1);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _pushUnique from '../arr/pushUnique.js';\r\nimport _getPrototypeChain from './getPrototypeChain.js';\r\n\r\n/**\r\n * Eagerly retrieves object members all down the prototype chain.\r\n *\r\n * @param object\t \tobj\r\n * @param object\t \tuntil\r\n *\r\n * @return array\r\n */\r\nexport default function(obj, until) {\r\n\tvar keysAll = [];\r\n\t_getPrototypeChain(obj, until).forEach(obj => {\r\n\t\t_pushUnique(keysAll, ...Object.getOwnPropertyNames(obj));\r\n\t});\r\n\treturn keysAll;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\n\r\n/**\r\n * Returns the prototype chain.\r\n *\r\n * @param object \t\tobj\r\n * @param object\t \tuntil\r\n *\r\n * @return bool\r\n */\r\nexport default function(obj, until) {\r\n\tuntil = until || Object.prototype;\r\n\tuntil = until && !_isArray(until) ? [until] : until;\r\n\t// We get the chain of inheritance\r\n\tvar prototypalChain = [];\r\n\tvar obj = obj;\r\n\twhile((obj && (!until || until.indexOf(obj) < 0) && obj.name !== 'default')) {\r\n\t\tprototypalChain.push(obj);\r\n\t\tobj = obj ? Object.getPrototypeOf(obj) : null;\r\n\t}\r\n\treturn prototypalChain;\r\n};\r\n","\r\n/**\r\n * Adds an item if not already exist.\r\n *\r\n * @param array \tarr\r\n * @param array\t \t...itms\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, ...items) {\r\n\titems.forEach(itm => {\r\n\t\tif (arr.indexOf(itm) < 0) {\r\n\t\t\tarr.push(itm);\r\n\t\t}\r\n\t});\r\n\treturn arr;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\nimport _getAllPropertyNames from './getAllPropertyNames.js';\r\n\r\n/**\r\n  * Merges values from subsequent arrays/objects first array/object;\r\n  * optionally recursive\r\n  *\r\n  * @param array ...objs\r\n  *\r\n  * @return void\r\n  */\r\nexport default function mergeCallback(objs, callback, deepProps = false, isReplace = false, withSymbols = true) {\r\n\tvar depth = 0;\r\n\tvar obj1 = objs.shift();\r\n\tif (_isNumeric(obj1) || obj1 === true || obj1 === false) {\r\n\t\tdepth = obj1;\r\n\t\tobj1 = objs.shift();\r\n\t}\r\n\tif (!objs.length) {\r\n\t\tthrow new Error('_merge() requires two or more array/objects.');\r\n\t}\r\n\tobjs.forEach((obj2, i) => {\r\n\t\tif (!_isTypeObject(obj2) && !_isFunction(obj2)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t(deepProps ? _getAllPropertyNames(obj2) : Object.getOwnPropertyNames(obj2)).forEach(key => {\r\n\t\t\tvar valAtObj1 = obj1[key];\r\n\t\t\tvar valAtObj2 = obj2[key];\r\n\t\t\tif (((_isArray(valAtObj1) && _isArray(valAtObj2)) || (_isObject(valAtObj1) && _isObject(valAtObj2))) \r\n\t\t\t&& (depth === true || depth > 0)) {\r\n\t\t\t\t// RECURSE...\r\n\t\t\t\tobj1[key] = _isArray(valAtObj1) && _isArray(valAtObj2) ? [] : {};\r\n\t\t\t\tmergeCallback([_isNumeric(depth) ? depth - 1 : depth, obj1[key], valAtObj1, valAtObj2], callback, deepProps, isReplace, withSymbols);\r\n\t\t\t} else if (callback(key, obj1, obj2, i)) {\r\n\t\t\t\tif (_isArray(obj1) && _isArray(obj2)) {\r\n\t\t\t\t\tif (isReplace) {\r\n\t\t\t\t\t\tobj1[key] = valAtObj2;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tobj1.push(valAtObj2);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// In case we're setting a read-only property\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tif (withSymbols) {\r\n\t\t\t\t\t\t\tObject.defineProperty(obj1, key, Object.getOwnPropertyDescriptor(obj2, key));\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tobj1[key] = obj2[key];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} catch(e) {}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\treturn obj1;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _mergeCallback from './mergeCallback.js';\r\n\r\n/**\r\n  * Merges values from subsequent arrays/objects first array/object;\r\n  * optionally recursive\r\n  *\r\n  * @param array ...objs\r\n  *\r\n  * @return void\r\n  */\r\nexport default function(...objs) {\r\n\treturn _mergeCallback(objs, (k, obj1, obj2) => {\r\n\t\treturn true;\r\n\t}, false/*deepProps*/, false/*isReplace*/, false/*withSymbols*/);\r\n};\r\n","\r\n/**\r\n * Tells if val is undefined or is null.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val === null || val === '';\r\n};\r\n","\r\n/**\r\n * Tells if val is undefined or is of type \"undefined\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn arguments.length && (val === undefined || typeof val === 'undefined');\r\n};\r\n","\r\n/**\r\n * Removes instances of reference up to <limit> times.\r\n *\r\n * @param array \tarr\r\n * @param mixed\t \titm\r\n * @param int|bool \tlimit\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, itm, limit = false) {\r\n\tvar i = arr.indexOf(itm);\r\n\twhile (i > -1 && (limit || limit === false)) {\r\n\t\tarr.splice(i, 1);\r\n\t\tif (limit > 0) {\r\n\t\t\tlimit --;\r\n\t\t};\r\n\t\ti = arr.indexOf(itm);\r\n\t};\r\n\treturn arr;\r\n};\r\n","\r\n/**\r\n * Instanceof that supports our multi-inheritance implementstion.\r\n *\r\n * @param object\t \tobj1\r\n * @param object\t \tclassB\r\n *\r\n * @return bool\r\n */\r\nexport default function(obj, classB) {\r\n\tif (!obj) {\r\n\t\treturn false;\r\n\t}\r\n\tif (obj instanceof classB) {\r\n\t\treturn true;\r\n\t}\r\n\tvar mixinTest = classA => {\r\n\t\twhile (classA && classA !== Function.prototype) {\r\n\t\t\tif (classA === classB || (classA.prototypes && classA.prototypes.reduce((prevAns, prototype) => prevAns || (prototype === classB) || mixinTest(prototype), false))) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tclassA = Object.getPrototypeOf(classA);\r\n\t\t}\r\n\t\treturn false;\r\n\t};\r\n\treturn mixinTest(obj.constructor);\r\n};\r\n","\r\n/**\r\n * Tells if val is of type \"number\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val instanceof Number || (typeof val === 'number');\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isObject from './isObject.js';\r\n\r\n/**\r\n * Tells if an object is direct instance of Object.prototype.\r\n * Quite useful in differentiating native objects and class instances from plain objects ({}).\r\n *\r\n * @param object \tobj\r\n *\r\n * @return bool\r\n */\r\nexport default function(obj) {\r\n\treturn _isObject(obj) && Object.getPrototypeOf(obj) === Object.prototype;\r\n};\r\n","\r\n/**\r\n * Tells if val is undefined or is of type \"boolean\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val === true || val === false;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\n\r\n/**\r\n * Loops thru obj flatly with a callback function.\r\n * Stops when callback returns a non-undefined value.\r\n *\r\n * @param array|object \t\t\tobj \t\t\tThe array or object to iterate.\r\n * @param function \t\t\t\tcallback \t\tThe callback function.\r\n *\r\n * @return mixed|null\t\t\tAny non-null return from callback\r\n */\r\nexport default function(obj, callback) {\r\n\tvar returnValue = undefined;\r\n\tif (_isTypeObject(obj)) {\r\n\t\tObject.keys(obj).forEach((k, i) => {\r\n\t\t\tif (returnValue !== false) {\r\n\t\t\t\treturnValue = callback(_isNumeric(k) ? parseFloat(k) : k, obj[k], i);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\treturn returnValue;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNumber from '../js/isNumber.js';\r\nimport _isArray from '../js/isArray.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _isPlainObject from '../js/isPlainObject.js';\r\nimport _compareCallback from './compareCallback.js';\r\n\r\n/**\r\n * Asserts (members of) the first value against (members of) subsequent values.\r\n * Assertion could be TRUE, FALSE, or custom.\r\n *\r\n * @param mixed \t\t\tobj1\r\n * @param mixed \t\t\tobj2\r\n * @param bool|function\t\tassertion\r\n * @param int\t\t\t\tdepth\r\n *\r\n * @return bool\r\n */\r\nconst _even = function(obj1, obj2, assertion = true, depth = 1) {\r\n\tif (_isArray(obj1) && _isArray(obj2) && obj1.length !== obj2.length) {\r\n\t\treturn !assertion;\r\n\t}\r\n\tif (_isObject(obj1) && _isObject(obj2)) {\r\n\t\tvar obj1Keys = Object.keys(obj1);\r\n\t\tvar obj2Keys = Object.keys(obj2);\r\n\t\tif (!obj1Keys.length && !obj2Keys.length) {\r\n\t\t\t// Objects that won't show keys must be compared by instance\r\n\t\t\t// Many native objects won't. So we can't judge by keys alone.\r\n\t\t\treturn _isPlainObject(obj1) && _isPlainObject(obj2) \r\n\t\t\t\t? assertion\r\n\t\t\t\t: (obj1 === obj2) === assertion;\r\n\t\t}\r\n\t\tif (!_even(obj1Keys, obj2Keys)) {\r\n\t\t\treturn !assertion;\r\n\t\t}\r\n\t}\r\n\tif (depth > 0 && ((_isArray(obj1) && _isArray(obj2)) || (_isObject(obj1) && _isObject(obj2)))) {\r\n\t\tvar result = _compareCallback(obj1, obj2, (v1, v2) => {\r\n\t\t\treturn _even(v1, v2, assertion, depth - 1);\r\n\t\t}, false/*netComparison*/, false/*contrast*/, true/*returnOnFirstFalse*/);\r\n\t\treturn _isArray(result) \r\n\t\t\t? result.length === obj1.length && result.length === obj2.length \r\n\t\t\t: (_isObject(result) && _isObject(obj1) \r\n\t\t\t\t? Object.keys(result).length === Object.keys(obj1).length && Object.keys(result).length ===  Object.keys(obj2).length \r\n\t\t\t\t: result);\r\n\t}\r\n\treturn _isFunction(assertion) ? assertion(obj1, obj2) : (\r\n\t\t_isNumber(obj1) && _isNumber(obj2) && isNaN(obj1) && isNaN(obj2) \r\n\t\t\t? assertion \r\n\t\t\t: (obj1 === obj2) === assertion\r\n\t);\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default _even;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isBoolean from '../js/isBoolean.js';\r\nimport _each from './each.js';\r\n\r\n/**\r\n * Gets the match(es) between (members of) two values;\r\n * assertion optionally custom.\r\n *\r\n * @param mixed \t\t\tob1\r\n * @param mixed \t\t\tobj2\r\n * @param string|function\tassertion\r\n * @param bool\t\t\t\tnetComparison\r\n * @param bool\t\t\t\tcontrast\r\n * @param bool\t\t\t\treturnOnFirstFalse\r\n *\r\n * @return bool|array|object\r\n */\r\nexport default function(obj1, obj2, assertion = true, netComparison = true, contrast = false, returnOnFirstFalse = false) {\r\n\tif (_isArray(obj1) && _isArray(obj2)) {\r\n\t\tvar result = [];\r\n\t\tvar contn = true;\r\n\t\tobj1.forEach(v1 => {\r\n\t\t\tif (!contn) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar testPass = false;\r\n\t\t\t_each(obj2, (k, v2) => {\r\n\t\t\t\tif (!testPass || (netComparison && _isTypeObject(v1))) {\r\n\t\t\t\t\ttestPass = assertion(v1, v2);\r\n\t\t\t\t\tif ((_isArray(testPass) && !testPass.length) || (_isObject(testPass) && !Object.keys(testPass).length)) {\r\n\t\t\t\t\t\ttestPass = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (_isTypeObject(testPass) && netComparison) {\r\n\t\t\t\t\t\t// Further recursions should use this testPass as v1\r\n\t\t\t\t\t\tv1 = testPass;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (_isTypeObject(testPass)) {\r\n\t\t\t\tresult.push(netComparison ? testPass : v1);\r\n\t\t\t} else if (!_isBoolean(testPass)) {\r\n\t\t\t\tresult.push(testPass);\r\n\t\t\t} else if ((contrast && !testPass) || (!contrast && testPass)) {\r\n\t\t\t\tresult.push(v1);\r\n\t\t\t} else if (returnOnFirstFalse) {\r\n\t\t\t\tcontn = false;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\tif (_isObject(obj1) && _isObject(obj2)) {\r\n\t\tvar result = {};\r\n\t\tvar contn = true;\r\n\t\tObject.keys(obj1).forEach(k => {\r\n\t\t\tif (!contn) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar testPass = assertion(obj1[k], obj2[k]);\r\n\t\t\tif ((_isArray(testPass) && !testPass.length) || (_isObject(testPass) && !Object.keys(testPass).length)) {\r\n\t\t\t\ttestPass = false;\r\n\t\t\t}\r\n\t\t\tif (_isTypeObject(testPass)) {\r\n\t\t\t\tresult[k] = netComparison ? testPass : obj1[k];\r\n\t\t\t} else if (!_isBoolean(testPass)) {\r\n\t\t\t\tresult[k] = testPass;\r\n\t\t\t} else if ((contrast && !testPass) || (!contrast && testPass)) {\r\n\t\t\t\tresult[k] = obj1[k];\r\n\t\t\t} else if (returnOnFirstFalse) {\r\n\t\t\t\tcontn = false;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isObject from '@web-native-js/commons/js/isObject.js';\r\nimport _even from '@web-native-js/commons/obj/even.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ExprInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class {\r\n\t\r\n\t/**\r\n\t * Compares the current instance with another object.\r\n\t *\r\n\t * @param object Expr\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\teven(Expr) {\r\n\t\tif (_isObject(Expr) && Expr.jsenType === this.jsenType) {\r\n\t\t\treturn _even(Expr, this);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Inherits properties from a super Expr.\r\n\t *\r\n\t * @param ExprInterface Super\r\n\t *\r\n\t * @return this\r\n\t */\r\n\tinherit(Super) {\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Adds comments to the instance.\r\n\t *\r\n\t * @param string\t comments\r\n\t *\r\n\t * @return this\r\n\t */\r\n\twithComments(comments) {\r\n\t\tif (!this.meta) {\r\n\t\t\tthis.meta = {};\r\n\t\t}\r\n\t\tthis.meta.comments = comments;\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Adds variables to the instance.\r\n\t *\r\n\t * @param array\t\t vars\r\n\t *\r\n\t * @return this\r\n\t */\r\n\twithVars(vars) {\r\n\t\tif (!this.meta) {\r\n\t\t\tthis.meta = {};\r\n\t\t}\r\n\t\tthis.meta.vars = vars;\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Evaluates the expression instance for a result,\r\n\t * optionally in the context of an object.\r\n\t *\r\n\t * @param object context\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\t//eval(context = null, trap = {})\r\n\t\r\n\t/**\r\n\t * Serializes the expression instance back to a string,\r\n\t * optionally in the context of an object.\r\n\t *\r\n\t * @param object context\r\n\t *\r\n\t * @return string\r\n\t */\r\n\t//toString(context = null)\r\n\t\r\n\t/**\r\n\t * SAttempts to parse a string into the class instance.\r\n\t *\r\n\t * @param string expr\r\n\t * @param object params\r\n\t *\r\n\t * @return ExprInterface\r\n\t */\r\n\t//static parse(expr, params = {})\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ReferenceInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Reference'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * CallInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'CallExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * FuncInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'FunctionType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * IfInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'IfConditional'; },\r\n});\r\nexport default Interface;\r\n","/**\r\n * SyntaxError\r\n */\r\nexport default class extends Error {\r\n    constructor(...args) {\r\n        super(...args);\r\n        this.name = 'Syntax Error';\r\n    }\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _merge from '@web-native-js/commons/obj/merge.js';\r\nimport _isEmpty from '@web-native-js/commons/js/isEmpty.js';\r\nimport _remove from '@web-native-js/commons/arr/remove.js';\r\nimport _isArray from '@web-native-js/commons/js/isArray.js';\r\nimport _instanceof from '@web-native-js/commons/js/instanceof.js';\r\nimport ReferenceInterface from './Expr/ReferenceInterface.js';\r\nimport CallInterface from './Expr/CallInterface.js';\r\nimport FuncInterface from './Expr/FuncInterface.js';\r\nimport IfInterface from './Expr/IfInterface.js';\r\nimport SyntaxError from './SyntaxError.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Jsen (base) class\r\n * ---------------------------\r\n */\t\t\t\t\r\nconst cache = {};\r\nexport default class Jsen {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, Parsers, params = {}) {\r\n\t\tif (expr.length) {\r\n\t\t\tif (cache[expr] && !Parsers && params.allowCache !== false) {\r\n\t\t\t\tvar _parsed;\r\n\t\t\t\tif (_parsed = this.parseOne(expr, cache[expr], params)) {\r\n\t\t\t\t\treturn _parsed;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// -----------------------------\r\n\t\t\tvar parsers = Object.values(Parsers || this.grammars);\r\n\t\t\tfor (var i = 0; i < parsers.length; i ++) {\r\n\t\t\t\tvar parsed = this.parseOne(expr, parsers[i], params);\r\n\t\t\t\tif (parsed) {\r\n\t\t\t\t\tif (!Parsers && params.allowCache !== false) {\r\n\t\t\t\t\t\tcache[expr] = parsers[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn parsed;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// -----------------------------\r\n\t\t\tif (params.assert === false) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthrow new SyntaxError(expr);\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\r\n\tstatic parseOne(expr, Parser, params = {}) {\r\n\t\t// From this point forward, all vars is within current scope\r\n\t\tvar vars = [], deepVars = [];\r\n\t\tvar parsed = Parser.parse(expr, (_expr, _Parsers, _params = {}) => {\r\n\t\t\tvar subStmt = this.parse(_expr, _Parsers, _params ? _merge(params, _params) : params);\r\n\t\t\tif (_params.lodge !== false) {\r\n\t\t\t\tif (_instanceof(subStmt, ReferenceInterface) || _instanceof(subStmt, CallInterface)) {\r\n\t\t\t\t\tvars.push(subStmt);\r\n\t\t\t\t}\r\n\t\t\t\tif (subStmt) {\r\n\t\t\t\t\tsubStmt.meta.vars.forEach(_var => vars.push(_var));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn subStmt;\r\n\t\t}, params);\r\n\t\t// Add/remove vars to scope\r\n\t\tif (parsed) {\r\n\t\t\tif (!parsed.meta) {\r\n\t\t\t\tparsed.meta = {};\r\n\t\t\t}\r\n\t\t\tparsed.meta.vars = vars;\r\n\t\t\tparsed.meta.deepVars = [];\r\n\t\t\tparsed.meta.deepVars = [];\r\n\t\t\tif (_instanceof(parsed, CallInterface)) {\r\n\t\t\t\tif (parsed.reference.context) {\r\n\t\t\t\t\tparsed.meta.vars.push(parsed.reference.context);\r\n\t\t\t\t}\r\n\t\t\t} else if (_instanceof(parsed, FuncInterface)) {\r\n\t\t\t\tparsed.meta.vars.splice(0);\r\n\t\t\t} else if (_instanceof(parsed, IfInterface)) {\r\n\t\t\t\tif (parsed.onTrue) {\r\n\t\t\t\t\tparsed.onTrue.meta.vars.forEach(_var => {\r\n\t\t\t\t\t\t_remove(parsed.meta.vars, _var);\r\n\t\t\t\t\t\tparsed.meta.deepVars.push(_var);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif (parsed.onFalse) {\r\n\t\t\t\t\tparsed.onFalse.meta.vars.forEach(_var => {\r\n\t\t\t\t\t\t_remove(parsed.meta.vars, _var);\r\n\t\t\t\t\t\tparsed.meta.deepVars.push(_var);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tparsed.meta.vars.push(...deepVars);\r\n\t\t\t}\r\n\t\t\tif (_isArray(params.explain)) {\r\n\t\t\t\tparams.explain.push(expr + ' >>------------->> ' + parsed.jsenType);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn parsed;\r\n\t}\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeFunction from './isTypeFunction.js';\r\n\r\n/**\r\n * Tells if val is of type \"class\".\r\n *\r\n * @param object \t\tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isTypeFunction(val) && /^class\\s?/.test(Function.prototype.toString.call(val));\r\n};\r\n","\r\n/**\r\n * Tells if val is of type \"string\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val instanceof String || (typeof val === 'string' && val !== null);\r\n};\r\n","\r\n/**\r\n * Return the remainder of a string after a given value.\r\n *\r\n * @param  string  subject\r\n * @param  string  search\r\n * @param  bool\t   afterLast\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, search, afterLast = false) {\r\n\tif (search == '') {\r\n\t\treturn subject;\r\n\t}\r\n\tvar pos = afterLast ? subject.lastIndexOf(search) : subject.indexOf(search);\r\n\tif (pos === -1) {\r\n\t\treturn '';\r\n\t}\r\n\treturn subject.substr(pos + search.length);\r\n};\r\n","\r\n/**\r\n * Return the part of a string before a given value.\r\n *\r\n * @param  string  subject\r\n * @param  string  search\r\n * @param  bool\t   beforeLast\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, search, beforeLast = false) {\r\n\tif (search == '') {\r\n\t\treturn subject;\r\n\t}\r\n\tvar pos = beforeLast ? subject.lastIndexOf(search) : subject.indexOf(search);\r\n\tif (pos === -1) {\r\n\t\treturn subject;\r\n\t}\r\n\treturn subject.substr(0, pos);\r\n};\r\n","\r\n/**\r\n * Returns a list of unique items.\r\n *\r\n * @param array\t \t\t\t\tarr\r\n *\t *\r\n * @return array\r\n */\r\nexport default function(arr) {\r\n\tconst distinct = (value, index, self) => {\r\n\t\treturn self.indexOf(value) === index;\r\n\t};\r\n\treturn arr.filter(distinct);\r\n};\r\n","/**\r\n * ReferenceError\r\n */\r\nexport default class extends Error {\r\n    constructor(...args) {\r\n        super(...args);\r\n        this.name = 'Reference Error';\r\n    }\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeObject from '@web-native-js/commons/js/isTypeObject.js';\r\nimport _isUndefined from '@web-native-js/commons/js/isUndefined.js';\r\nimport _isFunction from '@web-native-js/commons/js/isFunction.js';\r\nimport _isClass from '@web-native-js/commons/js/isClass.js';\r\nimport _isString from '@web-native-js/commons/js/isString.js';\r\nimport _isNull from '@web-native-js/commons/js/isNull.js';\r\nimport _isNumber from '@web-native-js/commons/js/isNumber.js';\r\nimport _after from '@web-native-js/commons/str/after.js';\r\nimport _before from '@web-native-js/commons/str/before.js';\r\nimport _unique from '@web-native-js/commons/arr/unique.js';\r\nimport ReferenceError from './ReferenceError.js';\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default class Scope {\r\n\r\n\t/**\r\n\t * Creates a new context stack.\r\n\t *\r\n\t * @param object\t \tparams\r\n\t * @param object\t\tparams\r\n\t *\r\n\t * @return Scope\r\n\t */\r\n\tconstructor(stack, params = {}) {\r\n\t\tthis.stack = stack;\r\n\t\tthis.params = params;\r\n\t\tif (!('main' in this.stack)) {\r\n\t\t\tthrow new Error('A \"main\" context must be provided!');\r\n\t\t}\r\n\t\tif (this.stack.super) {\r\n\t\t\tthis.stack.super = Scope.create(this.stack.super, {errorLevel: params.errorLevel});\r\n\t\t}\r\n\t\tthis.stack.local = this.stack.local || {};\r\n\t\tthis.stack.$local = this.stack.$local || {};\r\n\t}\r\n\r\n\t/**\r\n\t * Binds a callback to changes\r\n\t * that happen in the contexts.\r\n\t *\r\n\t * @param object\t\t \ttrap\r\n\t * @param function\t\t \tcallback\r\n\t *\r\n\t * @return Scope\r\n\t */\r\n\tobserve(trap, callback) {\r\n\t\tif (this.stack.super) {\r\n\t\t\tthis.stack.super.observe(trap, (e) => {\r\n\t\t\t\tif (e.props.filter(prop => !_has(this.stack.local, prop, trap) && !_has(this.stack.main, prop, trap)).length) {\r\n\t\t\t\t\te.scope = 'super';\r\n\t\t\t\t\treturn callback(e);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\ttrap.observe(this.stack, changes => {\r\n\t\t\t// Changes firing directly from super and local should be ignored\r\n\t\t\tchanges = changes.filter(delta => delta.name === 'main');\r\n\t\t\tvar references = changes.map(delta => _after(delta.path, '.'))\r\n\t\t\t\t.filter(path => path);\r\n\t\t\tvar props = references.map(path => _before(path, '.'));\r\n\t\t\tif (!references.length && changes.length && changes[0].value) {\r\n\t\t\t\tprops = _unique((\r\n\t\t\t\t\t\t_isTypeObject(changes[0].value) ? Object.keys(changes[0].value) : []\r\n\t\t\t\t\t).concat(changes[0].oldValue && _isTypeObject(changes[0].oldValue) ? Object.keys(changes[0].oldValue) : [])\r\n\t\t\t\t);\r\n\t\t\t\treferences = props;\r\n\t\t\t}\r\n\t\t\tif (props.filter(prop => !_has(this.stack.local, prop, trap)).length) {\r\n\t\t\t\treturn callback({\r\n\t\t\t\t\tprops,\r\n\t\t\t\t\treferences,\r\n\t\t\t\t\tscope:'local',\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tsubtree:true,\r\n\t\t\ttags:[this, 'jsen-context',],\r\n\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Unbinds callbacks previously bound\r\n\t * with observe()\r\n\t *\r\n\t * @param object\t\t \ttrap\r\n\t * @param function\t\t \tcallback\r\n\t *\r\n\t * @return Scope\r\n\t */\r\n\tunobserve(trap, callback) {\r\n\t\tif (this.stack.super) {\r\n\t\t\tthis.stack.super.unobserve(trap, callback);\r\n\t\t}\r\n\t\ttrap.unobserve(this.stack, callback, {\r\n\t\t\tsubtree:true,\r\n\t\t\ttags:[this, 'jsen-context',],\r\n\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Tries the handler on the different contexts in the stack.\r\n\t *\r\n\t * @param string|number \tprop\r\n\t * @param function\t\t \tcallback\r\n\t * @param function\t\t \tfinal\r\n\t *\r\n\t * @return Scope\r\n\t */\r\n\thandle(prop, callback, final, level = 0) {\r\n\t\tvar callMain = () => {\r\n\t\t\treturn callback(this.stack.main, null, () => {\r\n\t\t\t\tif (this.stack.super) {\r\n\t\t\t\t\treturn this.stack.super.handle(prop, callback, final, level + 1);\r\n\t\t\t\t}\r\n\t\t\t\tif (final) {\r\n\t\t\t\t\treturn final();\r\n\t\t\t\t}\r\n\t\t\t}, level);\r\n\t\t};\r\n\t\t// Normally, we would begin with local...\r\n\t\t// but no if...\r\n\t\tif (prop === 'toString' && this.stack.local.toString === Object.prototype.toString) {\r\n\t\t\treturn callMain();\r\n\t\t}\r\n\t\t// Conditions are right, we begin with local\r\n\t\treturn callback(this.stack.local, this.stack.$local, callMain, level);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a property's value from the first possessing context.\r\n\t *\r\n\t * @param string|number prop\r\n\t * @param object\t\ttrap\r\n\t * @param bool\t\t\tbindThis\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\tget(prop, trap = {}, bindThis = true) {\r\n\t\tif (prop instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop = prop + '';\r\n\t\t}\r\n\t\treturn this.handle(prop, (contxtObj, contxtMeta, advance, level) => {\r\n\t\t\tvar val = _get(contxtObj, prop, trap);\r\n\t\t\t// asking first mught not go well generally && _has(this[i], prop, trap)\r\n\t\t\tif (!_isUndefined(val) || _has(contxtObj, prop, trap)) {\r\n\t\t\t\tif (_isFunction(val) && !_isClass(val) && bindThis) {\r\n\t\t\t\t\treturn val.bind(contxtObj);\r\n\t\t\t\t}\r\n\t\t\t\treturn val;\r\n\t\t\t}\r\n\t\t\treturn advance();\r\n\t\t}/* Not good for RQL derived fields , () => {throw new ReferenceError('\"' + prop + '\" is undefined!');}*/);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Updates a property's value from the first possessing context.\r\n\t * Or adds a new context to set the property.\r\n\t *\r\n\t * @param string|number prop\r\n\t * @param mixed\t\t\tval\r\n\t * @param object\t\ttrap\r\n\t * @param bool\t\t\tinitKeyword\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tset(prop, val, trap = {}, initKeyword = false) {\r\n\t\tif (this.params.type === 2 && initKeyword === 'var' && this.stack.super) {\r\n\t\t\treturn this.stack.super.set(prop, val, trap, initKeyword);\r\n\t\t}\r\n\t\tif (prop instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop = prop + '';\r\n\t\t}\r\n\t\tconst _set = (cntxt, prop, val, trap) => {\r\n\t\t\tif (trap.set) {\r\n\t\t\t\treturn trap.set(cntxt, prop, val);\r\n\t\t\t}\r\n\t\t\tcntxt[prop] = val;\r\n\t\t\treturn true;\r\n\t\t};\r\n\t\treturn this.handle(initKeyword ? true : prop, (contxtObj, localContxtMeta, advance) => {\r\n\t\t\t// Whatever the level of localContext...\r\n\t\t\tif (localContxtMeta && localContxtMeta[prop] === 'const') {\r\n\t\t\t\tthrow new LogicalError('CONST ' + prop + ' cannot be modified!');\r\n\t\t\t}\r\n\t\t\t// Set this locally, we wont be getting to advance()\r\n\t\t\tif (initKeyword) {\r\n\t\t\t\tlocalContxtMeta[prop] = initKeyword;\r\n\t\t\t\treturn _set(contxtObj, prop, val, trap);\r\n\t\t\t}\r\n\t\t\t// For any other contex, it must already exists\r\n\t\t\tif (_has(contxtObj, prop, trap)) {\r\n\t\t\t\treturn _set(contxtObj, prop, val, trap);\r\n\t\t\t}\r\n\t\t\treturn advance();\r\n\t\t}, () => {throw new ReferenceError('\"' + prop + '\" is undefined!');});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Deletes a property from the first possessing context.\r\n\t *\r\n\t * @param string|number prop\r\n\t * @param object\t\ttrap\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tdel(prop, trap = {}) {\r\n\t\tif (prop instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop = prop + '';\r\n\t\t}\r\n\t\treturn this.handle(prop, (contxtObj, contxtMeta, advance) => {\r\n\t\t\tif (_has(contxtObj, prop, trap)) {\r\n\t\t\t\tif (contxtMeta) {\r\n\t\t\t\t\tdelete contxtMeta[prop];\r\n\t\t\t\t}\r\n\t\t\t\tif (trap.deleteProperty || trap.del) {\r\n\t\t\t\t\treturn (trap.deleteProperty || trap.del)(contxtObj, prop);\r\n\t\t\t\t}\r\n\t\t\t\tdelete contxtObj[prop];\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn advance();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Tests if a property exists in any context.\r\n\t *\r\n\t * @param string|number prop\r\n\t * @param string|number prop2\r\n\t * @param object\t\ttrap\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\thas(prop, prop2, trap = {}) {\r\n\t\tif (prop instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop = prop + '';\r\n\t\t}\r\n\t\tif (prop2 instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop2 = prop2 + '';\r\n\t\t}\r\n\t\treturn this.handle(prop, (contxtObj, contxtMeta, advance) => {\r\n\t\t\tif (_has(contxtObj, prop, trap)) {\r\n\t\t\t\tvar contextObj2 = _get(contxtObj, prop, trap);\r\n\t\t\t\treturn _has(contextObj2, prop2, trap);\r\n\t\t\t}\r\n\t\t\treturn advance();\r\n\t\t}, () => {throw new ReferenceError('\"' + prop + '\" is undefined!');});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Tests if a property exists in any context.\r\n\t *\r\n\t * @param string|number prop\r\n\t * @param array\t\t\targs\r\n\t * @param object\t\ttrap\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\texec(prop, args, trap = {}) {\r\n\t\tif (prop instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop = prop + '';\r\n\t\t}\r\n\t\treturn this.handle(prop, (contxtObj, contxtMeta, advance) => {\r\n\t\t\tvar fn = _get(contxtObj, prop, trap);\r\n\t\t\tif (!_isUndefined(fn) || _has(contxtObj, prop, trap)) {\r\n\t\t\t\tif (!_isFunction(fn)) {\r\n\t\t\t\t\tif (trap.exec) {\r\n\t\t\t\t\t\treturn trap.exec(contxtObj, prop, args);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthrow new ReferenceError('\"' + prop + '\" is not a function! (Called on type: ' + typeof contxtObj + '.)');\r\n\t\t\t\t}\r\n\t\t\t\tif (trap.apply) {\r\n\t\t\t\t\treturn trap.apply(fn, contxtObj, args);\r\n\t\t\t\t}\r\n\t\t\t\treturn fn.apply(contxtObj, args);\r\n\t\t\t}\r\n\t\t\treturn advance();\r\n\t\t}, () => {\r\n\t\t\tif (trap.execUnknown) {\r\n\t\t\t\treturn trap.execUnknown(this, prop, args);\r\n\t\t\t}\r\n\t\t\tthrow new ReferenceError('\"' + prop + '()\" is undefined!');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Factory method for making a Scope instance.\r\n\t *\r\n\t * @param array|object \tcntxt\r\n\t * @param object \t\tparams\r\n\t *\r\n\t * @return Scope\r\n\t */\r\n\tstatic create(cntxt, params = {}) {\r\n\t\treturn cntxt instanceof Scope ? cntxt : new Scope({\r\n\t\t\tmain: cntxt,\r\n\t\t}, params);\r\n\t}\r\n};\r\n\r\nconst _get = (cntxt, prop, trap) => {\r\n\tif (_isNull(cntxt) || _isUndefined(cntxt)) {\r\n\t\treturn;\r\n\t}\r\n\treturn trap.get && _isTypeObject(cntxt) ? trap.get(cntxt, prop) : (\r\n\t\tcntxt[prop]\r\n\t);\r\n};\r\n\r\nconst _has = (cntxt, prop, trap) => {\r\n\tif (_isNull(cntxt) || _isUndefined(cntxt)) {\r\n\t\treturn false;\r\n\t}\r\n\treturn trap.has && _isTypeObject(cntxt) ? trap.has(cntxt, prop) : (\r\n\t\t_isTypeObject(cntxt) ? prop in cntxt : !_isUndefined(cntxt[prop])\r\n\t);\r\n};","\r\n/**\r\n * Tells if the string is warapped with the given opening and closing tags.\r\n *\r\n * @param  string  subject\r\n * @param  string  openingTag\r\n * @param  string  closingTag\r\n *\r\n * @return bool\r\n */\r\nexport default function(subject, openingTag, closingTag) {\r\n\treturn subject.startsWith(openingTag) && subject.endsWith(closingTag);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _after from './after.js';\r\nimport _beforeLast from './beforeLast.js';\r\n\r\n/**\r\n * Returns the string without the given opening and closing tags.\r\n *\r\n * @param  string  subject\r\n * @param  string  openingTag\r\n * @param  string  closingTag\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, openingTag, closingTag) {\r\n\treturn _beforeLast(_after(subject, openingTag), closingTag);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _before from './before.js';\r\n\r\n/**\r\n * Return the part of a string before last occurence of a given value.\r\n *\r\n * @param  string  subject\r\n * @param  string  search\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, search) {\r\n\treturn _before(subject, search, true);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isTypeArray from '../js/isTypeArray.js';\r\nimport _isEmpty from '../js/isEmpty.js';\r\nimport _isObject from '../js/isObject.js';\r\n\r\n/**\r\n * Casts an array-like object to an array.\r\n *\r\n * @param mixed \tval\r\n * @param bool\t \tcastObject\r\n *\r\n * @return array\r\n */\r\nexport default function(val, castObject = true) {\r\n\tif (_isArray(val)) {\r\n\t\treturn val;\r\n\t};\r\n\tif (!castObject && _isObject(val)) {\r\n\t\treturn [val];\r\n\t};\r\n\tif (val !== false && val !== 0 && _isEmpty(val)) {\r\n\t\treturn [];\r\n\t};\r\n\tif (_isTypeArray(val)) {\r\n\t\treturn Array.prototype.slice.call(val);\r\n\t};\r\n\tif (_isObject(val)) {\r\n\t\treturn Object.values(val);\r\n\t};\r\n\treturn [val];\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNull from './isNull.js';\r\nimport _isUndefined from './isUndefined.js';\r\nimport _isTypeObject from './isTypeObject.js';\r\n\r\n/**\r\n * Tells if val is empty in its own type.\r\n * This holds true for NULLs, UNDEFINED, FALSE, 0,\r\n * objects without keys, empty arrays.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isNull(val) || _isUndefined(val) || val === false || val === 0 \r\n\t\t|| (_isTypeObject(val) && !Object.keys(val).length);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isString from './isString.js';\r\nimport _isUndefined from './isUndefined.js';\r\n\r\n/**\r\n * Tells if val is \"array-like\".\r\n * This holds true for anything that has a length property.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn !_isString(val) && !_isUndefined(val.length);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\n\r\n/**\r\n * Flattens a nested array to the given depth.\r\n *\r\n * @param array \tarr\r\n * @param int \t \tdepth\r\n * @param bool \t \twithObjects\r\n *\r\n * @return array\r\n */\r\nconst _flatten = function(arr, depth = 1, withObjects = true) {\r\n\tif (!_isNumeric(depth) || depth <= 0) {\r\n\t\treturn arr;\r\n\t};\r\n\tif (!_isArray(arr) && _isObject(arr) && withObjects) {\r\n\t\tarr = Object.values(arr);\r\n\t};\r\n\tif (!_isArray(arr)) {\r\n\t\treturn arr;\r\n\t};\r\n\treturn arr.reduce((acc, val) => _isArray(val) || (_isObject(val) && withObjects) \r\n\t\t? acc.concat(_flatten(!_isArray(val) ? Object.values(val) : val, depth - 1, withObjects)) \r\n\t\t: acc.concat(val), []);\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default _flatten;","\r\n/**\r\n * Returns THE FIRST ENTRY OR A NUMBER OF ENTRIES counting forward from the begining.\r\n *\r\n * @param array \tarr\r\n * @param int\t \tamount\r\n *\r\n * @return mixed|array\r\n */\r\nexport default function(arr, amount = 1) {\r\n\tvar count = 0;\r\n\tarr.forEach(itm => {\r\n\t\tcount ++;\r\n\t});\r\n\tvar firsts = arr.slice(arr.length - count, amount);\r\n\treturn arguments.length > 1 ? firsts : firsts[0];\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _first from './first.js';\r\n\r\n/**\r\n * Returns THE LAST ENTRY OR A NUMBER OF ENTRIES counting forward to the end.\r\n *\r\n * @param array \tarr\r\n * @param int\t \tamount\r\n *\r\n * @return mixed|array\r\n */\r\nexport default function(arr, amount = 1) {\r\n\treturn arguments.length > 1\r\n\t\t? _first(arr.slice().reverse(), amount).reverse()\r\n\t\t: _first(arr.slice().reverse());\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _mergeCallback from './mergeCallback.js';\r\n\r\n/**\r\n * Copies only properties of an object.\r\n *\r\n * @param object\t \tobj\r\n * @param array\t\t \tonly\r\n * @param array\t\t \texcept\r\n *\r\n * @return object\r\n */\r\nexport default function(obj, filter = []) {\r\n\treturn _mergeCallback([{}, obj], (key, obj1, obj2) => {\r\n\t\tif (!_isFunction(obj2[key])) {\r\n\t\t\treturn _isFunction(filter) ? filter(key) \r\n\t\t\t\t: (_isArray(filter) && filter.length ? filter.indexOf(key) > -1 : true);\r\n\t\t}\r\n\t}, false/*deepProps*/, false/*isReplace*/, false/*withSymbols*/);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isString from '../js/isString.js';\r\nimport _isUndefined from '../js/isUndefined.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _arrFrom from '../arr/from.js';\r\nimport _flatten from '../arr/flatten.js';\r\nimport _first from '../arr/first.js';\r\nimport _last from '../arr/last.js';\r\nimport _merge from '../obj/merge.js';\r\nimport _even from '../obj/even.js';\r\nimport _copyPlain from '../obj/copyPlain.js';\r\n\r\n/**\r\n * --------------------------\r\n * TOKENIZER\r\n * --------------------------\r\n */\r\n\r\nexport default class Lexer {\r\n\r\n\t/**\r\n\t * Factory method.\r\n\t *\r\n\t * Handles caching.\r\n\t *\r\n\t * @see constructor()\r\n\t */\r\n\tstatic lex(str, delims, options = {}) {\r\n\t\tif (!_isString(str = str + '')) {\r\n\t\t\tthrow new Error('Argument1 must be a string!');\r\n\t\t}\r\n\t\tvar copyResult = result => {\r\n\t\t\treturn {\r\n\t\t\t\tdelims: result.delims.slice(),\r\n\t\t\t\toptions: _copyPlain(result.options),\r\n\t\t\t\tnesting: result.nesting.slice(),\r\n\t\t\t\tmaxDepth: result.maxDepth,\r\n\t\t\t\tcomments: result.comments.slice(),\r\n\t\t\t\ttokens: result.tokens.slice(),\r\n\t\t\t\tmatches: result.matches.slice(),\r\n\t\t\t\tmatchesi: _copyPlain(result.matchesi),\r\n\t\t\t};\r\n\t\t};\r\n\t\t// ASK CACHE ---------------------------\r\n\t\tif (Lexer.$cache[str] && options.cache !== false) {\r\n\t\t\tfor (var i = 0; i < Lexer.$cache[str].length; i ++) {\r\n\t\t\t\tvar cached = Lexer.$cache[str][i];\r\n\t\t\t\tif (_even(cached.delims, delims)) {\r\n\t\t\t\t\treturn copyResult(cached);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// FRESH PARSE\t -------------------------------\r\n\t\tvar instance = new Lexer(str, options);\r\n\t\tvar result = instance.lex(delims);\r\n\t\t// SAVE TO CACHE -------------------------------\r\n\t\tif (options.cache !== false) {\r\n\t\t\tLexer.$cache[str] = Lexer.$cache[str] || [];\r\n\t\t\tLexer.$cache[str].push(result);\r\n\t\t}\r\n\t\treturn copyResult(result);\r\n\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Factory method for .split().\r\n\t *\r\n\t * Handles caching.\r\n\t *\r\n\t * @see constructor()\r\n\t */\r\n\tstatic split(str, delims, options) {\r\n\t\treturn Lexer.lex(str, delims, options).tokens;\r\n\t}\r\n\r\n\t/**\r\n\t * Factory method for .match().\r\n\t *\r\n\t * Handles caching.\r\n\t *\r\n\t * @see constructor()\r\n\t */\r\n\tstatic match(str, delims, options) {\r\n\t\treturn Lexer.lex(str, delims, options).matches;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a lexer instance on a string with the given options.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions:\r\n\t * @param string \t\tblocks\t\t\t\tThe strings that begin and end a nested structure\r\n\t * @param number \t\tlimit\t\t\t\tMax results to return\r\n\t * @param string \t\tbackreference\t\tA character like (\\) that prefixes non-delim characters\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tconstructor(str, options) {\r\n\t\tif (!_isString(str)) {\r\n\t\t\tthrow new Error('Lexer requires the first argument to be a string.');\r\n\t\t}\r\n\t\tthis.$str = str;\r\n\t\tthis.$options = options || {};\r\n\t\tif (!this.$options.blocks) {\r\n\t\t\tthis.$options.blocks = Lexer.$blocks;\r\n\t\t}\r\n\t\tif (!this.$options.quotes) {\r\n\t\t\tthis.$options.quotes = Lexer.$quotes;\r\n\t\t}\r\n\t\tif (!this.$options.comments) {\r\n\t\t\tthis.$options.comments = Lexer.$comments;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the instance string on the given delimeters.\r\n\t *\r\n\t * This method supports static calling,\r\n\t * in which case a string is required as the first argument.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return object\r\n\t */\r\n\tlex(delims, options) {\r\n\t\tvar runtime = {\r\n\t\t\tdelims: _arrFrom(delims),\r\n\t\t\toptions: _merge(true, {}, this.$options, options || {}),\r\n\t\t\tnesting: [],\r\n\t\t\tmaxDepth: 0,\r\n\t\t\tcomments: [],\r\n\t\t\ttokens: [],\r\n\t\t\tmatches: [],\r\n\t\t\tmatchesi: {},\r\n\t\t};\r\n\t\t// Iterate over each character, keep track of current row and column (of the returned array)\r\n\t\tthis._evalCharsAt(runtime, 0);\r\n\t\tif (runtime.nesting.length) {\r\n\t\t\tthrow new Error('Error parsing the string: ' + this.$str + '. Unterminated blocks: ' + _flatten(runtime.nesting).join(', ') + '');\r\n\t\t}\r\n\t\t// RETURN NEW ----------------------------------\r\n\t\treturn runtime;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: evaluates and handles the character on the current cursor.\r\n\t * Advances the cursor.\r\n\t *\r\n\t * @param object \truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return void\r\n\t */\r\n\t_evalCharsAt(runtime, i) {\r\n\t\tif (i >= this.$str.length) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar charWidth = 1;\r\n\t\tvar commentTest = {}, quoteTest = {}, nestingTest = {};\r\n\t\t// Quotes inside comments must be ignored\r\n\t\tif (!runtime.openComment) {\r\n\t\t\tquoteTest = this._testQuotes(runtime, i);\r\n\t\t}\r\n\t\t// Comments inside quotes must be ignored\r\n\t\tif (!runtime.openQuote) {\r\n\t\t\tcommentTest = this._testComments(runtime, i);\r\n\t\t}\r\n\t\t// Save comments\r\n\t\tif (runtime.openComment || commentTest.ending) {\r\n\t\t\t// Save only outer comments\r\n\t\t\tif (!runtime.nesting.length && !nestingTest.ending) {\r\n\t\t\t\tvar chars = commentTest.starting || commentTest.ending || this.$str[i];\r\n\t\t\t\tcharWidth = chars.length;\r\n\t\t\t\tthis._push(runtime, chars, 'comments', commentTest.starting);\r\n\t\t\t} else {\r\n\t\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t\t}\r\n\t\t} else if (runtime.openQuote || quoteTest.ending) {\r\n\t\t\t// Yes add quotes\r\n\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t} else if (runtime.options.limit && runtime.matches.length === runtime.options.limit) {\r\n\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t\treturn this._evalCharsAt(runtime, i + 1);\r\n\t\t} else {\r\n\t\t\t// Nesting tags inside comments and quotes have been ignored\r\n\t\t\tnestingTest = this._testNesting(runtime, i);\r\n\t\t\t// ---------------------\r\n\t\t\t// STOP ON THIS CHARACTER...?\r\n\t\t\t// ---------------------\r\n\t\t\tvar nestingTest = this._testNesting(runtime, i);\r\n\t\t\t// STOP CHAR(S)? at top level?\r\n\t\t\tvar stopChar = this._testChars(runtime.options.stopChars || [], runtime, i);\r\n\t\t\tif (!runtime.nesting.length && stopChar !== false) {\r\n\t\t\t\truntime.options.stopChar = stopChar;\r\n\t\t\t\truntime.options.stopCharForward = this.$str.substr(i);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t// ---------------------\r\n\t\t\t// Match and split now...\r\n\t\t\t// ---------------------\r\n\t\t\tif (!runtime.delims.length) {\r\n\t\t\t\t// BLOCK-BASED SPLITTING...\r\n\t\t\t\tif (runtime.nesting.length === 2 && nestingTest.starting) {\r\n\t\t\t\t\truntime.matches.push(null);\r\n\t\t\t\t\tthis._push(runtime, nestingTest.starting);\r\n\t\t\t\t\tcharWidth = nestingTest.starting.length;\r\n\t\t\t\t} else if (!runtime.nesting.length && nestingTest.ending) {\r\n\t\t\t\t\tthis._push(runtime, nestingTest.ending);\r\n\t\t\t\t\tcharWidth = nestingTest.ending.length;\r\n\t\t\t\t\truntime.matches.push(null);\r\n\t\t\t\t} else/*no-nesting flag*/ {\r\n\t\t\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// ---------------------\r\n\t\t\t\t// DELIMS-BASED SPLITTING\r\n\t\t\t\t// ---------------------\r\n\t\t\t\tif (!runtime.nesting.length && !nestingTest.ending) {\r\n\t\t\t\t\t// In case the chars at index 0 is a delim,\r\n\t\t\t\t\t// the resulting split should first have an empty string, instead of undefined\r\n\t\t\t\t\tthis._push(runtime, '');\r\n\t\t\t\t\tvar matchedDelim = this._testChars(runtime.delims, runtime, i);\r\n\t\t\t\t\tif (matchedDelim !== false) {\r\n\t\t\t\t\t\truntime.matches.push(matchedDelim);\r\n\t\t\t\t\t\truntime.matchesi[i] = matchedDelim;\r\n\t\t\t\t\t\tcharWidth = matchedDelim.length || 1;\r\n\t\t\t\t\t\tif (!runtime.options.preserveDelims) {\r\n\t\t\t\t\t\t\t// The current character is a delimiter...\r\n\t\t\t\t\t\t\t// and should not get to appending to the split series down the line\r\n\t\t\t\t\t\t\treturn this._evalCharsAt(runtime, i + (matchedDelim.length || 1));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._push(runtime, matchedDelim || this.$str[i]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar chars = nestingTest.starting || nestingTest.ending || this.$str[i];\r\n\t\t\t\t\tcharWidth = chars.length;\r\n\t\t\t\t\tthis._push(runtime, chars);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._evalCharsAt(runtime, i + charWidth);\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a quote start/end character on the current cursor.\r\n\t *\r\n\t * @param object\truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return object\r\n\t */\r\n\t_testQuotes(runtime, i) {\r\n\t\tvar result = {};\r\n\t\t(runtime.options.quotes || []).forEach(quote => {\r\n\t\t\tif (this.$str.substr(i, 1) === quote) {\r\n\t\t\t\tif (!runtime.openQuote) {\r\n\t\t\t\t\truntime.openQuote = quote;\r\n\t\t\t\t\tresult.starting = quote;\r\n\t\t\t\t} else if (quote === runtime.openQuote) {\r\n\t\t\t\t\truntime.openQuote = false;\r\n\t\t\t\t\tresult.ending = quote;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a comment start/end character on the current cursor.\r\n\t *\r\n\t * @param object\truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return object\r\n\t */\r\n\t_testComments(runtime, i) {\r\n\t\tvar result = {};\r\n\t\t(runtime.options.comments || []).forEach(block => {\r\n\t\t\tif (!runtime.openComment) {\r\n\t\t\t\tvar starting = _first(block);\r\n\t\t\t\tif (this.$str.substr(i).startsWith(starting)) {\r\n\t\t\t\t\truntime.openComment = block;\r\n\t\t\t\t\tresult.starting = starting;\r\n\t\t\t\t}\r\n\t\t\t} else if (_last(block) === _last(runtime.openComment)) {\r\n\t\t\t\tvar ending = _last(block);\r\n\t\t\t\tif (this.$str.substr(i).startsWith(ending)) {\r\n\t\t\t\t\truntime.openComment = false;\r\n\t\t\t\t\tresult.ending = ending;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a nesting start/end character on the current cursor.\r\n\t *\r\n\t * @param object\truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return object\r\n\t */\r\n\t_testNesting(runtime, i) {\r\n\t\tvar result = {};\r\n\t\t(runtime.options.blocks || []).forEach(block => {\r\n\t\t\tvar starting = _first(block);\r\n\t\t\tif (this.$str.substr(i).startsWith(starting)) {\r\n\t\t\t\truntime.nesting = runtime.nesting.concat([block]);\r\n\t\t\t\tresult.starting = starting;\r\n\t\t\t} else if (runtime.nesting.length && _last(block) === _last(_last(runtime.nesting))) {\r\n\t\t\t\tvar ending = _last(block);\r\n\t\t\t\tif (this.$str.substr(i).startsWith(ending)) {\r\n\t\t\t\t\truntime.nesting = runtime.nesting.slice(0, -1);\r\n\t\t\t\t\tresult.ending = ending;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\truntime.maxDepth = Math.max(runtime.maxDepth, runtime.nesting.length);\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a delimiter or stop character on the current cursor.\r\n\t *\r\n\t * @param array\t\ttestList\r\n\t * @param object \truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\t_testChars(testList, runtime, i) {\r\n\t\tfor (var k = 0; k < testList.length; k ++) {\r\n\t\t\tvar test = testList[k];\r\n\t\t\tif (_isFunction(test)) {\r\n\t\t\t\tvar ret = test(this.$str.substr(0, i), this.$str.substr(i));\r\n\t\t\t\tif (ret !== false) {\r\n\t\t\t\t\treturn ret;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (runtime.options.useRegex) {\r\n\t\t\t\tvar m = this.$str.substr(i).match(new RegExp('^' + test, runtime.options.useRegex !== true ? runtime.options.useRegex : ''));\r\n\t\t\t\tif (m) {\r\n\t\t\t\t\treturn m[0];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ((!runtime.options.ci && this.$str.substr(i, test.length) === test)\r\n\t\t\t|| (runtime.options.ci && this.$str.substr(i, test.length).toLowerCase() === test.toLowerCase())) {\r\n\t\t\t\treturn test;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Expr helper: pushes a character or set of characters into the current split series.\r\n\t *\r\n\t * @param object \truntime\r\n\t * @param string\tchars\r\n\t * @param string\ttarget\r\n\t * @param bool\t\tisNewSeries\r\n\t *\r\n\t * @return void\r\n\t */\r\n\t_push(runtime, chars, target = 'tokens', isNewSeries = false) {\r\n\t\tvar splitSeries = runtime.matches.length;\r\n\t\tif (_isUndefined(runtime.tokens[splitSeries])) {\r\n\t\t\truntime.tokens[splitSeries] = '';\r\n\t\t}\r\n\r\n\t\tif (target === 'comments') {\r\n\t\t\tif (!runtime.tokens[splitSeries].comments) {\r\n\t\t\t\truntime.tokens[splitSeries] = new String(runtime.tokens[splitSeries]);\r\n\t\t\t\truntime.tokens[splitSeries].comments = [];\r\n\t\t\t}\r\n\t\t\tvar splitSeries2 = runtime.tokens[splitSeries].comments.length - (!runtime.tokens[splitSeries].comments.length || isNewSeries ? 0 : 1);\r\n\t\t\truntime.tokens[splitSeries].comments[splitSeries2] = (runtime.tokens[splitSeries].comments[splitSeries2] || '') + chars;\r\n\t\t} else {\r\n\t\t\tvar comments = runtime.tokens[splitSeries].comments;\r\n\t\t\truntime.tokens[splitSeries] = new String(runtime.tokens[splitSeries] + chars);\r\n\t\t\truntime.tokens[splitSeries].comments = comments;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Splits the instance string on the given delimeters and returns the tokens.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tsplit(str, delims, options) {\r\n\t\treturn this.lex(delims, options).tokens;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Splits the instance string on the given delimeters and returns the matches.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions:\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tmatch(str, delims, options) {\r\n\t\treturn this.lex(delims, options).matches;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Parses the instance string on the given delimeters using regex.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return object\r\n\t */\r\n\tregParse(delims, options) {\r\n\t\treturn this.lex(delims, _merge({useRegex: true}, options || {}));\r\n\t}\r\n\t\r\n\t/**\r\n\t * Splits the instance string on the given delimeters using regex; returns the tokens.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tregSplit(delims, options) {\r\n\t\treturn this.regParse(delims, options).tokens;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Matches the instance string on the given delimeters using regex; returns the matches.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tregMatch(delims, options) {\r\n\t\treturn this.regParse(delims, options).matches;\r\n\t}\r\n};\r\n\r\n/**\r\n * @var array\r\n */\r\nLexer.$blocks = [['(', ')'], ['[', ']'], ['{', '}'],];\r\n\r\n/**\r\n * @var array\r\n */\r\nLexer.$quotes = ['\"', \"'\", '`',];\r\n\r\n/**\r\n * @var array\r\n */\r\nLexer.$comments = [['/*', '*/'], ['//', \"\\n\"],];\r\n\r\n/**\r\n * @var object\r\n */\r\nLexer.$cache = {};","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * AbstractionInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Abstraction'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@web-native-js/commons/str/wrapped.js';\r\nimport _unwrap from '@web-native-js/commons/str/unwrap.js';\r\nimport Lexer from '@web-native-js/commons/str/Lexer.js';\r\nimport AbstractionInterface from './AbstractionInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Abstraction class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Abstraction = class extends AbstractionInterface {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(expr) {\r\n\t\tsuper();\r\n\t\tthis.expr = expr;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.expr.eval(context, params);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn '(' + this.expr.toString(context) + ')';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (_wrapped(expr, '(', ')') && !Lexer.match(expr, [' ']).length) {\r\n\t\t\treturn new this(\r\n\t\t\t\tparseCallback(_unwrap(expr, '(', ')'))\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Abstraction;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ArrInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'ArrayType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@web-native-js/commons/str/wrapped.js';\r\nimport _unwrap from '@web-native-js/commons/str/unwrap.js';\r\nimport ArrInterface from './ArrInterface.js';\r\nimport Lexer from '@web-native-js/commons/str/Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Array utils\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Arr = class extends ArrInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(exprs) {\r\n\t\tsuper();\r\n\t\tthis.exprs = exprs || [];\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tinherit(Super) {\r\n\t\tif (Super instanceof ArrInterface) {\r\n\t\t\tvar newExprs = Super.exprs.filter(exprA => {\r\n\t\t\t\treturn this.exprs.reduce((uniqueSoFar, exprB) => uniqueSoFar && !exprA.even(exprB), true);\r\n\t\t\t});\r\n\t\t\tthis.exprs = newExprs.concat(this.exprs);\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.exprs.map(expr => expr.eval(context, params));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn '[' + this.exprs.map(expr => expr.toString(context)).join(', ') + ']';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (_wrapped(expr, '[', ']') && !Lexer.match(expr.trim(), [' ']).length) {\r\n\t\t\tvar splits = Lexer.split(_unwrap(expr, '[', ']'), [','])\r\n\t\t\t\t.map(n => n.trim()).filter(n => n).map(expr => parseCallback(expr));\r\n\t\t\treturn new this(splits);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @export\r\n */\r\nexport default Arr;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ArgumentsInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Arguments'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@web-native-js/commons/str/wrapped.js';\r\nimport _unwrap from '@web-native-js/commons/str/unwrap.js';\r\nimport Lexer from '@web-native-js/commons/str/Lexer.js';\r\nimport ArgumentsInterface from './ArgumentsInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Arguments class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Arguments = class extends ArgumentsInterface {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(list = []) {\r\n\t\tsuper();\r\n\t\tthis.list = list;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.list.map(arg => arg.eval(context, params));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn '(' + this.list.map(arg => arg.toString(context)).join(', ') + ')';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar args; expr = expr.trim();\r\n\t\tif (_wrapped(expr, '(', ')') && !Lexer.match(expr, [' ']).length) {\r\n\t\t\treturn new this(\r\n\t\t\t\tLexer.split(_unwrap(expr, '(', ')'), [',']).map(arg => parseCallback(arg.trim()))\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Arguments;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * AssertionInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'AssertionExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _first from '@web-native-js/commons/arr/first.js';\r\nimport _flatten from '@web-native-js/commons/arr/flatten.js';\r\nimport _unique from '@web-native-js/commons/arr/unique.js';\r\nimport AssertionInterface from './AssertionInterface.js';\r\nimport Lexer from '@web-native-js/commons/str/Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Assertion class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Assertion = class extends AssertionInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(exprs, logic) {\r\n\t\tsuper();\r\n\t\tthis.exprs = exprs;\r\n\t\tthis.logic = logic;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\t eval(context = null, params = {}) {\r\n\t\tif (this.logic.toLowerCase() === Assertion.negation.toLowerCase()) {\r\n\t\t\treturn !_first(this.exprs).eval(context, params);\r\n\t\t}\r\n\t\tvar operators = _flatten(Assertion.operators);\r\n\t\tvar logic = (this.logic || '').trim().toUpperCase();\r\n\t\tvar isOr = logic === (Assertion.operators.or || '').trim().toUpperCase();\r\n\t\tvar isNor = logic === (Assertion.operators.nor || '').trim().toUpperCase();\r\n\t\tvar isAnd = logic === (Assertion.operators.and || '').trim().toUpperCase();\r\n\t\tvar isNand = logic === (Assertion.operators.nand || '').trim().toUpperCase();\r\n\t\tvar lastResult = true, trues = 0;\r\n\t\tfor(var i = 0; i < this.exprs.length; i ++) {\r\n\t\t\tlastResult = this.exprs[i].eval(context, params);\r\n\t\t\tif (isAnd && !lastResult) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (isNand && !lastResult) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tif (isOr && lastResult) {\r\n\t\t\t\treturn lastResult;\r\n\t\t\t}\r\n\t\t\ttrues += lastResult ? 1 : 0;\r\n\t\t}\r\n\t\tif (isOr) {\r\n\t\t\t// Which is falsey,\r\n\t\t\t// by virtue of getting here\r\n\t\t\treturn lastResult;\r\n\t\t}\r\n\t\tif (isAnd || isNand) {\r\n\t\t\t// For AND and NAND, all entries must be true by now,\r\n\t\t\t// by virtue of getting here.\r\n\t\t\t// For AND, this means true; for NAND, false\r\n\t\t\treturn isAnd;\r\n\t\t}\r\n\t\t// For NOR, all entries need to be false\r\n\t\treturn isNor && trues === 0;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\t toString(context = null) {\r\n\t\tif (this.logic.toLowerCase() === Assertion.negation.toLowerCase()) {\r\n\t\t\treturn this.logic + _first(this.exprs).toString(context);\r\n\t\t}\r\n\t\treturn this.exprs.map(expr => expr.toString(context)).join(' ' + this.logic + ' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (expr.toUpperCase().startsWith(Assertion.negation.toUpperCase())) {\r\n\t\t\treturn new this(\r\n\t\t\t\t[parseCallback(expr.substr(Assertion.negation.length))],\r\n\t\t\t\tAssertion.negation\r\n\t\t\t);\r\n\t\t}\r\n\t\tvar parse = Lexer.lex(expr, _flatten(this.operators));\r\n\t\tif (parse.tokens.length > 1) {\r\n\t\t\tvar logic = _unique(parse.matches);\r\n\t\t\tif (logic.length > 1) {\r\n\t\t\t\tthrow new Error('\"AND\" and \"OR\" logic cannot be asserted in the same expression: ' + expr + '!');\r\n\t\t\t}\r\n\t\t\treturn new this(\r\n\t\t\t\tparse.tokens.map(expr => parseCallback(expr.trim())),\r\n\t\t\t\t_first(logic)\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nAssertion.negation = '!';\r\n\r\n/**\r\n * @prop object\r\n */\r\nAssertion.operators = {\r\n\tand: '&&',\r\n\tor: '||',\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Assertion;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * AssignmentInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'AssignmentExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _last from '@web-native-js/commons/arr/last.js';\r\nimport _before from '@web-native-js/commons/str/before.js';\r\nimport _after from '@web-native-js/commons/str/after.js';\r\nimport _isNumber from '@web-native-js/commons/js/isNumber.js';\r\nimport _isArray from '@web-native-js/commons/js/isArray.js';\r\nimport _isUndefined from '@web-native-js/commons/js/isUndefined.js';\r\nimport Lexer from '@web-native-js/commons/str/Lexer.js';\r\nimport AssignmentInterface from './AssignmentInterface.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport SyntaxError from '../SyntaxError.js';\r\nimport ReferenceError from '../ReferenceError.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Assignment class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Assignment = class extends AssignmentInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(initKeyword, reference, val, operator = '=', postIncrDecr = false) {\r\n\t\tsuper();\r\n\t\tthis.initKeyword = initKeyword;\r\n\t\tthis.reference = reference;\r\n\t\tthis.val = val;\r\n\t\tthis.operator = operator;\r\n\t\tthis.postIncrDecr = postIncrDecr;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\tvar val, initialVal, reference = this.reference.getEval(context, params);\r\n\t\tif (['++', '--'].includes(this.operator)) {\r\n\t\t\tinitialVal = this.reference.eval(context, params);\r\n\t\t\tif (!_isNumber(initialVal)) {\r\n\t\t\t\tthrow new Error(this.reference + ' must be a number!');\r\n\t\t\t}\r\n\t\t\tif (this.operator === '++') {\r\n\t\t\t\tval = initialVal + 1;\r\n\t\t\t} else {\r\n\t\t\t\tval = initialVal - 1;\r\n\t\t\t}\r\n\t\t} else if (['+=', '-=', '*=', '/='].includes(this.operator)) {\r\n\t\t\tvar operandA = reference.get();\r\n\t\t\tvar operandB = this.val.eval(context, params);\r\n\t\t\tif (this.operator !== '+=' && (!_isNumber(operandA) || !_isNumber(operandB))) {\r\n\t\t\t\tthrow new Error(this + ' - operands must each be a number!');\r\n\t\t\t}\r\n\t\t\tif (this.operator === '*=') {\r\n\t\t\t\tval = operandA * operandB;\r\n\t\t\t} else if (this.operator === '/=') {\r\n\t\t\t\tval = operandA / operandB;\r\n\t\t\t} else if (this.operator === '-=') {\r\n\t\t\t\tval = operandA - operandB;\r\n\t\t\t} else {\r\n\t\t\t\tval = operandA + operandB;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tval = this.val.eval(context, params);\r\n\t\t}\r\n\t\ttry {\r\n\t\t\treference.set(val, this.initKeyword);\r\n\t\t\tif (params && _isArray(params.references)) {\r\n\t\t\t\t_pushUnique(params.references, this.reference.toString());\r\n\t\t\t}\r\n\t\t\treturn this.postIncrDecr ? initialVal : val;\r\n\t\t} catch(e) {\r\n\t\t\tif (e instanceof ReferenceError) {\r\n\t\t\t\tthrow new ReferenceError('[' + this + ']: ' + e.message);\r\n\t\t\t} else {\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\tif (['++', '--'].includes(this.operator)) {\r\n\t\t\treturn this.postIncrDecr \r\n\t\t\t\t? this.reference.toString(context) + this.operator\r\n\t\t\t\t: this.operator + this.reference.toString(context);\r\n\t\t}\r\n\t\treturn (this.initKeyword ? this.initKeyword + ' ' : '')\r\n\t\t\t+ [this.reference.toString(context), this.operator, this.val.toString(context)].join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar parse = Lexer.lex(expr, this.operators.concat([testBlockEnd]));\r\n\t\tif (parse.matches.length) {\r\n\t\t\tvar initKeyword, reference, val, operator = parse.matches[0].trim(), isIncrDecr = ['++', '--'].includes(operator), postIncrDecr;\r\n\t\t\tif (isIncrDecr) {\r\n\t\t\t\tpostIncrDecr = (expr.trim().endsWith('++') || expr.trim().endsWith('--'));\r\n\t\t\t\treference = parse.tokens[postIncrDecr ? 'shift' : 'pop']().trim();\r\n\t\t\t} else {\r\n\t\t\t\treference = parse.tokens.shift().trim();\r\n\t\t\t\tval = parse.tokens.shift().trim();\r\n\t\t\t}\r\n\t\t\tif (['var', 'let', 'const'].includes(_before(reference, ' '))) {\r\n\t\t\t\tif (operator !== '=') {\r\n\t\t\t\t\tthrow new SyntaxError('Invalid declaration: ' + expr);\r\n\t\t\t\t}\r\n\t\t\t\tinitKeyword = _before(reference, ' ');\r\n\t\t\t\treference = _after(reference, ' ').trim();\r\n\t\t\t}\r\n\t\t\tif (!((reference = parseCallback(reference, null, {lodge: false})) instanceof ReferenceInterface) \r\n\t\t\t|| (!isIncrDecr && !(val = parseCallback(val)))) {\r\n\t\t\t\tthrow new SyntaxError(expr);\r\n\t\t\t}\r\n\t\t\treturn new this(initKeyword, reference, val, operator, postIncrDecr);\r\n\t\t}\r\n\t}\r\n};\t\r\n\r\n/**\r\n * @prop array\r\n */\r\nAssignment.operators = [\r\n\t'+=',\r\n\t'-=',\r\n\t'*=',\r\n\t'/=',\r\n\t'++',\r\n\t'--',\r\n];\r\n\r\nconst testBlockEnd = (a, b) => {\r\n\t// Match exactly \"=\", not \"=>\", \"==\", \"===\"\r\n\tif (!a.endsWith('=') && b.startsWith('=') && !b.startsWith('=>') && !b.startsWith('==') && !b.startsWith('===')) {\r\n\t\treturn '=';\r\n\t}\r\n\treturn false;\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Assignment;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _mergeCallback from './mergeCallback.js';\r\n\r\n/**\r\n * Copies an object.\r\n *\r\n * @param object\t \tobj\r\n * @param array\t\t \tfilter\r\n *\r\n * @return object\r\n */\r\nexport default function(obj, filter = [], withSymbols = true) {\r\n\tvar depth = 0;\r\n\tif (_isNumeric(arguments[0]) && _isTypeObject(arguments[1])) {\r\n\t\tdepth = arguments[0];\r\n\t\tobj = arguments[1];\r\n\t\tfilter = arguments[2] || [];\r\n\t}\r\n\treturn _mergeCallback([depth, {}, obj], (key, obj1, obj2) => {\r\n\t\treturn _isFunction(filter) ? filter(key) \r\n\t\t\t: (_isArray(filter) && filter.length ? filter.indexOf(key) > -1 : true);\r\n\t}, false/*deepProps*/, false/*isReplace*/, withSymbols);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * BlockInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Block'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ReturnInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'ReturnDirective'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _unique from '@web-native-js/commons/arr/unique.js';\r\nimport _before from '@web-native-js/commons/str/before.js';\r\nimport _flatten from '@web-native-js/commons/arr/flatten.js';\r\nimport _copy from '@web-native-js/commons/obj/copy.js';\r\nimport Lexer from '@web-native-js/commons/str/Lexer.js';\r\nimport BlockInterface from './BlockInterface.js';\r\nimport ReturnInterface from './ReturnInterface.js';\r\nimport AssignmentInterface from './AssignmentInterface.js';\r\nimport Scope from '../Scope.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Block class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Block extends BlockInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(stmts, delim) {\r\n\t\tsuper();\r\n\t\tthis.stmts = stmts || [];\r\n\t\tthis.delim = delim;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\t// Current!\r\n\t\tparams = params ? _copy(params) : {};\r\n\t\tcontext = Scope.create(context);\r\n\t\t// Stringifies JSEN vars\r\n\t\tvar stringifyEach = list => _unique(list.map(expr => _before(_before(expr.toString(), '['), '(')));\r\n\t\tvar callEval = (stmt, context, _params) => {\r\n\t\t\ttry {\r\n\t\t\t\treturn stmt.eval(context, _params);\r\n\t\t\t} catch(e) {\r\n\t\t\t\tif (_params.catch) {\r\n\t\t\t\t\t_params.catch(e);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t};\r\n\r\n\t\tvar results = [];\r\n\t\tfor (var i = 0; i < this.stmts.length; i ++) {\r\n\t\t\tvar stmt = this.stmts[i];\r\n\t\t\t// Lets be called...\r\n\t\t\tvar vars = stringifyEach(stmt.meta.vars);\r\n\t\t\tvar deepVars = stringifyEach(stmt.meta.deepVars || []);\r\n\t\t\tvar isDirectEventTarget = (params.references || []).filter(f => vars.filter(v => (v + '.').startsWith(f + '.')).length);\r\n\t\t\tvar isIndirectEventTarget = (params.references || []).filter(f => deepVars.filter(v => (v + '.').startsWith(f + '.')).length);\r\n\t\t\tif (!params.references || !params.references.length \r\n\t\t\t|| (isDirectEventTarget = isDirectEventTarget.length)\r\n\t\t\t|| (isIndirectEventTarget = isIndirectEventTarget.length)) {\r\n\t\t\t\tvar _params = params;\r\n\t\t\t\tif (isDirectEventTarget) {\r\n\t\t\t\t\t_params = _copy(params);\r\n\t\t\t\t\tdelete _params.references;\r\n\t\t\t\t}\r\n\t\t\t\tif (stmt instanceof ReturnInterface) {\r\n\t\t\t\t\treturn callEval(stmt, context, _params);\r\n\t\t\t\t}\r\n\t\t\t\tresults[i] = callEval(stmt, context, _params);\r\n\t\t\t\t// Add this change for subsequent statements\r\n\t\t\t\tif (params.references && (stmt instanceof AssignmentInterface)) {\r\n\t\t\t\t\tparams.references = params.references.concat(stringifyEach([stmt.reference]));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn results;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn this.stmts.map(stmt => stmt.toString(context)).join(this.delim);\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar parse = Lexer.lex(expr + ';', _flatten(this.operators).concat([Block.testBlockEnd]));\r\n\t\tif (parse.matches.length) {\r\n\t\t\treturn new this(\r\n\t\t\t\tparse.tokens.map(stmt => parseCallback(stmt.trim())).filter(a => a),\r\n\t\t\t\tparse.matches[0].trim()\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic testBlockEnd(a, b) {\r\n\t\t// Cases of code blocks that won't end in \";\"\r\n\t\tif (a.endsWith('}') && !b.trim().startsWith('else')) {\r\n\t\t\treturn '';\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop array\r\n */\r\nBlock.operators = [\r\n\t';',\r\n\t\"\\r\\n\",\r\n];\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * BoolInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'BooleanType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Lexer from '@web-native-js/commons/str/Lexer.js';\r\nimport BoolInterface from './BoolInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Bool (boolean) class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Bool = class extends BoolInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(state) {\r\n\t\tsuper();\r\n\t\tthis.state = state;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval() {\r\n\t\treturn this.state.toLowerCase().trim() === 'true';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.state;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar expr = expr.toLowerCase().trim();\r\n\t\tif (expr === 'true' || expr === 'false') {\r\n\t\t\treturn new this(expr);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Bool;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isUndefined from '@web-native-js/commons/js/isUndefined.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport CallInterface from './CallInterface.js';\r\nimport Arguments from './Arguments.js';\r\nimport Lexer from '@web-native-js/commons/str/Lexer.js';\r\nimport SyntaxError from '../SyntaxError.js';\r\nimport ReferenceError from '../ReferenceError.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Call class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Call = class extends CallInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(reference, args) {\r\n\t\tsuper();\r\n\t\tthis.reference = reference;\r\n\t\tthis.args = args;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\ttry {\r\n\t\t\tvar args = this.args.eval(context, params);\r\n\t\t\treturn this.reference.getEval(context, params).exec(args);\r\n\t\t} catch(e) {\r\n\t\t\tif (e instanceof ReferenceError) {\r\n\t\t\t\tthrow new ReferenceError('[' + this + ']: ' + e.message);\r\n\t\t\t} else {\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn this.reference.toString(context) + this.args.toString(context);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (!expr.startsWith('(') && expr.endsWith(')') && !Lexer.match(expr, [' ']).length) {\r\n\t\t\tvar tokens = Lexer.split(expr, []);\r\n\t\t\tvar reference, args = tokens.pop();\r\n\t\t\tif (!((reference = parseCallback(tokens.join(''), null, {lodge: false})) instanceof ReferenceInterface) \r\n\t\t\t|| !(args = parseCallback(args, [Arguments]))) {\r\n\t\t\t\tthrow new SyntaxError(expr);\r\n\t\t\t}\r\n\t\t\treturn new this(reference, args);\r\n\t\t}\r\n\t}\r\n};\t\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Call;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ComparisonInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'ComparisonExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _flatten from '@web-native-js/commons/arr/flatten.js';\r\nimport _first from '@web-native-js/commons/arr/first.js';\r\nimport _last from '@web-native-js/commons/arr/last.js';\r\nimport _difference from '@web-native-js/commons/arr/difference.js';\r\nimport _isArray from '@web-native-js/commons/js/isArray.js';\r\nimport _isObject from '@web-native-js/commons/js/isObject.js';\r\nimport _isString from '@web-native-js/commons/js/isString.js';\r\nimport _each from '@web-native-js/commons/obj/each.js';\r\nimport ComparisonInterface from './ComparisonInterface.js';\r\nimport Lexer from '@web-native-js/commons/str/Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Comparison class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Comparison extends ComparisonInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(operand1, operand2, operator) {\r\n\t\tsuper();\r\n\t\tthis.operand1 = operand1;\r\n\t\tthis.operand2 = operand2;\r\n\t\tthis.operator = operator;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.constructor.compare(\r\n\t\t\tthis.operand1.eval(context, params), \r\n\t\t\tthis.operand2.eval(context, params), \r\n\t\t\tthis.operator\r\n\t\t);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn [\r\n\t\t\tthis.operand1.toString(context), \r\n\t\t\tthis.operator, \r\n\t\t\tthis.operand2.toString(context)\r\n\t\t].join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar operators = _flatten(this.operators).map(oper => ' ' + oper + ' ');\r\n\t\tvar parse = Lexer.lex(expr, operators);\r\n\t\tif (parse.tokens.length > 1) {\r\n\t\t\tif (parse.tokens.length > 2) {\r\n\t\t\t\tthrow new Error('Malformed \"Comparison\" expression: ' + expr + '!');\r\n\t\t\t}\r\n\t\t\treturn new this(\r\n\t\t\t\tparseCallback(_first(parse.tokens).trim()),\r\n\t\t\t\tparseCallback(_last(parse.tokens).trim()),\r\n\t\t\t\tparse.matches[0].trim()\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * -------------------------------------------------------\r\n\t */\r\n\t \r\n\t/**\r\n\t * Use the operator type to compare the two operands\r\n\t *\r\n\t * @param mixed\t\toperand1\t\t\r\n\t * @param mixed\t\toperand2\t\t\r\n\t * @param string \toperator\t\t\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tstatic compare(operand1, operand2, operator = '==') {\r\n\t\tif (_flatten(this.operators).indexOf(operator) === -1) {\r\n\t\t\tthrow new Error('The operator \"' + operator + '\" is not recognized.');\r\n\t\t}\r\n\t\tswitch(operator) {\r\n\t\t\tcase '===':\r\n\t\t\t\treturn operand1 === operand2;\r\n\t\t\tcase '==':\r\n\t\t\tcase '=':\r\n\t\t\t\treturn operand1 == operand2;\r\n\t\t\tcase '>':\r\n\t\t\t\treturn operand1 > operand2;\r\n\t\t\tcase '<':\r\n\t\t\t\treturn operand1 < operand2;\r\n\t\t\tcase '>=':\r\n\t\t\t\treturn operand1 >= operand2;\r\n\t\t\tcase '<=':\r\n\t\t\t\treturn operand1 <= operand2;\r\n\t\t\tcase '!=':\r\n\t\t\t\treturn operand1 != operand2;\r\n\t\t\tcase '<>':\r\n\t\t\tcase '!==':\r\n\t\t\t\treturn operand1 !== operand2;\r\n\t\t\tcase '^=':\r\n\t\t\t\treturn _isString(operand1) && operand1.startsWith(operand2);\r\n\t\t\tcase '$=':\r\n\t\t\t\treturn _isString(operand1) && operand1.endsWith(operand2);\r\n\t\t\tcase '*=':\r\n\t\t\t\t// Contains\r\n\t\t\t\treturn _isArray(operand2) || _isString(operand2) ? operand1.indexOf(operand2) > -1 : false;\r\n\t\t\tcase '~=':\r\n\t\t\t\t// Contains word\r\n\t\t\t\treturn _isString(operand1) && _isString(operand2) && (' ' + operand1 + ' ').indexOf(' ' + operand2 + ' ') > -1;\r\n\t\t\tcase '>=<': // Between\r\n\t\t\t\t if (!(_isArray(operand2) && operand2.length === 2)) {\r\n\t\t\t\t\t throw new Error('A \\'Between\\' comparison requires argument 2 to be an array of exactly 2 values.');\r\n\t\t\t\t }\r\n\t\t\t\t return operand1 >= operand2[0] && operand1 <= operand2[1];\r\n\t\r\n\t\t\tcase '/**/': // Regex\r\n\t\t\t\treturn operand2.match(new RegExp(operand1));\r\n\t\t\tdefault:\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * Compares two operands for differences\r\n\t *\r\n\t * @param mixed\t\toperand1\t\t\r\n\t * @param mixed\t\toperand2\t\t\r\n\t * @param bool\t \tstrict\t\t\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tstatic diff(operand1, operand2, strict) {\r\n\t\treturn !this.compare(operand1, operand2, strict ? '===' : '==');\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nComparison.operators = {\r\n\texact: {\r\n\t\tis: '===',\r\n\t\tisNull: '===',\r\n\t\tequalsTo: '==',\r\n\t\tstrictlyNotEqualsTo: '!==',\r\n\t\tnotEqualsTo: '!=',\r\n\t},\r\n\trelative: {\r\n\t\tlesserThan: '<',\r\n\t\tgreaterThan: '>',\r\n\t\tlesserThanOrEqualsTo: '<=',\r\n\t\tgreaterThanOrEqualsTo: '>=',\r\n\t\tbetween: '>=<',\r\n\t},\r\n\tpartial: {\r\n\t\tstartsWith: '^=',\r\n\t\tendsWith: '$=',\r\n\t\tcontains: '*=',\r\n\t\tany: '~=',\r\n\t\tin: '~=',\r\n\t\tmatches: '/**/',\r\n\t},\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ConditionInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'TernaryConditional'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Lexer from '@web-native-js/commons/str/Lexer.js';\r\nimport ConditionInterface from './ConditionInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Condition class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Condition extends ConditionInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(assertion, onTrue, onFalse) {\r\n\t\tsuper();\r\n\t\tthis.assertion = assertion;\r\n\t\tthis.onTrue = onTrue;\r\n\t\tthis.onFalse = onFalse;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.assertion.eval(context, params) \r\n\t\t\t? this.onTrue.eval(context, params) \r\n\t\t\t: this.onFalse.eval(context, params);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn [\r\n\t\t\tthis.assertion.toString(context), \r\n\t\t\tthis.constructor.operators[0], \r\n\t\t\tthis.onTrue.toString(context),\r\n\t\t\tthis.constructor.operators[1], \r\n\t\t\tthis.onFalse.toString(context)\r\n\t\t].join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar splits = Lexer.split(expr, this.operators);\r\n\t\tif (splits.length > 1) {\r\n\t\t\tif (splits.length === 2) {\r\n\t\t\t\tthrow new Error('Malformed ternary expression: ' + expr + '!');\r\n\t\t\t}\r\n\t\t\treturn new this(\r\n\t\t\t\tparseCallback(splits[0].trim()),\r\n\t\t\t\tparseCallback(splits[1].trim()),\r\n\t\t\t\tparseCallback(splits[2].trim())\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nCondition.operators = [\r\n\t'?', \r\n\t':',\r\n];","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * DeletionInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'DeleteExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _last from '@web-native-js/commons/arr/last.js';\r\nimport _isUndefined from '@web-native-js/commons/js/isUndefined.js';\r\nimport Lexer from '@web-native-js/commons/str/Lexer.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport DeletionInterface from './DeletionInterface.js';\r\nimport SyntaxError from '../SyntaxError.js';\r\nimport ReferenceError from '../ReferenceError.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Deletion class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Deletion = class extends DeletionInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(reference, operator = 'delete') {\r\n\t\tsuper();\r\n\t\tthis.reference = reference;\r\n\t\tthis.operator = operator;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\ttry {\r\n\t\t\treturn this.reference.getEval(context, params).del();\r\n\t\t} catch(e) {\r\n\t\t\tif (e instanceof ReferenceError) {\r\n\t\t\t\tthrow new ReferenceError('[' + this + ']: ' + e.message);\r\n\t\t\t} else {\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn this.operator + ' ' + this.reference.toString(context);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar parse = Lexer.lex(expr, Object.values(this.operators));\r\n\t\tif (parse.matches.length === 1 && expr.startsWith(parse.matches[0] + ' ')) {\r\n\t\t\tvar reference;\r\n\t\t\tif (!((reference = parseCallback(parse.tokens.pop().trim())) instanceof ReferenceInterface)) {\r\n\t\t\t\tthrow new SyntaxError(expr);\r\n\t\t\t}\r\n\t\t\treturn new this(reference, parse.matches[0].trim());\r\n\t\t}\r\n\t}\r\n};\t\r\n\r\n/**\r\n * @prop array\r\n */\r\nDeletion.operators = {\r\n\tred: 'reduce', \r\n\tdel: 'delete',\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Deletion;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _copy from '@web-native-js/commons/obj/copy.js';\r\nimport _each from '@web-native-js/commons/obj/each.js';\r\nimport _flatten from '@web-native-js/commons/arr/flatten.js';\r\nimport _wrapped from '@web-native-js/commons/str/wrapped.js';\r\nimport _unwrap from '@web-native-js/commons/str/unwrap.js';\r\nimport Lexer from '@web-native-js/commons/str/Lexer.js';\r\nimport FuncInterface from './FuncInterface.js';\r\nimport Block from './Block.js';\r\nimport Scope from '../Scope.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Func class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Func = class extends FuncInterface {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(paramters, statements, arrowFunctionFormatting = {}) {\r\n\t\tsuper();\r\n\t\tthis.paramters = paramters || {};\r\n\t\tthis.statements = statements;\r\n\t\tthis.arrowFunctionFormatting = arrowFunctionFormatting;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tinherit(Super) {\r\n\t\tif (Super instanceof FuncInterface) {\r\n\t\t\tvar parentParams = Object.keys(Super.paramters);\r\n\t\t\tvar ownParams = Object.keys(this.paramters);\r\n\t\t\tfor (var i = 0; i < Math.max(ownParams.length, parentParams.length); i ++) {\r\n\t\t\t\tvar nameInParent = parentParams[i];\r\n\t\t\t\tvar nameInSelf = ownParams[i];\r\n\t\t\t\tif (!nameInSelf && nameInParent) {\r\n\t\t\t\t\tthrow new Error('Parameter #' + i + ' (' + nameInParent + ') in parent function must be implemented.');\r\n\t\t\t\t}\r\n\t\t\t\tif (nameInSelf && nameInParent) {\r\n\t\t\t\t\tvar defaultValInParent = Super.paramters[nameInParent];\r\n\t\t\t\t\tvar defaultValInSelf = this.paramters[nameInSelf];\r\n\t\t\t\t\tif (defaultValInSelf && !defaultValInParent) {\r\n\t\t\t\t\t\tthrow new Error('Parameter #' + i + ' (' + nameInSelf + ') must not have a default value as established in parent function.');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (defaultValInSelf && defaultValInParent && defaultValInSelf.jsenType !== defaultValInParent.jsenType) {\r\n\t\t\t\t\t\tthrow new Error('Default value for parameter #' + i + ' (' + nameInSelf + ') must be of type ' + defaultValInParent.jsenType + ' as established in parent function.');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.sup = Super;\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\tvar instance = this;\r\n\t\treturn function(...args) {\r\n\t\t\tvar newMainContext = {};\r\n\t\t\t_each(Object.keys(instance.paramters), (i, name) => {\r\n\t\t\t\tvar defaultVal = instance.paramters[name];\r\n\t\t\t\tif (args.length - 1 < i && !defaultVal) {\r\n\t\t\t\t\tthrow new Error('The parameter \"' + name + '\" is required.');\r\n\t\t\t\t}\r\n\t\t\t\tnewMainContext[name] = args.length > i \r\n\t\t\t\t\t? args[i] \r\n\t\t\t\t\t: (instance.paramters[name] \r\n\t\t\t\t\t\t? instance.paramters[name].eval(context, params) \r\n\t\t\t\t\t\t: null);\r\n\t\t\t});\r\n\t\t\tif (!instance.arrowFunctionFormatting) {\r\n\t\t\t\tnewMainContext['this'] = this;\r\n\t\t\t}\r\n\t\t\t// But this newer context should come first\r\n\t\t\tvar errorLevel = context instanceof Scope ? context.params.errorLevel : undefined;\r\n\t\t\tvar nestedContext = new Scope({main:newMainContext, super:context}, {errorLevel});\r\n\t\t\tvar retrn = instance.statements.eval(nestedContext, params);\r\n\t\t\tif (instance.arrowFunctionFormatting.body === false) {\r\n\t\t\t\treturn retrn[0];\r\n\t\t\t}\r\n\t\t\treturn retrn;\r\n\t\t};\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\tvar paramters = [];\r\n\t\t_each(this.paramters, (name, value) => {\r\n\t\t\tparamters.push(name + (value ? '=' + value.toString(context) : ''));\r\n\t\t});\r\n\t\tif (this.arrowFunctionFormatting) {\r\n\t\t\tvar headNoWrap = this.arrowFunctionFormatting.head === false || (paramters.length === 1 && paramters[0].indexOf('=') === -1);\r\n\t\t\tvar bodyNoWrap = this.arrowFunctionFormatting.body === false\r\n\t\t\treturn (headNoWrap ? paramters[0] : '(' + paramters.join(', ') + ')')\r\n\t\t\t+ ' => ' + (bodyNoWrap ? this.statements.toString(context) : '{' + this.statements.toString(context) + '}');\r\n\t\t}\r\n\t\treturn 'function (' + paramters.join(', ') + ') {' + this.statements.toString(context) + '}';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\texpr = expr.trim();\r\n\t\tvar splits;\r\n\t\tif (expr.startsWith('function') \r\n\t\t&& (splits = Lexer.split(expr, []).slice(1).filter(b => b.trim())) && splits.length === 2) {\r\n\t\t\tvar arrowFunctionFormatting = false;\r\n\t\t\tvar funcHead = _unwrap(splits.shift().trim(), '(', ')');\r\n\t\t\tvar funcBody = _unwrap(splits.shift().trim(), '{', '}');\r\n\t\t} else if (!expr.startsWith('function') \r\n\t\t&& (splits = Lexer.split(expr, ['=>'])) && splits.length === 2) {\r\n\t\t\tvar funcHead = splits.shift().trim();\r\n\t\t\tvar funcBody = splits.shift().trim();\r\n\t\t\tvar arrowFunctionFormatting = {};\r\n\t\t\tif (_wrapped(funcHead, '(', ')')) {\r\n\t\t\t\tfuncHead = _unwrap(funcHead, '(', ')');\r\n\t\t\t} else {\r\n\t\t\t\tarrowFunctionFormatting.head = false;\r\n\t\t\t}\r\n\t\t\tif (_wrapped(funcBody, '{', '}')) {\r\n\t\t\t\tfuncBody = _unwrap(funcBody, '{', '}');\r\n\t\t\t} else {\r\n\t\t\t\tarrowFunctionFormatting.body = false;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar paramters = {};\r\n\t\tLexer.split(funcHead, [',']).forEach(param => {\r\n\t\t\tvar paramSplit = param.split('=');\r\n\t\t\tif (paramSplit[1]) {\r\n\t\t\t\tparamters[paramSplit[0].trim()] = parseCallback(paramSplit[1].trim(), null, {\r\n\t\t\t\t\t// Any varaibles should be added to public vars\r\n\t\t\t\t\tmeta: null,\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tparamters[param.trim()] = null;\r\n\t\t\t}\r\n\t\t});\r\n\t\tvar block = parseCallback(funcBody, [Block], {assert:false}) || parseCallback(funcBody, null, {\r\n\t\t\t// Any varaibles should be added to public vars\r\n\t\t\tmeta: null,\r\n\t\t});\r\n\t\treturn new this(\r\n\t\t\tparamters,\r\n\t\t\tblock.jsenType === 'Block' ? block : new Block([block]),\r\n\t\t\tarrowFunctionFormatting,\r\n\t\t);\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nFunc.operators = ['=>',];\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Func;","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@web-native-js/commons/str/wrapped.js';\r\nimport _unwrap from '@web-native-js/commons/str/unwrap.js';\r\nimport Lexer from '@web-native-js/commons/str/Lexer.js';\r\nimport IfInterface from './IfInterface.js';\r\nimport Block from './Block.js';\r\nimport Scope from '../Scope.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Condition class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst If = class extends IfInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(assertion, onTrue, onFalse, params = {}) {\r\n\t\tsuper();\r\n\t\tthis.assertion = assertion;\r\n\t\tthis.onTrue = onTrue;\r\n\t\tthis.onFalse = onFalse;\r\n\t\tthis.params = params;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n        var errorLevel = context instanceof Scope ? context.params.errorLevel : undefined;\r\n        var _context = new Scope({\r\n            main:{}, \r\n            super:context,\r\n        }, {type: 2, errorLevel});\r\n\t\treturn  this.assertion.eval(context/** original context */, params)\r\n\t\t\t? (this.onTrue ? this.onTrue.eval(_context, params) : undefined)\r\n            : (this.onFalse ? this.onFalse.eval(_context, params) : undefined);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n        var onTrue = this.onTrue && this.params.onTrueIsBlock \r\n            ? '{' + this.onTrue.toString(context) + '}' \r\n            : (this.onTrue ? this.onTrue.toString(context) : '');\r\n        var onFalse = this.onFalse && this.params.onFalseIsBlock \r\n            ? '{' + this.onFalse.toString(context) + '}' \r\n            : (this.onFalse ? this.onFalse.toString(context) : '');\r\n\t\treturn 'if (' + this.assertion.toString(context) + ')' + onTrue + (onFalse ? ' else ' + onFalse : '');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n        expr = expr.trim();\r\n        var splits;\r\n        if (expr.startsWith('if') \r\n\t\t&& (splits = Lexer.split(expr, [], {limit:2}/*IMPORTANT*/).slice(1).filter(b => b.trim())) && splits.length === 2) {\r\n            var assertion = parseCallback(_unwrap(splits.shift().trim(), '(', ')').trim());\r\n            var rest = Lexer.split(splits.shift().trim(), ['else'], {limit:1}/*IMPORTANT*/);\r\n            var onTrue = rest.shift().trim(), onTrueIsBlock, onFalse = (rest.shift() || '').trim(), onFalseIsBlock;\r\n            if (_wrapped(onTrue, '{', '}')) {\r\n                // The braces gives us the onTrue block\r\n                onTrueIsBlock = true;\r\n                onTrue = _unwrap(onTrue, '{', '}').trim();\r\n                onTrue = parseCallback(onTrue, [Block], {assert:false, meta:null}) || parseCallback(onTrue, null, {meta:null});\r\n            } else {\r\n                onTrue = parseCallback(onTrue, null, {meta:null});\r\n            }\r\n            if (onFalse) {\r\n                if (_wrapped(onFalse, '{', '}')) {\r\n                    // The braces gives us the onTrue block\r\n                    onFalseIsBlock = true;\r\n                    onFalse = _unwrap(onFalse, '{', '}').trim();\r\n                    onFalse = parseCallback(onFalse, [Block], {assert:false, meta:null}) || parseCallback(onFalse, null, {meta:null});\r\n                } else {\r\n                    onFalse = parseCallback(onFalse, null, {meta:null});\r\n                }\r\n            }\r\n\t\t\treturn new this(\r\n                assertion, \r\n                onTrue ? (onTrue.jsenType === 'Block' ? onTrue : new Block([onTrue])) : null, \r\n                onFalse ? (onFalse.jsenType === 'Block' ? onFalse : new Block([onFalse])) : null, \r\n                {\r\n                    onTrueIsBlock,\r\n                    onFalseIsBlock,\r\n                }\r\n            );\r\n         }\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default If;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\n\r\n/**\r\n * Returns the intersection of two arrays;\r\n * optionally using a custom matching function.\r\n *\r\n * @param array \tarr\r\n * @param array\t \tarr2\r\n * @param function \tcallback\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, arr2, callback = null) {\r\n\treturn !_isArray(arr2) ? [] : arr.filter(val1 => callback \r\n\t\t? arr2.filter(val2 => callback(val1, val2)).length \r\n\t\t: arr2.indexOf(val1) !== -1\r\n\t);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * MathInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'MathExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNumeric from '@web-native-js/commons/js/isNumeric.js';\r\nimport _flatten from '@web-native-js/commons/arr/flatten.js';\r\nimport _intersect from '@web-native-js/commons/arr/intersect.js';\r\nimport _unique from '@web-native-js/commons/arr/unique.js';\r\nimport MathInterface from './MathInterface.js';\r\nimport Lexer from '@web-native-js/commons/str/Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Math class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Math = class extends MathInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(val, exprs) {\r\n\t\tsuper();\r\n\t\tthis.val = val;\r\n\t\tthis.exprs = exprs;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.exprs.reduce((currentTotal, expr) => {\r\n\t\t\tvar val = expr.val.eval(context, params);\r\n\t\t\tvar operator = expr.operator.trim();\r\n\t\t\tif ((!_isNumeric(currentTotal) || !_isNumeric(val)) && operator !== '+') {\r\n\t\t\t\tthrow new Error('Invalid Math expression: ' + this.toString() + '!');\r\n\t\t\t}\r\n\t\t\tswitch(operator) {\r\n\t\t\t\tcase '+':\r\n\t\t\t\t\treturn currentTotal + val;\r\n\t\t\t\tcase '-':\r\n\t\t\t\t\treturn currentTotal - val;\r\n\t\t\t\tcase '*':\r\n\t\t\t\t\treturn currentTotal * val;\r\n\t\t\t\tcase '/':\r\n\t\t\t\t\treturn currentTotal / val;\r\n\t\t\t}\r\n\t\t}, this.val.eval(context, params));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn [this.val.toString(context)].concat(\r\n\t\t\tthis.exprs.map(expr => expr.operator + ' ' + expr.val.toString(context))\r\n\t\t).join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar parse = Lexer.lex(expr, _flatten(this.operators));\r\n\t\tif (parse.tokens.length > 1 && parse.matches.length === parse.tokens.length - 1) {\r\n\t\t\tvar operators = _unique(parse.matches);\r\n\t\t\tif (_intersect(operators, this.operators.sup).length && _intersect(operators, this.operators.sub).length) {\r\n\t\t\t\tthrow new Error('\"Addition/subtraction\" and \"multiplication/division\" operators cannot be used in the same expression: ' + expr + '!');\r\n\t\t\t}\r\n\t\t\treturn new this(\r\n\t\t\t\tparseCallback(parse.tokens.shift().trim()),\r\n\t\t\t\tparse.tokens.map((expr, i) => {return {\r\n\t\t\t\t\toperator: parse.matches[i],\r\n\t\t\t\t\tval: parseCallback(expr.trim())\r\n\t\t\t\t};})\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nMath.operators = {\r\n\tsup: ['*', '/'],\r\n\tsub: ['+', '-'],\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Math;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * NumInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'NumberType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNumeric from '@web-native-js/commons/js/isNumeric.js';\r\nimport NumInterface from './NumInterface.js';\r\nimport Lexer from '@web-native-js/commons/str/Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Num (number) class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Num = class extends NumInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(int, dec = 0) {\r\n\t\tsuper();\r\n\t\tthis.int = int;\r\n\t\tthis.dec = dec;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval() {\r\n\t\treturn parseFloat(this.int + (this.dec ? '.' + this.dec : null));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn this.int + (this.dec ? '.' + this.dec : null);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (_isNumeric(expr)) {\r\n\t\t\tvar expr = expr.split('.');\r\n\t\t\treturn new this(\r\n\t\t\t\tparseInt(expr.shift()),\r\n\t\t\t\tparseInt(expr.shift())\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Num;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ObjInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'ObjectType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@web-native-js/commons/str/wrapped.js';\r\nimport _unwrap from '@web-native-js/commons/str/unwrap.js';\r\nimport _first from '@web-native-js/commons/arr/first.js';\r\nimport _last from '@web-native-js/commons/arr/last.js';\r\nimport _each from '@web-native-js/commons/obj/each.js';\r\nimport ObjInterface from './ObjInterface.js';\r\nimport Lexer from '@web-native-js/commons/str/Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Object utils\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Obj = class extends ObjInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(entries) {\r\n\t\tsuper();\r\n\t\tthis.entries = entries || {};\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tinherit(Super) {\r\n\t\tif (Super instanceof ObjInterface) {\r\n\t\t\t_each(Super.entries, (name, val) => {\r\n\t\t\t\tif (!(name in this.entries)) {\r\n\t\t\t\t\tthis.entries[name] = val;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\tvar items = {};\r\n\t\t_each(this.entries, (key, expr) => {\r\n\t\t\titems[key] = expr.eval(context, params);\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\tvar str = [];\r\n\t\t_each(this.entries, (key, expr) => {\r\n\t\t\tstr.push(key + Obj.operators.sub + expr.toString(context));\r\n\t\t});\r\n\t\treturn '{' + str.join(Obj.operators.sup) + '}';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (_wrapped(expr, '{', '}') && !Lexer.match(expr.trim(), [' ']).length) {\r\n\t\t\tvar entries = {};\r\n\t\t\tvar _entriesSplit = Lexer.split(_unwrap(expr, '{', '}'), [Obj.operators.sup])\r\n\t\t\t\t.map(n => n.trim()).filter(n => n);\r\n\t\t\t_each(_entriesSplit, (key, expr) => {\r\n\t\t\t\tvar entry = Lexer.split(expr, [Obj.operators.sub], {limit:1}/*IMPORTANT*/);\r\n\t\t\t\tentries[_first(entry).trim()] = parseCallback(_last(entry).trim());\r\n\t\t\t});\r\n\t\t\treturn new this(entries);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nObj.operators = {\r\n\tsup: ',',\r\n\tsub: ':',\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Obj;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * PresenceInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'PresenceOperator'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _last from '@web-native-js/commons/arr/last.js';\r\nimport _isUndefined from '@web-native-js/commons/js/isUndefined.js';\r\nimport Lexer from '@web-native-js/commons/str/Lexer.js';\r\nimport PresenceInterface from './PresenceInterface.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport SyntaxError from '../SyntaxError.js';\r\nimport ReferenceError from '../ReferenceError.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Presence class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Presence = class extends PresenceInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(prop, reference, operator = 'in') {\r\n\t\tsuper();\r\n\t\tthis.prop = prop;\r\n\t\tthis.reference = reference;\r\n\t\tthis.operator = operator;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\tvar prop = this.prop.eval(context, params);\r\n\t\ttry {\r\n\t\t\treturn this.reference.getEval(context, params).has(prop);\r\n\t\t} catch(e) {\r\n\t\t\tif (e instanceof ReferenceError) {\r\n\t\t\t\tthrow new ReferenceError('[' + this + ']: ' + e.message);\r\n\t\t\t} else {\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn [this.prop.toString(context), this.operator, this.reference.toString(context)].join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar parse = Lexer.lex(expr, this.operators);\r\n\t\tif (parse.tokens.length === 2) {\r\n\t\t\tvar prop, reference;\r\n\t\t\tif (!(prop = parseCallback(parse.tokens.shift().trim()))\r\n\t\t\t|| !((reference = parseCallback(parse.tokens.shift().trim())) instanceof ReferenceInterface)) {\r\n\t\t\t\tthrow new SyntaxError(expr);\r\n\t\t\t}\r\n\t\t\treturn new this(prop, reference, parse.matches[0].trim());\r\n\t\t}\r\n\t}\r\n};\t\r\n\r\n/**\r\n * @prop array\r\n */\r\nPresence.operators = [' in '];\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Presence;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isUndefined from '@web-native-js/commons/js/isUndefined.js';\r\nimport _wrapped from '@web-native-js/commons/str/wrapped.js';\r\nimport _unwrap from '@web-native-js/commons/str/unwrap.js';\r\nimport Lexer from '@web-native-js/commons/str/Lexer.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport ExprInterface from '../ExprInterface.js';\r\nimport Scope from '../Scope.js';\r\nimport SyntaxError from '../SyntaxError.js';\r\nimport ReferenceError from '../ReferenceError.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Reference class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Reference = class extends ReferenceInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(context, name, backticks = false) {\r\n\t\tsuper();\r\n\t\tthis.context = context;\r\n\t\tthis.name = name;\r\n\t\tthis.backticks = backticks;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tgetEval(context = null, params = {}) {\r\n\t\tvar sourceContext = context, name = this.name;\r\n\t\tif (this.context) {\r\n\t\t\tif (name instanceof ExprInterface) {\r\n\t\t\t\tname = name.eval(context, params);\r\n\t\t\t}\r\n\t\t\tsourceContext = this.context.eval(context, params);\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tget() {\r\n\t\t\t\treturn Scope.create(sourceContext).get(name, params.trap);\r\n\t\t\t},\r\n\t\t\tdel() {\r\n\t\t\t\treturn Scope.create(sourceContext).del(name, params.trap);\r\n\t\t\t},\r\n\t\t\thas(prop) {\r\n\t\t\t\treturn Scope.create(sourceContext).has(name, prop, params.trap);\r\n\t\t\t},\r\n\t\t\tset(val, initKeyword = null) {\r\n\t\t\t\treturn Scope.create(sourceContext).set(name, val, params.trap, initKeyword);\r\n\t\t\t},\r\n\t\t\texec(args) {\r\n\t\t\t\treturn Scope.create(sourceContext).exec(name, args, params.trap);\r\n\t\t\t},\r\n\t\t};\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\ttry {\r\n\t\t\treturn this.getEval(context, params).get();\r\n\t\t} catch(e) {\r\n\t\t\tif (e instanceof ReferenceError) {\r\n\t\t\t\tthrow new ReferenceError('[' + this + ']: ' + e.message);\r\n\t\t\t} else {\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\tvar name = this.name;\r\n\t\tif (this.context) {\r\n\t\t\tvar subjectContext = this.context.toString(context);\r\n\t\t\tif (name instanceof ExprInterface) {\r\n\t\t\t\tname = '[' + name.toString(context) + ']';\r\n\t\t\t} else if (this.backticks) {\r\n\t\t\t\tname = '`' + name + '`';\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar subjectContext = context;\r\n\t\t\tif (this.backticks) {\r\n\t\t\t\tname = '`' + name + '`';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn (subjectContext || '') + (subjectContext && !name.startsWith('[') ? Reference.separator : '') + name;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (!Lexer.match(expr.trim(), [' ']).length) {\r\n\t\t\tvar splits = Lexer.split(expr, []);\r\n\t\t\t// ------------------------\r\n\t\t\t// name, first\r\n\t\t\t// ------------------------\r\n\t\t\tvar context, name = splits.pop(), backticks;\r\n\t\t\tvar nameSplit = Lexer.split(name.trim(), [this.separator], {preserveDelims:true});\r\n\t\t\tif (nameSplit.length > 1) {\r\n\t\t\t\tname = nameSplit.pop().substr(1);\r\n\t\t\t\tsplits = splits.concat(nameSplit);\r\n\t\t\t}\r\n\t\t\tif (_wrapped(name, '`', '`')) {\r\n\t\t\t\tname = _unwrap(name, '`', '`');\r\n\t\t\t\tbackticks = true;\r\n\t\t\t}\r\n\t\t\t// ------------------------\r\n\t\t\t// context, second\r\n\t\t\t// ------------------------\r\n\t\t\tif (splits.length) {\r\n\t\t\t\tcontext = parseCallback(splits.join(''));\r\n\t\t\t\tcontext.isContext = true;\r\n\t\t\t}\r\n\t\t\tif (_wrapped(name, '[', ']')) {\r\n\t\t\t\tif (!context) {\r\n\t\t\t\t\tthrow new SyntaxError(expr);\r\n\t\t\t\t}\r\n\t\t\t\tname = parseCallback(_unwrap(name, '[', ']'));\r\n\t\t\t}\r\n\t\t\treturn new this(context, name, backticks);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop string\r\n */\r\nReference.separator = '.';\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Reference;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Lexer from '@web-native-js/commons/str/Lexer.js';\r\nimport ReturnInterface from './ReturnInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Ret (return) class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Return = class extends ReturnInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(expr) {\r\n\t\tsuper();\r\n\t\tthis.expr = expr;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.expr ? this.expr.eval(context, params) : undefined;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn this.expr ? 'return ' + this.expr.toString(context) : 'return';\r\n\t}\r\n\t\r\n\t/**\r\n\t * -------------------------------------------------------\r\n\t */\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar exprLc = expr.toLowerCase();\r\n\t\tif (exprLc.startsWith('return ') || exprLc === 'return') {\r\n\t\t\treturn new this(\r\n\t\t\t\tparseCallback(expr.substr(6).trim())\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Return;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * StrInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'StringType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@web-native-js/commons/str/wrapped.js';\r\nimport _unwrap from '@web-native-js/commons/str/unwrap.js';\r\nimport StrInterface from './StrInterface.js';\r\nimport Lexer from '@web-native-js/commons/str/Lexer.js';\r\nimport Bool from './Bool.js';\r\n\r\n/**\r\n * ---------------------------\r\n * String utils\r\n * ---------------------------\r\n */\r\n\r\nconst Str = class extends StrInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(expr, quote) {\r\n\t\tsuper();\r\n\t\tthis.expr = expr;\r\n\t\tthis.quote = quote;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval() {\r\n\t\treturn this.expr;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.quote + this.expr + this.quote;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\texpr = expr.trim();\r\n\t\tif ((_wrapped(expr, '\"', '\"') || _wrapped(expr, \"'\", \"'\")) \r\n\t\t&& !Lexer.match(expr, [' ']).length) {\r\n\t\t\tvar quote = _wrapped(expr, '\"', '\"') ? '\"' : \"'\";\r\n\t\t\treturn new this(\r\n\t\t\t\t_unwrap(expr, quote, quote),\r\n\t\t\t\tquote\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Str;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * VoidInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Void'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Lexer from '@web-native-js/commons/str/Lexer.js';\r\nimport VoidInterface from './VoidInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Void (boolean) class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Void = class extends VoidInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(val) {\r\n\t\tsuper();\r\n\t\tthis.val = val;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval() {\r\n\t\treturn this.val.toLowerCase().trim() === 'null' ? null : undefined;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.val;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar expr = expr.toLowerCase().trim();\r\n\t\tif (expr === 'null' || expr === 'undefined') {\r\n\t\t\treturn new this(expr);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Void;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Jsen from './Jsen.js';\r\nimport ExprInterface from './ExprInterface.js';\r\nimport Scope from './Scope.js';\r\nimport Abstraction from './Expr/Abstraction.js';\r\nimport AbstractionInterface from './Expr/AbstractionInterface.js';\r\nimport Arr from './Expr/Arr.js';\r\nimport ArrInterface from './Expr/ArrInterface.js';\r\nimport Arguments from './Expr/Arguments.js';\r\nimport ArgumentsInterface from './Expr/ArgumentsInterface.js';\r\nimport Assertion from './Expr/Assertion.js';\r\nimport AssertionInterface from './Expr/AssertionInterface.js';\r\nimport Assignment from './Expr/Assignment.js';\r\nimport AssignmentInterface from './Expr/AssignmentInterface.js';\r\nimport Block from './Expr/Block.js';\r\nimport BlockInterface from './Expr/BlockInterface.js';\r\nimport Bool from './Expr/Bool.js';\r\nimport BoolInterface from './Expr/BoolInterface.js';\r\nimport Call from './Expr/Call.js';\r\nimport CallInterface from './Expr/CallInterface.js';\r\nimport Comparison from './Expr/Comparison.js';\r\nimport ComparisonInterface from './Expr/ComparisonInterface.js';\r\nimport Condition from './Expr/Condition.js';\r\nimport ConditionInterface from './Expr/ConditionInterface.js';\r\nimport Deletion from './Expr/Deletion.js';\r\nimport DeletionInterface from './Expr/DeletionInterface.js';\r\nimport Func from './Expr/Func.js';\r\nimport FuncInterface from './Expr/FuncInterface.js';\r\nimport If from './Expr/If.js';\r\nimport IfInterface from './Expr/IfInterface.js';\r\nimport Math from './Expr/Math.js';\r\nimport MathInterface from './Expr/MathInterface.js';\r\nimport Num from './Expr/Num.js';\r\nimport NumInterface from './Expr/NumInterface.js';\r\nimport Obj from './Expr/Obj.js';\r\nimport ObjInterface from './Expr/ObjInterface.js';\r\nimport Presence from './Expr/Presence.js';\r\nimport PresenceInterface from './Expr/PresenceInterface.js';\r\nimport Reference from './Expr/Reference.js';\r\nimport ReferenceInterface from './Expr/ReferenceInterface.js';\r\nimport Return from './Expr/Return.js';\r\nimport ReturnInterface from './Expr/ReturnInterface.js';\r\nimport Str from './Expr/Str.js';\r\nimport StrInterface from './Expr/StrInterface.js';\r\nimport Void from './Expr/Void.js';\r\nimport VoidInterface from './Expr/VoidInterface.js';\r\n\r\n/**\r\n * @var object\r\n */\r\nJsen.grammars = {\r\n\tIf: If,\t\t\t\t\t\t// if (condition) expr1 else expre2\r\n\t//Block: Block,\t\t\t\t// field1 = 3; field2 = val2\r\n\tReturn: Return,\t\t\t\t// return field1\r\n\tDeletion: Deletion,\t\t\t// delete field1\r\n\tAssignment: Assignment,\t\t// field1[key1].key2 = k\r\n\tPresence: Presence,\t\t\t// key1 in field1\r\n\tFunc: Func,\t\t\t\t\t// (field1, field2) => {}\r\n\tAbstraction: Abstraction,\t// (field1)\r\n\tCondition: Condition,\t\t// field1 > field2 ? val1 : val2\r\n\tAssertion: Assertion,\t\t// !field1 && field2\r\n\tComparison: Comparison,\t\t// field1 > field2\r\n\tMath: Math,\t\t\t\t\t// field1 + field2\r\n\tArr: Arr,\t\t\t\t\t// [field1, field2]\r\n\tObj: Obj,\t\t\t\t\t// {field1:val1, field2:val2}\r\n\tNum: Num,\t\t\t\t\t// [0-9]\r\n\tStr: Str,\t\t\t\t\t// \"\"\r\n\tBool: Bool,\t\t\t\t\t// true\r\n\tVoid: Void,\t\t\t\t\t// null|undefined\r\n\tCall: Call,\t\t\t\t\t// field1()\r\n\tReference: Reference,\t\t// field1\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport {\r\n\tExprInterface,\r\n\tScope\r\n};\r\nexport {\r\n\tAbstraction,\r\n\tArr,\r\n\tArguments,\r\n\tAssertion,\r\n\tAssignment,\r\n\tBlock,\r\n\tBool,\r\n\tCall,\r\n\tComparison,\r\n\tCondition,\r\n\tDeletion,\r\n\tFunc,\r\n\tIf,\r\n\tMath,\r\n\tNum,\r\n\tObj,\r\n\tPresence,\r\n\tReference,\r\n\tReturn,\r\n\tStr,\r\n\tVoid,\r\n};\r\nexport {\r\n\tAbstractionInterface,\r\n\tArrInterface,\r\n\tArgumentsInterface,\r\n\tAssertionInterface,\r\n\tAssignmentInterface,\r\n\tBlockInterface,\r\n\tBoolInterface,\r\n\tCallInterface,\r\n\tComparisonInterface,\r\n\tConditionInterface,\r\n\tDeletionInterface,\r\n\tFuncInterface,\r\n\tIfInterface,\r\n\tMathInterface,\r\n\tNumInterface,\r\n\tObjInterface,\r\n\tPresenceInterface,\r\n\tReferenceInterface,\r\n\tReturnInterface,\r\n\tStrInterface,\r\n\tVoidInterface,\r\n};\r\nexport default Jsen;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Jsen from './index.js';\r\n\r\n// As globals\r\nif (!window.WN) {\r\n\twindow.WN = {};\r\n}\r\nwindow.WN.Jsen = Jsen;\r\nif (!window.WebNative) {\r\n\twindow.WebNative = {};\r\n}\r\nwindow.WebNative.Jsen = Jsen;\r\n"],"sourceRoot":""}