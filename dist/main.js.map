{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../commons/js/isArray.js","webpack:///../commons/js/isTypeFunction.js","webpack:///../commons/js/isFunction.js","webpack:///../commons/js/isObject.js","webpack:///../commons/js/isTypeObject.js","webpack:///../commons/js/isNumeric.js","webpack:///../commons/obj/getAllPropertyNames.js","webpack:///../commons/obj/getPrototypeChain.js","webpack:///../commons/arr/pushUnique.js","webpack:///../commons/obj/mergeCallback.js","webpack:///../commons/obj/merge.js","webpack:///../commons/js/instanceof.js","webpack:///../commons/js/isNumber.js","webpack:///../commons/js/isPlainObject.js","webpack:///../commons/js/isBoolean.js","webpack:///../commons/obj/each.js","webpack:///../commons/obj/even.js","webpack:///../commons/obj/compareCallback.js","webpack:///./src/ExprInterface.js","webpack:///./src/Expr/AbstractionInterface.js","webpack:///./src/Expr/ArgumentsInterface.js","webpack:///./src/Expr/ReferenceInterface.js","webpack:///./src/Expr/CallInterface.js","webpack:///./src/Jsen.js","webpack:///../commons/js/isString.js","webpack:///../commons/js/isUndefined.js","webpack:///../commons/arr/from.js","webpack:///../commons/js/isEmpty.js","webpack:///../commons/js/isNull.js","webpack:///../commons/js/isTypeArray.js","webpack:///../commons/arr/flatten.js","webpack:///../commons/arr/first.js","webpack:///../commons/arr/last.js","webpack:///../commons/obj/copyPlain.js","webpack:///./src/Lexer.js","webpack:///./src/Contexts.js","webpack:///../commons/js/isClass.js","webpack:///../commons/str/wrapped.js","webpack:///../commons/str/after.js","webpack:///../commons/str/before.js","webpack:///../commons/str/unwrap.js","webpack:///../commons/str/beforeLast.js","webpack:///./src/Expr/Abstraction.js","webpack:///./src/Expr/ArrInterface.js","webpack:///./src/Expr/Arr.js","webpack:///./src/Expr/Arguments.js","webpack:///../commons/arr/unique.js","webpack:///./src/Expr/AssertionInterface.js","webpack:///./src/Expr/Assertion.js","webpack:///./src/Expr/AssignmentInterface.js","webpack:///./src/Expr/Assignment.js","webpack:///./src/Expr/BlockInterface.js","webpack:///./src/Expr/ReturnInterface.js","webpack:///./src/Expr/Block.js","webpack:///./src/Expr/BoolInterface.js","webpack:///./src/Expr/Bool.js","webpack:///./src/Expr/Call.js","webpack:///./src/Expr/ComparisonInterface.js","webpack:///./src/Expr/Comparison.js","webpack:///./src/Expr/ConditionInterface.js","webpack:///./src/Expr/Condition.js","webpack:///./src/Expr/DeletionInterface.js","webpack:///./src/Expr/Deletion.js","webpack:///./src/Expr/FuncInterface.js","webpack:///./src/Expr/Func.js","webpack:///./src/Expr/IfInterface.js","webpack:///./src/Expr/If.js","webpack:///../commons/arr/intersect.js","webpack:///./src/Expr/MathInterface.js","webpack:///./src/Expr/Math.js","webpack:///./src/Expr/NumInterface.js","webpack:///./src/Expr/Num.js","webpack:///./src/Expr/ObjInterface.js","webpack:///./src/Expr/Obj.js","webpack:///./src/Expr/PresenceInterface.js","webpack:///./src/Expr/Presence.js","webpack:///./src/Expr/Reference.js","webpack:///./src/Expr/Return.js","webpack:///./src/Expr/StrInterface.js","webpack:///./src/Expr/Str.js","webpack:///./src/index.js","webpack:///./src/browser-entry.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Array","isArray","val","toString","isNaN","keysAll","until","prototypalChain","obj","indexOf","push","getPrototypeOf","forEach","items","itm","arr","getOwnPropertyNames","mergeCallback","objs","callback","deepProps","isReplace","withSymbols","depth","obj1","shift","length","Error","obj2","valAtObj1","valAtObj2","getOwnPropertyDescriptor","e","k","classB","mixinTest","classA","Function","prototypes","reduce","prevAns","constructor","returnValue","undefined","keys","parseFloat","_even","assertion","obj1Keys","obj2Keys","result","contn","v1","testPass","v2","netComparison","contrast","returnOnFirstFalse","Expr","jsenType","this","Super","comments","meta","vars","Interface","ExprInterface","Jsen","expr","Parsers","params","Static","parsers","values","grammars","parsed","parse","_expr","_Parsers","_params","subStmt","lodge","AbstractionInterface","ArgumentsInterface","concat","ReferenceInterface","CallInterface","explain","assert","arguments","castObject","slice","_flatten","withObjects","acc","count","firsts","amount","reverse","filter","Lexer","str","delims","options","copyResult","nesting","maxDepth","tokens","matches","matchesi","$cache","cache","cached","lex","$str","$options","blocks","$blocks","quotes","$quotes","$comments","runtime","_evalCharsAt","join","charWidth","commentTest","quoteTest","nestingTest","openComment","_testQuotes","openQuote","_testComments","ending","_push","chars","starting","limit","_testNesting","stopChar","_testChars","stopChars","stopCharForward","substr","matchedDelim","preserveDelims","quote","block","startsWith","Math","max","testList","test","ret","useRegex","match","RegExp","ci","toLowerCase","target","isNewSeries","splitSeries","String","splitSeries2","regParse","stack","type","super","local","$local","props","trap","observe","a","b","fields","prop","_has","main","unobserve","final","level","callMain","handle","bindThis","contxtObj","contxtMeta","advance","_get","initKeyword","set","_set","cntxt","localContxtMeta","includes","deleteProperty","del","prop2","contextObj2","args","fn","exec","apply","execUnknown","has","subject","openingTag","endsWith","closingTag","search","pos","afterLast","lastIndexOf","beforeLast","Abstraction","context","eval","parseCallback","Arr","ArrInterface","exprs","newExprs","exprA","uniqueSoFar","exprB","even","map","trim","split","Arguments","list","arg","index","self","Assertion","AssertionInterface","logic","operators","toUpperCase","isOr","or","isNor","nor","isAnd","and","isNand","nand","lastResult","trues","Assignment","AssignmentInterface","reference","operator","getEval","BlockInterface","stmts","delim","results","stmt","ReturnInterface","prevContext","tags","evalReturn","data","Bool","BoolInterface","state","Call","pop","Comparison","ComparisonInterface","operand1","operand2","compare","oper","strict","exact","is","isNull","equalsTo","strictlyNotEqualsTo","notEqualsTo","relative","lesserThan","greaterThan","lesserThanOrEqualsTo","greaterThanOrEqualsTo","between","partial","contains","any","in","Condition","ConditionInterface","onTrue","onFalse","splits","Deletion","DeletionInterface","red","Func","FuncInterface","paramters","statements","arrowFunctionFormatting","parentParams","ownParams","nameInParent","nameInSelf","defaultValInParent","defaultValInSelf","sup","newMainContext","defaultVal","nestedContext","headNoWrap","head","bodyNoWrap","body","funcHead","funcBody","param","paramSplit","If","IfInterface","newContext","onTrueIsBlock","onFalseIsBlock","rest","arr2","val1","val2","MathInterface","currentTotal","sub","Num","NumInterface","int","dec","parseInt","Obj","ObjInterface","entries","_entriesSplit","entry","Presence","PresenceInterface","Reference","backticks","sourceContext","parts","subjectContext","separator","nameSplit","isContext","Return","exprLc","Str","StrInterface","window","WebNative"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\r\n/**\r\n * Tells if val is of type \"array\".\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn Array.isArray(val);\r\n};\r\n","\r\n/**\r\n * Tells if val is of type \"function\".\r\n * This holds true for both regular functions and classes.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn typeof val === 'function';\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeFunction from './isTypeFunction.js';\r\n\r\n/**\r\n * Tells if val is of type \"function\".\r\n *\r\n * @param object \t\tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isTypeFunction(val) || (val && {}.toString.call(val) === '[object function]');\r\n};\r\n","\r\n/**\r\n * Tells if val is pure object.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn !Array.isArray(val) && typeof val === 'object' && val;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeFunction from './isTypeFunction.js';\r\n\r\n/**\r\n * Tells if val is of type \"object\".\r\n * This holds true for anything object, including built-ins.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn Array.isArray(val) || (typeof val === 'object' && val) || _isTypeFunction(val);\r\n};\r\n","\r\n/**\r\n * Tells if val is of type \"string\" or a numeric string.\r\n * This holds true for both numbers and numeric strings.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val !== true && val !== false && val !== null && val !== '' && !isNaN(val * 1);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _pushUnique from '../arr/pushUnique.js';\r\nimport _getPrototypeChain from './getPrototypeChain.js';\r\n\r\n/**\r\n * Eagerly retrieves object members all down the prototype chain.\r\n *\r\n * @param object\t \tobj\r\n * @param object\t \tuntil\r\n *\r\n * @return array\r\n */\r\nexport default function(obj, until) {\r\n\tvar keysAll = [];\r\n\t_getPrototypeChain(obj, until).forEach(obj => {\r\n\t\t_pushUnique(keysAll, ...Object.getOwnPropertyNames(obj));\r\n\t});\r\n\treturn keysAll;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\n\r\n/**\r\n * Returns the prototype chain.\r\n *\r\n * @param object \t\tobj\r\n * @param object\t \tuntil\r\n *\r\n * @return bool\r\n */\r\nexport default function(obj, until) {\r\n\tuntil = until || Object.prototype;\r\n\tuntil = until && !_isArray(until) ? [until] : until;\r\n\t// We get the chain of inheritance\r\n\tvar prototypalChain = [];\r\n\tvar obj = obj;\r\n\twhile((obj && (!until || until.indexOf(obj) < 0) && obj.name !== 'default')) {\r\n\t\tprototypalChain.push(obj);\r\n\t\tobj = obj ? Object.getPrototypeOf(obj) : null;\r\n\t}\r\n\treturn prototypalChain;\r\n};\r\n","\r\n/**\r\n * Adds an item if not already exist.\r\n *\r\n * @param array \tarr\r\n * @param array\t \t...itms\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, ...items) {\r\n\titems.forEach(itm => {\r\n\t\tif (arr.indexOf(itm) < 0) {\r\n\t\t\tarr.push(itm);\r\n\t\t}\r\n\t});\r\n\treturn arr;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\nimport _getAllPropertyNames from './getAllPropertyNames.js';\r\n\r\n/**\r\n  * Merges values from subsequent arrays/objects first array/object;\r\n  * optionally recursive\r\n  *\r\n  * @param array ...objs\r\n  *\r\n  * @return void\r\n  */\r\nexport default function mergeCallback(objs, callback, deepProps = false, isReplace = false, withSymbols = true) {\r\n\tvar depth = 0;\r\n\tvar obj1 = objs.shift();\r\n\tif (_isNumeric(obj1) || obj1 === true || obj1 === false) {\r\n\t\tdepth = obj1;\r\n\t\tobj1 = objs.shift();\r\n\t}\r\n\tif (!objs.length) {\r\n\t\tthrow new Error('_merge() requires two or more array/objects.');\r\n\t}\r\n\tobjs.forEach((obj2, i) => {\r\n\t\tif (!_isTypeObject(obj2) && !_isFunction(obj2)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t(deepProps ? _getAllPropertyNames(obj2) : Object.getOwnPropertyNames(obj2)).forEach(key => {\r\n\t\t\tvar valAtObj1 = obj1[key];\r\n\t\t\tvar valAtObj2 = obj2[key];\r\n\t\t\tif (((_isArray(valAtObj1) && _isArray(valAtObj2)) || (_isObject(valAtObj1) && _isObject(valAtObj2))) \r\n\t\t\t&& (depth === true || depth > 0)) {\r\n\t\t\t\t// RECURSE...\r\n\t\t\t\tobj1[key] = _isArray(valAtObj1) && _isArray(valAtObj2) ? [] : {};\r\n\t\t\t\tmergeCallback([_isNumeric(depth) ? depth - 1 : depth, obj1[key], valAtObj1, valAtObj2], callback, deepProps, isReplace, withSymbols);\r\n\t\t\t} else if (callback(key, obj1, obj2, i)) {\r\n\t\t\t\tif (_isArray(obj1) && _isArray(obj2)) {\r\n\t\t\t\t\tif (isReplace) {\r\n\t\t\t\t\t\tobj1[key] = valAtObj2;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tobj1.push(valAtObj2);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// In case we're setting a read-only property\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tif (withSymbols) {\r\n\t\t\t\t\t\t\tObject.defineProperty(obj1, key, Object.getOwnPropertyDescriptor(obj2, key));\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tobj1[key] = obj2[key];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} catch(e) {}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\treturn obj1;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _mergeCallback from './mergeCallback.js';\r\n\r\n/**\r\n  * Merges values from subsequent arrays/objects first array/object;\r\n  * optionally recursive\r\n  *\r\n  * @param array ...objs\r\n  *\r\n  * @return void\r\n  */\r\nexport default function(...objs) {\r\n\treturn _mergeCallback(objs, (k, obj1, obj2) => {\r\n\t\treturn true;\r\n\t}, false/*deepProps*/, false/*isReplace*/, false/*withSymbols*/);\r\n};\r\n","\r\n/**\r\n * Instanceof that supports our multi-inheritance implementstion.\r\n *\r\n * @param object\t \tobj1\r\n * @param object\t \tclassB\r\n *\r\n * @return bool\r\n */\r\nexport default function(obj, classB) {\r\n\tif (!obj) {\r\n\t\treturn false;\r\n\t}\r\n\tif (obj instanceof classB) {\r\n\t\treturn true;\r\n\t}\r\n\tvar mixinTest = classA => {\r\n\t\twhile (classA && classA !== Function.prototype) {\r\n\t\t\tif (classA === classB || (classA.prototypes && classA.prototypes.reduce((prevAns, prototype) => prevAns || (prototype === classB) || mixinTest(prototype), false))) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tclassA = Object.getPrototypeOf(classA);\r\n\t\t}\r\n\t\treturn false;\r\n\t};\r\n\treturn mixinTest(obj.constructor);\r\n};\r\n","\r\n/**\r\n * Tells if val is of type \"number\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn typeof val === 'number';\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isObject from './isObject.js';\r\n\r\n/**\r\n * Tells if an object is direct instance of Object.prototype.\r\n * Quite useful in differentiating native objects and class instances from plain objects ({}).\r\n *\r\n * @param object \tobj\r\n *\r\n * @return bool\r\n */\r\nexport default function(obj) {\r\n\treturn _isObject(obj) && Object.getPrototypeOf(obj) === Object.prototype;\r\n};\r\n","\r\n/**\r\n * Tells if val is undefined or is of type \"boolean\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val === true || val === false;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\n\r\n/**\r\n * Loops thru obj flatly with a callback function.\r\n * Stops when callback returns a non-undefined value.\r\n *\r\n * @param array|object \t\t\tobj \t\t\tThe array or object to iterate.\r\n * @param function \t\t\t\tcallback \t\tThe callback function.\r\n *\r\n * @return mixed|null\t\t\tAny non-null return from callback\r\n */\r\nexport default function(obj, callback) {\r\n\tvar returnValue = undefined;\r\n\tif (_isTypeObject(obj)) {\r\n\t\tObject.keys(obj).forEach((k, i) => {\r\n\t\t\tif (returnValue !== false) {\r\n\t\t\t\treturnValue = callback(_isNumeric(k) ? parseFloat(k) : k, obj[k], i);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\treturn returnValue;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNumber from '../js/isNumber.js';\r\nimport _isArray from '../js/isArray.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _isPlainObject from '../js/isPlainObject.js';\r\nimport _compareCallback from './compareCallback.js';\r\n\r\n/**\r\n * Asserts (members of) the first value against (members of) subsequent values.\r\n * Assertion could be TRUE, FALSE, or custom.\r\n *\r\n * @param mixed \t\t\tobj1\r\n * @param mixed \t\t\tobj2\r\n * @param bool|function\t\tassertion\r\n * @param int\t\t\t\tdepth\r\n *\r\n * @return bool\r\n */\r\nconst _even = function(obj1, obj2, assertion = true, depth = 1) {\r\n\tif (_isArray(obj1) && _isArray(obj2) && obj1.length !== obj2.length) {\r\n\t\treturn !assertion;\r\n\t}\r\n\tif (_isObject(obj1) && _isObject(obj2)) {\r\n\t\tvar obj1Keys = Object.keys(obj1);\r\n\t\tvar obj2Keys = Object.keys(obj2);\r\n\t\tif (!obj1Keys.length && !obj2Keys.length) {\r\n\t\t\t// Objects that won't show keys must be compared by instance\r\n\t\t\t// Many native objects won't. So we can't judge by keys alone.\r\n\t\t\treturn _isPlainObject(obj1) && _isPlainObject(obj2) \r\n\t\t\t\t? assertion\r\n\t\t\t\t: (obj1 === obj2) === assertion;\r\n\t\t}\r\n\t\tif (!_even(obj1Keys, obj2Keys)) {\r\n\t\t\treturn !assertion;\r\n\t\t}\r\n\t}\r\n\tif (depth > 0 && ((_isArray(obj1) && _isArray(obj2)) || (_isObject(obj1) && _isObject(obj2)))) {\r\n\t\tvar result = _compareCallback(obj1, obj2, (v1, v2) => {\r\n\t\t\treturn _even(v1, v2, assertion, depth - 1);\r\n\t\t}, false/*netComparison*/, false/*contrast*/, true/*returnOnFirstFalse*/);\r\n\t\treturn _isArray(result) \r\n\t\t\t? result.length === obj1.length && result.length === obj2.length \r\n\t\t\t: (_isObject(result) && _isObject(obj1) \r\n\t\t\t\t? Object.keys(result).length === Object.keys(obj1).length && Object.keys(result).length ===  Object.keys(obj2).length \r\n\t\t\t\t: result);\r\n\t}\r\n\treturn _isFunction(assertion) ? assertion(obj1, obj2) : (\r\n\t\t_isNumber(obj1) && _isNumber(obj2) && isNaN(obj1) && isNaN(obj2) \r\n\t\t\t? assertion \r\n\t\t\t: (obj1 === obj2) === assertion\r\n\t);\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default _even;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isBoolean from '../js/isBoolean.js';\r\nimport _each from './each.js';\r\n\r\n/**\r\n * Gets the match(es) between (members of) two values;\r\n * assertion optionally custom.\r\n *\r\n * @param mixed \t\t\tob1\r\n * @param mixed \t\t\tobj2\r\n * @param string|function\tassertion\r\n * @param bool\t\t\t\tnetComparison\r\n * @param bool\t\t\t\tcontrast\r\n * @param bool\t\t\t\treturnOnFirstFalse\r\n *\r\n * @return bool|array|object\r\n */\r\nexport default function(obj1, obj2, assertion = true, netComparison = true, contrast = false, returnOnFirstFalse = false) {\r\n\tif (_isArray(obj1) && _isArray(obj2)) {\r\n\t\tvar result = [];\r\n\t\tvar contn = true;\r\n\t\tobj1.forEach(v1 => {\r\n\t\t\tif (!contn) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar testPass = false;\r\n\t\t\t_each(obj2, (k, v2) => {\r\n\t\t\t\tif (!testPass || (netComparison && _isTypeObject(v1))) {\r\n\t\t\t\t\ttestPass = assertion(v1, v2);\r\n\t\t\t\t\tif ((_isArray(testPass) && !testPass.length) || (_isObject(testPass) && !Object.keys(testPass).length)) {\r\n\t\t\t\t\t\ttestPass = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (_isTypeObject(testPass) && netComparison) {\r\n\t\t\t\t\t\t// Further recursions should use this testPass as v1\r\n\t\t\t\t\t\tv1 = testPass;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (_isTypeObject(testPass)) {\r\n\t\t\t\tresult.push(netComparison ? testPass : v1);\r\n\t\t\t} else if (!_isBoolean(testPass)) {\r\n\t\t\t\tresult.push(testPass);\r\n\t\t\t} else if ((contrast && !testPass) || (!contrast && testPass)) {\r\n\t\t\t\tresult.push(v1);\r\n\t\t\t} else if (returnOnFirstFalse) {\r\n\t\t\t\tcontn = false;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\tif (_isObject(obj1) && _isObject(obj2)) {\r\n\t\tvar result = {};\r\n\t\tvar contn = true;\r\n\t\tObject.keys(obj1).forEach(k => {\r\n\t\t\tif (!contn) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar testPass = assertion(obj1[k], obj2[k]);\r\n\t\t\tif ((_isArray(testPass) && !testPass.length) || (_isObject(testPass) && !Object.keys(testPass).length)) {\r\n\t\t\t\ttestPass = false;\r\n\t\t\t}\r\n\t\t\tif (_isTypeObject(testPass)) {\r\n\t\t\t\tresult[k] = netComparison ? testPass : obj1[k];\r\n\t\t\t} else if (!_isBoolean(testPass)) {\r\n\t\t\t\tresult[k] = testPass;\r\n\t\t\t} else if ((contrast && !testPass) || (!contrast && testPass)) {\r\n\t\t\t\tresult[k] = obj1[k];\r\n\t\t\t} else if (returnOnFirstFalse) {\r\n\t\t\t\tcontn = false;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isObject from '@web-native-js/commons/js/isObject.js';\r\nimport _even from '@web-native-js/commons/obj/even.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ExprInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class {\r\n\t\r\n\t/**\r\n\t * Compares the current instance with another object.\r\n\t *\r\n\t * @param object Expr\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\teven(Expr) {\r\n\t\tif (_isObject(Expr) && Expr.jsenType === this.jsenType) {\r\n\t\t\treturn _even(Expr, this);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Inherits properties from a super Expr.\r\n\t *\r\n\t * @param ExprInterface Super\r\n\t *\r\n\t * @return this\r\n\t */\r\n\tinherit(Super) {\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Adds comments to the instance.\r\n\t *\r\n\t * @param string\t comments\r\n\t *\r\n\t * @return this\r\n\t */\r\n\twithComments(comments) {\r\n\t\tif (!this.meta) {\r\n\t\t\tthis.meta = {};\r\n\t\t}\r\n\t\tthis.meta.comments = comments;\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Adds variables to the instance.\r\n\t *\r\n\t * @param array\t\t vars\r\n\t *\r\n\t * @return this\r\n\t */\r\n\twithVars(vars) {\r\n\t\tif (!this.meta) {\r\n\t\t\tthis.meta = {};\r\n\t\t}\r\n\t\tthis.meta.vars = vars;\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Evaluates the expression instance for a result,\r\n\t * optionally in the context of an object.\r\n\t *\r\n\t * @param object context\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\t//eval(context = null, trap = {})\r\n\t\r\n\t/**\r\n\t * Serializes the expression instance back to a string,\r\n\t * optionally in the context of an object.\r\n\t *\r\n\t * @param object context\r\n\t *\r\n\t * @return string\r\n\t */\r\n\t//toString(context = null)\r\n\t\r\n\t/**\r\n\t * SAttempts to parse a string into the class instance.\r\n\t *\r\n\t * @param string expr\r\n\t * @param object params\r\n\t *\r\n\t * @return ExprInterface\r\n\t */\r\n\t//static parse(expr, params = {})\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * AbstractionInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Abstraction'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ArgumentsInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Arguments'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ReferenceInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Reference'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * CallInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'CallExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _merge from '@web-native-js/commons/obj/merge.js';\r\nimport _remove from '@web-native-js/commons/arr/remove.js';\r\nimport _isArray from '@web-native-js/commons/js/isArray.js';\r\nimport _instanceof from '@web-native-js/commons/js/instanceof.js';\r\nimport AbstractionInterface from './Expr/AbstractionInterface.js';\r\nimport ArgumentsInterface from './Expr/ArgumentsInterface.js';\r\nimport ReferenceInterface from './Expr/ReferenceInterface.js';\r\nimport CallInterface from './Expr/CallInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Jsen (base) class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Jsen = class {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, Parsers, params = {}, Static = Jsen) {\r\n\t\tif (expr.length) {\r\n\t\t\tvar parsers = Object.values(Parsers || Static.grammars);\r\n\t\t\tfor (var i = 0; i < parsers.length; i ++) {\r\n\t\t\t\t// From this point forward, all vars is within current scope\r\n\t\t\t\tvar vars = []\r\n\t\t\t\tvar parsed = parsers[i].parse(expr, (_expr, _Parsers, _params = {}) => {\r\n\t\t\t\t\tvar subStmt = Jsen.parse(_expr, _Parsers, _params ? _merge(params, _params) : params, Static);\r\n\t\t\t\t\tif (_params.lodge !== false) {\r\n\t\t\t\t\t\tif (_instanceof(subStmt, AbstractionInterface) || _instanceof(subStmt, ArgumentsInterface)) {\r\n\t\t\t\t\t\t\tvars = vars.concat(subStmt.meta.vars);\r\n\t\t\t\t\t\t} else if (_instanceof(subStmt, ReferenceInterface) || _instanceof(subStmt, CallInterface)) {\r\n\t\t\t\t\t\t\tvars.push(subStmt);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn subStmt;\r\n\t\t\t\t});\r\n\t\t\t\t// Add/remove vars to scope\r\n\t\t\t\tif (parsed) {\r\n\t\t\t\t\tif (!parsed.meta) {\r\n\t\t\t\t\t\tparsed.meta = {};\r\n\t\t\t\t\t}\r\n\t\t\t\t\tparsed.meta.vars = vars;\r\n\t\t\t\t\tif (_isArray(params.explain)) {\r\n\t\t\t\t\t\tparams.explain.push(expr + ' >>------------->> ' + parsed.jsenType);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn parsed;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (params.assert === false) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthrow new Error('[Syntax error:] ' + expr);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Jsen;\r\n","\r\n/**\r\n * Tells if val is of type \"string\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn typeof val === 'string';\r\n};\r\n","\r\n/**\r\n * Tells if val is undefined or is of type \"undefined\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn arguments.length && (val === undefined || typeof val === 'undefined');\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isTypeArray from '../js/isTypeArray.js';\r\nimport _isEmpty from '../js/isEmpty.js';\r\nimport _isObject from '../js/isObject.js';\r\n\r\n/**\r\n * Casts an array-like object to an array.\r\n *\r\n * @param mixed \tval\r\n * @param bool\t \tcastObject\r\n *\r\n * @return array\r\n */\r\nexport default function(val, castObject = true) {\r\n\tif (_isArray(val)) {\r\n\t\treturn val;\r\n\t};\r\n\tif (!castObject && _isObject(val)) {\r\n\t\treturn [val];\r\n\t};\r\n\tif (val !== false && val !== 0 && _isEmpty(val)) {\r\n\t\treturn [];\r\n\t};\r\n\tif (_isTypeArray(val)) {\r\n\t\treturn Array.prototype.slice.call(val);\r\n\t};\r\n\tif (_isObject(val)) {\r\n\t\treturn Object.values(val);\r\n\t};\r\n\treturn [val];\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNull from './isNull.js';\r\nimport _isUndefined from './isUndefined.js';\r\nimport _isTypeObject from './isTypeObject.js';\r\n\r\n/**\r\n * Tells if val is empty in its own type.\r\n * This holds true for NULLs, UNDEFINED, FALSE, 0,\r\n * objects without keys, empty arrays.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isNull(val) || _isUndefined(val) || val === false || val === 0 \r\n\t\t|| (_isTypeObject(val) && !Object.keys(val).length);\r\n};\r\n","\r\n/**\r\n * Tells if val is undefined or is null.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val === null || val === '';\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isString from './isString.js';\r\nimport _isUndefined from './isUndefined.js';\r\n\r\n/**\r\n * Tells if val is \"array-like\".\r\n * This holds true for anything that has a length property.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn !_isString(val) && !_isUndefined(val.length);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\n\r\n/**\r\n * Flattens a nested array to the given depth.\r\n *\r\n * @param array \tarr\r\n * @param int \t \tdepth\r\n * @param bool \t \twithObjects\r\n *\r\n * @return array\r\n */\r\nconst _flatten = function(arr, depth = 1, withObjects = true) {\r\n\tif (!_isNumeric(depth) || depth <= 0) {\r\n\t\treturn arr;\r\n\t};\r\n\tif (!_isArray(arr) && _isObject(arr) && withObjects) {\r\n\t\tarr = Object.values(arr);\r\n\t};\r\n\tif (!_isArray(arr)) {\r\n\t\treturn arr;\r\n\t};\r\n\treturn arr.reduce((acc, val) => _isArray(val) || (_isObject(val) && withObjects) \r\n\t\t? acc.concat(_flatten(!_isArray(val) ? Object.values(val) : val, depth - 1, withObjects)) \r\n\t\t: acc.concat(val), []);\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default _flatten;","\r\n/**\r\n * Returns THE FIRST ENTRY OR A NUMBER OF ENTRIES counting forward from the begining.\r\n *\r\n * @param array \tarr\r\n * @param int\t \tamount\r\n *\r\n * @return mixed|array\r\n */\r\nexport default function(arr, amount = 1) {\r\n\tvar count = 0;\r\n\tarr.forEach(itm => {\r\n\t\tcount ++;\r\n\t});\r\n\tvar firsts = arr.slice(arr.length - count, amount);\r\n\treturn arguments.length > 1 ? firsts : firsts[0];\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _first from './first.js';\r\n\r\n/**\r\n * Returns THE LAST ENTRY OR A NUMBER OF ENTRIES counting forward to the end.\r\n *\r\n * @param array \tarr\r\n * @param int\t \tamount\r\n *\r\n * @return mixed|array\r\n */\r\nexport default function(arr, amount = 1) {\r\n\treturn arguments.length > 1\r\n\t\t? _first(arr.slice().reverse(), amount).reverse()\r\n\t\t: _first(arr.slice().reverse());\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _mergeCallback from './mergeCallback.js';\r\n\r\n/**\r\n * Copies only properties of an object.\r\n *\r\n * @param object\t \tobj\r\n * @param array\t\t \tonly\r\n * @param array\t\t \texcept\r\n *\r\n * @return object\r\n */\r\nexport default function(obj, filter = []) {\r\n\treturn _mergeCallback([{}, obj], (key, obj1, obj2) => {\r\n\t\tif (!_isFunction(obj2[key])) {\r\n\t\t\treturn _isFunction(filter) ? filter(key) \r\n\t\t\t\t: (_isArray(filter) && filter.length ? filter.indexOf(key) > -1 : true);\r\n\t\t}\r\n\t}, false/*deepProps*/, false/*isReplace*/, false/*withSymbols*/);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isString from '@web-native-js/commons/js/isString.js';\r\nimport _isUndefined from '@web-native-js/commons/js/isUndefined.js';\r\nimport _isFunction from '@web-native-js/commons/js/isFunction.js';\r\nimport _arrFrom from '@web-native-js/commons/arr/from.js';\r\nimport _flatten from '@web-native-js/commons/arr/flatten.js';\r\nimport _first from '@web-native-js/commons/arr/first.js';\r\nimport _last from '@web-native-js/commons/arr/last.js';\r\nimport _merge from '@web-native-js/commons/obj/merge.js';\r\nimport _even from '@web-native-js/commons/obj/even.js';\r\nimport _copyPlain from '@web-native-js/commons/obj/copyPlain.js';\r\n\r\n/**\r\n * --------------------------\r\n * TOKENIZER\r\n * --------------------------\r\n */\r\n\r\nconst Lexer = class {\r\n\r\n\t/**\r\n\t * Factory method.\r\n\t *\r\n\t * Handles caching.\r\n\t *\r\n\t * @see constructor()\r\n\t */\r\n\tstatic lex(str, delims, options = {}) {\r\n\t\tif (!_isString(str)) {\r\n\t\t\tthrow new Error('Argument1 must be a string!');\r\n\t\t}\r\n\t\tvar copyResult = result => {\r\n\t\t\treturn {\r\n\t\t\t\tdelims: result.delims.slice(),\r\n\t\t\t\toptions: _copyPlain(result.options),\r\n\t\t\t\tnesting: result.nesting.slice(),\r\n\t\t\t\tmaxDepth: result.maxDepth,\r\n\t\t\t\tcomments: result.comments.slice(),\r\n\t\t\t\ttokens: result.tokens.slice(),\r\n\t\t\t\tmatches: result.matches.slice(),\r\n\t\t\t\tmatchesi: _copyPlain(result.matchesi),\r\n\t\t\t};\r\n\t\t};\r\n\t\t// ASK CACHE ---------------------------\r\n\t\tif (Lexer.$cache[str] && options.cache !== false) {\r\n\t\t\tfor (var i = 0; i < Lexer.$cache[str].length; i ++) {\r\n\t\t\t\tvar cached = Lexer.$cache[str][i];\r\n\t\t\t\tif (_even(cached.delims, delims)) {\r\n\t\t\t\t\treturn copyResult(cached);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// FRESH PARSE\t -------------------------------\r\n\t\tvar instance = new Lexer(str, options);\r\n\t\tvar result = instance.lex(delims);\r\n\t\t// SAVE TO CACHE -------------------------------\r\n\t\tif (options.cache !== false) {\r\n\t\t\tLexer.$cache[str] = Lexer.$cache[str] || [];\r\n\t\t\tLexer.$cache[str].push(result);\r\n\t\t}\r\n\t\treturn copyResult(result);\r\n\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Factory method for .split().\r\n\t *\r\n\t * Handles caching.\r\n\t *\r\n\t * @see constructor()\r\n\t */\r\n\tstatic split(str, delims, options) {\r\n\t\treturn Lexer.lex(str, delims, options).tokens;\r\n\t}\r\n\r\n\t/**\r\n\t * Factory method for .match().\r\n\t *\r\n\t * Handles caching.\r\n\t *\r\n\t * @see constructor()\r\n\t */\r\n\tstatic match(str, delims, options) {\r\n\t\treturn Lexer.lex(str, delims, options).matches;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a lexer instance on a string with the given options.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions:\r\n\t * @param string \t\tblocks\t\t\t\tThe strings that begin and end a nested structure\r\n\t * @param number \t\tlimit\t\t\t\tMax results to return\r\n\t * @param string \t\tbackreference\t\tA character like (\\) that prefixes non-delim characters\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tconstructor(str, options) {\r\n\t\tif (!_isString(str)) {\r\n\t\t\tthrow new Error('Lexer requires the first argument to be a string.');\r\n\t\t}\r\n\t\tthis.$str = str;\r\n\t\tthis.$options = options || {};\r\n\t\tif (!this.$options.blocks) {\r\n\t\t\tthis.$options.blocks = Lexer.$blocks;\r\n\t\t}\r\n\t\tif (!this.$options.quotes) {\r\n\t\t\tthis.$options.quotes = Lexer.$quotes;\r\n\t\t}\r\n\t\tif (!this.$options.comments) {\r\n\t\t\tthis.$options.comments = Lexer.$comments;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the instance string on the given delimeters.\r\n\t *\r\n\t * This method supports static calling,\r\n\t * in which case a string is required as the first argument.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return object\r\n\t */\r\n\tlex(delims, options) {\r\n\t\tvar runtime = {\r\n\t\t\tdelims: _arrFrom(delims),\r\n\t\t\toptions: _merge(true, {}, this.$options, options || {}),\r\n\t\t\tnesting: [],\r\n\t\t\tmaxDepth: 0,\r\n\t\t\tcomments: [],\r\n\t\t\ttokens: [],\r\n\t\t\tmatches: [],\r\n\t\t\tmatchesi: {},\r\n\t\t};\r\n\t\t// Iterate over each character, keep track of current row and column (of the returned array)\r\n\t\tthis._evalCharsAt(runtime, 0);\r\n\t\tif (runtime.nesting.length) {\r\n\t\t\tthrow new Error('Error parsing the string: ' + this.$str + '. Unterminated blocks: ' + _flatten(runtime.nesting).join(', ') + '');\r\n\t\t}\r\n\t\t// RETURN NEW ----------------------------------\r\n\t\treturn runtime;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: evaluates and handles the character on the current cursor.\r\n\t * Advances the cursor.\r\n\t *\r\n\t * @param object \truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return void\r\n\t */\r\n\t_evalCharsAt(runtime, i) {\r\n\t\tif (i >= this.$str.length) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar charWidth = 1;\r\n\t\tvar commentTest = {}, quoteTest = {}, nestingTest = {};\r\n\t\t// Quotes inside comments must be ignored\r\n\t\tif (!runtime.openComment) {\r\n\t\t\tquoteTest = this._testQuotes(runtime, i);\r\n\t\t}\r\n\t\t// Comments inside quotes must be ignored\r\n\t\tif (!runtime.openQuote) {\r\n\t\t\tcommentTest = this._testComments(runtime, i);\r\n\t\t}\r\n\t\t// Save comments\r\n\t\tif (runtime.openComment || commentTest.ending) {\r\n\t\t\t// Save only outer comments\r\n\t\t\tif (!runtime.nesting.length && !nestingTest.ending) {\r\n\t\t\t\tvar chars = commentTest.starting || commentTest.ending || this.$str[i];\r\n\t\t\t\tcharWidth = chars.length;\r\n\t\t\t\tthis._push(runtime, chars, 'comments', commentTest.starting);\r\n\t\t\t} else {\r\n\t\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t\t}\r\n\t\t} else if (runtime.openQuote || quoteTest.ending) {\r\n\t\t\t// Yes add quotes\r\n\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t} else if (runtime.options.limit && runtime.matches.length === runtime.options.limit) {\r\n\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t\treturn this._evalCharsAt(runtime, i + 1);\r\n\t\t} else {\r\n\t\t\t// Nesting tags inside comments and quotes have been ignored\r\n\t\t\tnestingTest = this._testNesting(runtime, i);\r\n\t\t\t// ---------------------\r\n\t\t\t// STOP ON THIS CHARACTER...?\r\n\t\t\t// ---------------------\r\n\t\t\tvar nestingTest = this._testNesting(runtime, i);\r\n\t\t\t// STOP CHAR(S)? at top level?\r\n\t\t\tvar stopChar = this._testChars(runtime.options.stopChars || [], runtime, i);\r\n\t\t\tif (!runtime.nesting.length && stopChar !== false) {\r\n\t\t\t\truntime.options.stopChar = stopChar;\r\n\t\t\t\truntime.options.stopCharForward = this.$str.substr(i);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t// ---------------------\r\n\t\t\t// Match and split now...\r\n\t\t\t// ---------------------\r\n\t\t\tif (!runtime.delims.length) {\r\n\t\t\t\t// BLOCK-BASED SPLITTING...\r\n\t\t\t\tif (runtime.nesting.length === 2 && nestingTest.starting) {\r\n\t\t\t\t\truntime.matches.push(null);\r\n\t\t\t\t\tthis._push(runtime, nestingTest.starting);\r\n\t\t\t\t\tcharWidth = nestingTest.starting.length;\r\n\t\t\t\t} else if (!runtime.nesting.length && nestingTest.ending) {\r\n\t\t\t\t\tthis._push(runtime, nestingTest.ending);\r\n\t\t\t\t\tcharWidth = nestingTest.ending.length;\r\n\t\t\t\t\truntime.matches.push(null);\r\n\t\t\t\t} else/*no-nesting flag*/ {\r\n\t\t\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// ---------------------\r\n\t\t\t\t// DELIMS-BASED SPLITTING\r\n\t\t\t\t// ---------------------\r\n\t\t\t\tif (!runtime.nesting.length && !nestingTest.ending) {\r\n\t\t\t\t\t// In case the chars at index 0 is a delim,\r\n\t\t\t\t\t// the resulting split should first have an empty string, instead of undefined\r\n\t\t\t\t\tthis._push(runtime, '');\r\n\t\t\t\t\tvar matchedDelim = this._testChars(runtime.delims, runtime, i);\r\n\t\t\t\t\tif (matchedDelim !== false) {\r\n\t\t\t\t\t\truntime.matches.push(matchedDelim);\r\n\t\t\t\t\t\truntime.matchesi[i] = matchedDelim;\r\n\t\t\t\t\t\tcharWidth = matchedDelim.length || 1;\r\n\t\t\t\t\t\tif (!runtime.options.preserveDelims) {\r\n\t\t\t\t\t\t\t// The current character is a delimiter...\r\n\t\t\t\t\t\t\t// and should not get to appending to the split series down the line\r\n\t\t\t\t\t\t\treturn this._evalCharsAt(runtime, i + (matchedDelim.length || 1));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._push(runtime, matchedDelim || this.$str[i]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar chars = nestingTest.starting || nestingTest.ending || this.$str[i];\r\n\t\t\t\t\tcharWidth = chars.length;\r\n\t\t\t\t\tthis._push(runtime, chars);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._evalCharsAt(runtime, i + charWidth);\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a quote start/end character on the current cursor.\r\n\t *\r\n\t * @param object\truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return object\r\n\t */\r\n\t_testQuotes(runtime, i) {\r\n\t\tvar result = {};\r\n\t\t(runtime.options.quotes || []).forEach(quote => {\r\n\t\t\tif (this.$str.substr(i, 1) === quote) {\r\n\t\t\t\tif (!runtime.openQuote) {\r\n\t\t\t\t\truntime.openQuote = quote;\r\n\t\t\t\t\tresult.starting = quote;\r\n\t\t\t\t} else if (quote === runtime.openQuote) {\r\n\t\t\t\t\truntime.openQuote = false;\r\n\t\t\t\t\tresult.ending = quote;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a comment start/end character on the current cursor.\r\n\t *\r\n\t * @param object\truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return object\r\n\t */\r\n\t_testComments(runtime, i) {\r\n\t\tvar result = {};\r\n\t\t(runtime.options.comments || []).forEach(block => {\r\n\t\t\tif (!runtime.openComment) {\r\n\t\t\t\tvar starting = _first(block);\r\n\t\t\t\tif (this.$str.substr(i).startsWith(starting)) {\r\n\t\t\t\t\truntime.openComment = block;\r\n\t\t\t\t\tresult.starting = starting;\r\n\t\t\t\t}\r\n\t\t\t} else if (_last(block) === _last(runtime.openComment)) {\r\n\t\t\t\tvar ending = _last(block);\r\n\t\t\t\tif (this.$str.substr(i).startsWith(ending)) {\r\n\t\t\t\t\truntime.openComment = false;\r\n\t\t\t\t\tresult.ending = ending;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a nesting start/end character on the current cursor.\r\n\t *\r\n\t * @param object\truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return object\r\n\t */\r\n\t_testNesting(runtime, i) {\r\n\t\tvar result = {};\r\n\t\t(runtime.options.blocks || []).forEach(block => {\r\n\t\t\tvar starting = _first(block);\r\n\t\t\tif (this.$str.substr(i).startsWith(starting)) {\r\n\t\t\t\truntime.nesting = runtime.nesting.concat([block]);\r\n\t\t\t\tresult.starting = starting;\r\n\t\t\t} else if (runtime.nesting.length && _last(block) === _last(_last(runtime.nesting))) {\r\n\t\t\t\tvar ending = _last(block);\r\n\t\t\t\tif (this.$str.substr(i).startsWith(ending)) {\r\n\t\t\t\t\truntime.nesting = runtime.nesting.slice(0, -1);\r\n\t\t\t\t\tresult.ending = ending;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\truntime.maxDepth = Math.max(runtime.maxDepth, runtime.nesting.length);\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a delimiter or stop character on the current cursor.\r\n\t *\r\n\t * @param array\t\ttestList\r\n\t * @param object \truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\t_testChars(testList, runtime, i) {\r\n\t\tfor (var k = 0; k < testList.length; k ++) {\r\n\t\t\tvar test = testList[k];\r\n\t\t\tif (_isFunction(test)) {\r\n\t\t\t\tvar ret = test(this.$str.substr(0, i), this.$str.substr(i));\r\n\t\t\t\tif (ret !== false) {\r\n\t\t\t\t\treturn ret;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (runtime.options.useRegex) {\r\n\t\t\t\tvar m = this.$str.substr(i).match(new RegExp('^' + test, runtime.options.useRegex !== true ? runtime.options.useRegex : ''));\r\n\t\t\t\tif (m) {\r\n\t\t\t\t\treturn m[0];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ((!runtime.options.ci && this.$str.substr(i, test.length) === test)\r\n\t\t\t|| (runtime.options.ci && this.$str.substr(i, test.length).toLowerCase() === test.toLowerCase())) {\r\n\t\t\t\treturn test;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Expr helper: pushes a character or set of characters into the current split series.\r\n\t *\r\n\t * @param object \truntime\r\n\t * @param string\tchars\r\n\t * @param string\ttarget\r\n\t * @param bool\t\tisNewSeries\r\n\t *\r\n\t * @return void\r\n\t */\r\n\t_push(runtime, chars, target = 'tokens', isNewSeries = false) {\r\n\t\tvar splitSeries = runtime.matches.length;\r\n\t\tif (_isUndefined(runtime.tokens[splitSeries])) {\r\n\t\t\truntime.tokens[splitSeries] = '';\r\n\t\t}\r\n\r\n\t\tif (target === 'comments') {\r\n\t\t\tif (!runtime.tokens[splitSeries].comments) {\r\n\t\t\t\truntime.tokens[splitSeries] = new String(runtime.tokens[splitSeries]);\r\n\t\t\t\truntime.tokens[splitSeries].comments = [];\r\n\t\t\t}\r\n\t\t\tvar splitSeries2 = runtime.tokens[splitSeries].comments.length - (!runtime.tokens[splitSeries].comments.length || isNewSeries ? 0 : 1);\r\n\t\t\truntime.tokens[splitSeries].comments[splitSeries2] = (runtime.tokens[splitSeries].comments[splitSeries2] || '') + chars;\r\n\t\t} else {\r\n\t\t\tvar comments = runtime.tokens[splitSeries].comments;\r\n\t\t\truntime.tokens[splitSeries] = new String(runtime.tokens[splitSeries] + chars);\r\n\t\t\truntime.tokens[splitSeries].comments = comments;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Splits the instance string on the given delimeters and returns the tokens.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tsplit(str, delims, options) {\r\n\t\treturn this.lex(delims, options).tokens;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Splits the instance string on the given delimeters and returns the matches.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions:\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tmatch(str, delims, options) {\r\n\t\treturn this.lex(delims, options).matches;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Parses the instance string on the given delimeters using regex.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return object\r\n\t */\r\n\tregParse(delims, options) {\r\n\t\treturn this.lex(delims, _merge({useRegex: true}, options || {}));\r\n\t}\r\n\t\r\n\t/**\r\n\t * Splits the instance string on the given delimeters using regex; returns the tokens.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tregSplit(delims, options) {\r\n\t\treturn this.regParse(delims, options).tokens;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Matches the instance string on the given delimeters using regex; returns the matches.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tregMatch(delims, options) {\r\n\t\treturn this.regParse(delims, options).matches;\r\n\t}\r\n};\r\n\r\n/**\r\n * @var array\r\n */\r\nLexer.$blocks = [['(', ')'], ['[', ']'], ['{', '}'],];\r\n\r\n/**\r\n * @var array\r\n */\r\nLexer.$quotes = ['\"', \"'\", '`',];\r\n\r\n/**\r\n * @var array\r\n */\r\nLexer.$comments = [['/*', '*/'], ['//', \"\\n\"],];\r\n\r\n/**\r\n * @var object\r\n */\r\nLexer.$cache = {};\r\n\r\n/**\r\n * @export\r\n */\r\nexport default Lexer;\r\n\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeObject from '@web-native-js/commons/js/isTypeObject.js';\r\nimport _isUndefined from '@web-native-js/commons/js/isUndefined.js';\r\nimport _isFunction from '@web-native-js/commons/js/isFunction.js';\r\nimport _isClass from '@web-native-js/commons/js/isClass.js';\r\nimport _isString from '@web-native-js/commons/js/isString.js';\r\nimport _isNumber from '@web-native-js/commons/js/isNumber.js';\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default class Contexts {\r\n\r\n\t/**\r\n\t * Creates a new context stack.\r\n\t *\r\n\t * @param object\t \tparams\r\n\t * @param int\t\t \ttype\r\n\t *\r\n\t * @return Contexts\r\n\t */\r\n\tconstructor(stack, type = 1) {\r\n\t\tthis.stack = stack;\r\n\t\tthis.type = type;\r\n\t\tif (!('main' in this.stack)) {\r\n\t\t\tthrow new Error('A \"main\" context must be provided!');\r\n\t\t}\r\n\t\tif (this.stack.super) {\r\n\t\t\tthis.stack.super = Contexts.create(this.stack.super);\r\n\t\t}\r\n\t\tthis.stack.local = this.stack.local || {};\r\n\t\tthis.stack.$local = this.stack.$local || {};\r\n\t}\r\n\r\n\t/**\r\n\t * Binds a callback to changes\r\n\t * that happen in the contexts.\r\n\t *\r\n\t * @param string|arrat \t\tprops\r\n\t * @param function\t\t \tcallback\r\n\t * @param object\t\t \toptions\r\n\t * @param object\t\t \ttrap\r\n\t *\r\n\t * @return Contexts\r\n\t */\r\n\tobserve(props, callback, options, trap = {}) {\r\n\t\tif (trap.observe && props.length) {\r\n\t\t\t// Observe super\r\n\t\t\t// but changes will be blocked if all the affected props\r\n\t\t\t// are also in main.\r\n\t\t\tif (this.stack.super) {\r\n\t\t\t\tthis.stack.super.observe(props, (a, b, e) => {\r\n\t\t\t\t\tif (e.fields.filter(prop => !_has(this.stack.local, prop, trap) && !_has(this.stack.main, prop, trap)).length) {\r\n\t\t\t\t\t\treturn callback(a, b, e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, options, trap);\r\n\t\t\t}\r\n\t\t\t// Observe main, for sure\r\n\t\t\tif (_isTypeObject(this.stack.main)) {\r\n\t\t\t\ttrap.observe(this.stack.main, props, (a, b, e) => {\r\n\t\t\t\t\tif (e.fields.filter(prop => !_has(this.stack.local, prop, trap)).length) {\r\n\t\t\t\t\t\treturn callback(a, b, e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, options);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * Unbinds callbacks previously bound\r\n\t * with observe()\r\n\t *\r\n\t * @param string|arrat \t\tprops\r\n\t * @param function\t\t \tcallback\r\n\t * @param object\t\t \toptions\r\n\t * @param object\t\t \ttrap\r\n\t *\r\n\t * @return Contexts\r\n\t */\r\n\tunobserve(props, callback, options, trap = {}) {\r\n\t\tif (trap.unobserve) {\r\n\t\t\tif (this.stack.super) {\r\n\t\t\t\tthis.stack.super.unobserve(props, callback, options, trap);\r\n\t\t\t}\r\n\t\t\t// Observe main, for sure\r\n\t\t\tif (this.stack.main) {\r\n\t\t\t\ttrap.unobserve(this.stack.main, props, callback, options);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * Tries the handler on the different contexts in the stack.\r\n\t *\r\n\t * @param string|number \tprop\r\n\t * @param function\t\t \tcallback\r\n\t * @param function\t\t \tfinal\r\n\t *\r\n\t * @return Contexts\r\n\t */\r\n\thandle(prop, callback, final, level = 0) {\r\n\t\tvar callMain = () => {\r\n\t\t\treturn callback(this.stack.main, null, () => {\r\n\t\t\t\tif (this.stack.super) {\r\n\t\t\t\t\treturn this.stack.super.handle(prop, callback, final, level + 1);\r\n\t\t\t\t}\r\n\t\t\t\tif (final) {\r\n\t\t\t\t\treturn final();\r\n\t\t\t\t}\r\n\t\t\t}, level);\r\n\t\t};\r\n\t\t// Normally, we would begin with local...\r\n\t\t// but no if...\r\n\t\tif (prop === 'toString' && this.stack.local.toString === Object.prototype.toString) {\r\n\t\t\treturn callMain();\r\n\t\t}\r\n\t\t// Conditions are right, we begin with local\r\n\t\treturn callback(this.stack.local, this.stack.$local, callMain, level);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a property's value from the first possessing context.\r\n\t *\r\n\t * @param string|number prop\r\n\t * @param object\t\ttrap\r\n\t * @param bool\t\t\tbindThis\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\tget(prop, trap = {}, bindThis = true) {\r\n\t\tif (prop instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop = prop + '';\r\n\t\t}\r\n\t\treturn this.handle(prop, (contxtObj, contxtMeta, advance, level) => {\r\n\t\t\tvar val = _get(contxtObj, prop, trap);\r\n\t\t\t// asking first mught not go well generally && _has(this[i], prop, trap)\r\n\t\t\tif (!_isUndefined(val) || _has(contxtObj, prop, trap)) {\r\n\t\t\t\tif (_isFunction(val) && !_isClass(val) && bindThis) {\r\n\t\t\t\t\treturn val.bind(contxtObj);\r\n\t\t\t\t}\r\n\t\t\t\treturn val;\r\n\t\t\t}\r\n\t\t\treturn advance();\r\n\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Updates a property's value from the first possessing context.\r\n\t * Or adds a new context to set the property.\r\n\t *\r\n\t * @param string|number prop\r\n\t * @param mixed\t\t\tval\r\n\t * @param object\t\ttrap\r\n\t * @param bool\t\t\tinitKeyword\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tset(prop, val, trap = {}, initKeyword = false) {\r\n\t\tif (this.type === 2 && initKeyword === 'var' && this.stack.super) {\r\n\t\t\treturn this.stack.super.set(prop, val, trap, initKeyword);\r\n\t\t}\r\n\t\tif (prop instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop = prop + '';\r\n\t\t}\r\n\t\tconst _set = (cntxt, prop, val, trap) => {\r\n\t\t\tif (trap.set) {\r\n\t\t\t\treturn trap.set(cntxt, prop, val);\r\n\t\t\t}\r\n\t\t\tcntxt[prop] = val;\r\n\t\t\treturn true;\r\n\t\t};\r\n\t\treturn this.handle(initKeyword ? true : prop, (contxtObj, localContxtMeta, advance) => {\r\n\t\t\t// Whatever the level of localContext...\r\n\t\t\tif (localContxtMeta && localContxtMeta[prop] === 'const') {\r\n\t\t\t\tthrow new Error('CONST ' + prop + ' cannot be modified!');\r\n\t\t\t}\r\n\t\t\t// Set this locally, we wont be getting to advance()\r\n\t\t\tif (initKeyword) {\r\n\t\t\t\tif (!['var', 'let', 'const'].includes(initKeyword)) {\r\n\t\t\t\t\tthrow new Error('Unrecognized declarator: ' + initKeyword + '!');\r\n\t\t\t\t}\r\n\t\t\t\tlocalContxtMeta[prop] = initKeyword;\r\n\t\t\t\treturn _set(contxtObj, prop, val, trap);\r\n\t\t\t}\r\n\t\t\t// For any other contex, it must already exists\r\n\t\t\tif (_has(contxtObj, prop, trap)) {\r\n\t\t\t\treturn _set(contxtObj, prop, val, trap);\r\n\t\t\t}\r\n\t\t\treturn advance();\r\n\t\t}, () => {throw new Error('\"' + prop + '\" is undefined!');});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Deletes a property from the first possessing context.\r\n\t *\r\n\t * @param string|number prop\r\n\t * @param object\t\ttrap\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tdel(prop, trap = {}) {\r\n\t\tif (prop instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop = prop + '';\r\n\t\t}\r\n\t\treturn this.handle(prop, (contxtObj, contxtMeta, advance) => {\r\n\t\t\tif (_has(contxtObj, prop, trap)) {\r\n\t\t\t\tif (contxtMeta) {\r\n\t\t\t\t\tdelete contxtMeta[prop];\r\n\t\t\t\t}\r\n\t\t\t\tif (trap.deleteProperty || trap.del) {\r\n\t\t\t\t\treturn (trap.deleteProperty || trap.del)(contxtObj, prop);\r\n\t\t\t\t}\r\n\t\t\t\tdelete contxtObj[prop];\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn advance();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Tests if a property exists in any context.\r\n\t *\r\n\t * @param string|number prop\r\n\t * @param string|number prop2\r\n\t * @param object\t\ttrap\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\thas(prop, prop2, trap = {}) {\r\n\t\tif (prop instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop = prop + '';\r\n\t\t}\r\n\t\tif (prop2 instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop2 = prop2 + '';\r\n\t\t}\r\n\t\treturn this.handle(prop, (contxtObj, contxtMeta, advance) => {\r\n\t\t\tif (_has(contxtObj, prop, trap)) {\r\n\t\t\t\tvar contextObj2 = _get(contxtObj, prop, trap);\r\n\t\t\t\treturn _has(contextObj2, prop2, trap);\r\n\t\t\t}\r\n\t\t\treturn advance();\r\n\t\t}, () => {throw new Error('\"' + prop + '\" is undefined!');});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Tests if a property exists in any context.\r\n\t *\r\n\t * @param string|number prop\r\n\t * @param array\t\t\targs\r\n\t * @param object\t\ttrap\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\texec(prop, args, trap = {}) {\r\n\t\tif (prop instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop = prop + '';\r\n\t\t}\r\n\t\treturn this.handle(prop, (contxtObj, contxtMeta, advance) => {\r\n\t\t\tvar fn = _get(contxtObj, prop, trap);\r\n\t\t\tif (!_isUndefined(fn) || _has(contxtObj, prop, trap)) {\r\n\t\t\t\tif (!_isFunction(fn)) {\r\n\t\t\t\t\tif (trap.exec) {\r\n\t\t\t\t\t\treturn trap.exec(contxtObj, prop, args);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthrow new Error('\"' + prop + '\" is not a function! (Called on type: ' + typeof contxtObj + '.)');\r\n\t\t\t\t}\r\n\t\t\t\tif (trap.apply) {\r\n\t\t\t\t\treturn trap.apply(fn, contxtObj, args);\r\n\t\t\t\t}\r\n\t\t\t\treturn fn.apply(contxtObj, args);\r\n\t\t\t}\r\n\t\t\treturn advance();\r\n\t\t}, () => {\r\n\t\t\tif (trap.execUnknown) {\r\n\t\t\t\treturn trap.execUnknown(this, prop, args);\r\n\t\t\t}\r\n\t\t\tthrow new Error('\"' + prop + '()\" is undefined!');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Factory method for making a Contexts instance.\r\n\t *\r\n\t * @param array|object \tcntxt\r\n\t *\r\n\t * @return Contexts\r\n\t */\r\n\tstatic create(cntxt) {\r\n\t\treturn cntxt instanceof Contexts ? cntxt : new Contexts({\r\n\t\t\tmain: cntxt,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nconst _get = (cntxt, prop, trap) => trap.get && _isTypeObject(cntxt) ? trap.get(cntxt, prop) \r\n\t: (_isTypeObject(cntxt) || _isString(cntxt) || _isNumber(cntxt) ? cntxt[prop] : undefined);;\r\n\r\nconst _has = (cntxt, prop, trap) => trap.has && _isTypeObject(cntxt) ? trap.has(cntxt, prop) : (\r\n\t_isTypeObject(cntxt) && cntxt ? prop in cntxt : !_isUndefined(cntxt[prop])\r\n);","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeFunction from './isTypeFunction.js';\r\n\r\n/**\r\n * Tells if val is of type \"class\".\r\n *\r\n * @param object \t\tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isTypeFunction(val) && /^class\\s?/.test(Function.prototype.toString.call(val));\r\n};\r\n","\r\n/**\r\n * Tells if the string is warapped with the given opening and closing tags.\r\n *\r\n * @param  string  subject\r\n * @param  string  openingTag\r\n * @param  string  closingTag\r\n *\r\n * @return bool\r\n */\r\nexport default function(subject, openingTag, closingTag) {\r\n\treturn subject.startsWith(openingTag) && subject.endsWith(closingTag);\r\n};\r\n","\r\n/**\r\n * Return the remainder of a string after a given value.\r\n *\r\n * @param  string  subject\r\n * @param  string  search\r\n * @param  bool\t   afterLast\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, search, afterLast = false) {\r\n\tif (search == '') {\r\n\t\treturn subject;\r\n\t}\r\n\tvar pos = afterLast ? subject.lastIndexOf(search) : subject.indexOf(search);\r\n\tif (pos === -1) {\r\n\t\treturn '';\r\n\t}\r\n\treturn subject.substr(pos + search.length);\r\n};\r\n","\r\n/**\r\n * Return the part of a string before a given value.\r\n *\r\n * @param  string  subject\r\n * @param  string  search\r\n * @param  bool\t   beforeLast\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, search, beforeLast = false) {\r\n\tif (search == '') {\r\n\t\treturn subject;\r\n\t}\r\n\tvar pos = beforeLast ? subject.lastIndexOf(search) : subject.indexOf(search);\r\n\tif (pos === -1) {\r\n\t\treturn subject;\r\n\t}\r\n\treturn subject.substr(0, pos);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _after from './after.js';\r\nimport _beforeLast from './beforeLast.js';\r\n\r\n/**\r\n * Returns the string without the given opening and closing tags.\r\n *\r\n * @param  string  subject\r\n * @param  string  openingTag\r\n * @param  string  closingTag\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, openingTag, closingTag) {\r\n\treturn _beforeLast(_after(subject, openingTag), closingTag);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _before from './before.js';\r\n\r\n/**\r\n * Return the part of a string before last occurence of a given value.\r\n *\r\n * @param  string  subject\r\n * @param  string  search\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, search) {\r\n\treturn _before(subject, search, true);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@web-native-js/commons/str/wrapped.js';\r\nimport _unwrap from '@web-native-js/commons/str/unwrap.js';\r\nimport AbstractionInterface from './AbstractionInterface.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Abstraction class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Abstraction = class extends AbstractionInterface {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(expr) {\r\n\t\tsuper();\r\n\t\tthis.expr = expr;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, trap = {}) {\r\n\t\treturn this.expr.eval(context, trap);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn '(' + this.expr.toString(context) + ')';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Abstraction) {\r\n\t\tif (_wrapped(expr, '(', ')') && !Lexer.match(expr, [' ']).length) {\r\n\t\t\treturn new Static(\r\n\t\t\t\tparseCallback(_unwrap(expr, '(', ')'))\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Abstraction;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ArrInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'ArrayType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@web-native-js/commons/str/wrapped.js';\r\nimport _unwrap from '@web-native-js/commons/str/unwrap.js';\r\nimport ArrInterface from './ArrInterface.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Array utils\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Arr = class extends ArrInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(exprs) {\r\n\t\tsuper();\r\n\t\tthis.exprs = exprs || [];\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tinherit(Super) {\r\n\t\tif (Super instanceof ArrInterface) {\r\n\t\t\tvar newExprs = Super.exprs.filter(exprA => {\r\n\t\t\t\treturn this.exprs.reduce((uniqueSoFar, exprB) => uniqueSoFar && !exprA.even(exprB), true);\r\n\t\t\t});\r\n\t\t\tthis.exprs = newExprs.concat(this.exprs);\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, trap = {}) {\r\n\t\treturn this.exprs.map(expr => expr.eval(context, trap));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn '[' + this.exprs.map(expr => expr.toString(context)).join(', ') + ']';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Arr) {\r\n\t\tif (_wrapped(expr, '[', ']') && !Lexer.match(expr.trim(), [' ']).length) {\r\n\t\t\tvar splits = Lexer.split(_unwrap(expr, '[', ']'), [','])\r\n\t\t\t\t.map(n => n.trim()).filter(n => n).map(expr => parseCallback(expr));\r\n\t\t\treturn new Static(splits);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @export\r\n */\r\nexport default Arr;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@web-native-js/commons/str/wrapped.js';\r\nimport _unwrap from '@web-native-js/commons/str/unwrap.js';\r\nimport ArgumentsInterface from './ArgumentsInterface.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Arguments class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Arguments = class extends ArgumentsInterface {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(list = []) {\r\n\t\tsuper();\r\n\t\tthis.list = list;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, trap = {}) {\r\n\t\treturn this.list.map(arg => arg.eval(context, trap));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn '(' + this.list.map(arg => arg.toString(context)).join(', ') + ')';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Arguments) {\r\n\t\tvar args; expr = expr.trim();\r\n\t\tif (_wrapped(expr, '(', ')') && !Lexer.match(expr, [' ']).length) {\r\n\t\t\treturn new Static(\r\n\t\t\t\tLexer.split(_unwrap(expr, '(', ')'), [',']).map(arg => parseCallback(arg.trim()))\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Arguments;\r\n","\r\n/**\r\n * Returns a list of unique items.\r\n *\r\n * @param array\t \t\t\t\tarr\r\n *\t *\r\n * @return array\r\n */\r\nexport default function(arr) {\r\n\tconst distinct = (value, index, self) => {\r\n\t\treturn self.indexOf(value) === index;\r\n\t};\r\n\treturn arr.filter(distinct);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * AssertionInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'AssertionExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _first from '@web-native-js/commons/arr/first.js';\r\nimport _flatten from '@web-native-js/commons/arr/flatten.js';\r\nimport _unique from '@web-native-js/commons/arr/unique.js';\r\nimport AssertionInterface from './AssertionInterface.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Assertion class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Assertion = class extends AssertionInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(exprs, logic) {\r\n\t\tsuper();\r\n\t\tthis.exprs = exprs;\r\n\t\tthis.logic = logic;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\t eval(context = null, trap = {}) {\r\n\t\tif (this.logic === '!') {\r\n\t\t\treturn !_first(this.exprs).eval(context, trap);\r\n\t\t}\r\n\t\tvar operators = _flatten(Assertion.operators);\r\n\t\tvar logic = (this.logic || '').trim().toUpperCase();\r\n\t\tvar isOr = logic === (Assertion.operators.or || '').trim().toUpperCase();\r\n\t\tvar isNor = logic === (Assertion.operators.nor || '').trim().toUpperCase();\r\n\t\tvar isAnd = logic === (Assertion.operators.and || '').trim().toUpperCase();\r\n\t\tvar isNand = logic === (Assertion.operators.nand || '').trim().toUpperCase();\r\n\t\tvar lastResult = true, trues = 0;\r\n\t\tfor(var i = 0; i < this.exprs.length; i ++) {\r\n\t\t\tlastResult = this.exprs[i].eval(context, trap);\r\n\t\t\tif (isAnd && !lastResult) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (isNand && !lastResult) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tif (isOr && lastResult) {\r\n\t\t\t\treturn lastResult;\r\n\t\t\t}\r\n\t\t\ttrues += lastResult ? 1 : 0;\r\n\t\t}\r\n\t\tif (isOr) {\r\n\t\t\t// Which is falsey,\r\n\t\t\t// by virtue of getting here\r\n\t\t\treturn lastResult;\r\n\t\t}\r\n\t\tif (isAnd || isNand) {\r\n\t\t\t// For AND and NAND, all entries must be true by now,\r\n\t\t\t// by virtue of getting here.\r\n\t\t\t// For AND, this means true; for NAND, false\r\n\t\t\treturn isAnd;\r\n\t\t}\r\n\t\t// For NOR, all entries need to be false\r\n\t\treturn isNor && trues === 0;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\t toString(context = null) {\r\n\t\tif (this.logic === '!') {\r\n\t\t\treturn '!' + _first(this.exprs).toString(context);\r\n\t\t}\r\n\t\treturn this.exprs.map(expr => expr.toString(context)).join(' ' + this.logic + ' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Assertion) {\r\n\t\tif (expr.startsWith('!')) {\r\n\t\t\treturn new Static(\r\n\t\t\t\t[parseCallback(expr.substr(1))],\r\n\t\t\t\t'!'\r\n\t\t\t);\r\n\t\t}\r\n\t\tvar parse = Lexer.lex(expr, _flatten(Static.operators));\r\n\t\tif (parse.tokens.length > 1) {\r\n\t\t\tvar logic = _unique(parse.matches);\r\n\t\t\tif (logic.length > 1) {\r\n\t\t\t\tthrow new Error('\"AND\" and \"OR\" logic cannot be asserted in the same expression: ' + expr + '!');\r\n\t\t\t}\r\n\t\t\treturn new Static(\r\n\t\t\t\tparse.tokens.map(expr => parseCallback(expr.trim())),\r\n\t\t\t\t_first(logic)\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nAssertion.operators = {\r\n\tand: '&&',\r\n\tor: '||',\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Assertion;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * AssignmentInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'AssignmentExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _last from '@web-native-js/commons/arr/last.js';\r\nimport _before from '@web-native-js/commons/str/before.js';\r\nimport _after from '@web-native-js/commons/str/after.js';\r\nimport _isUndefined from '@web-native-js/commons/js/isUndefined.js';\r\nimport AssignmentInterface from './AssignmentInterface.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport Contexts from '../Contexts.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Assignment class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Assignment = class extends AssignmentInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(initKeyword, reference, val, operator = '=') {\r\n\t\tsuper();\r\n\t\tthis.initKeyword = initKeyword;\r\n\t\tthis.reference = reference;\r\n\t\tthis.val = val;\r\n\t\tthis.operator = operator;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, trap = {}) {\r\n\t\tvar reference = this.reference.getEval(context, trap);\r\n\t\tvar val = this.val.eval(context, trap);\r\n\t\tif (!_isUndefined(reference.context) && !_isUndefined(reference.name)) {\r\n\t\t\treturn Contexts.create(reference.context).set(reference.name, val, trap, this.initKeyword);\r\n\t\t}\r\n\t\tthrow new Error('\"' + this + '\" is undefined!');\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn (this.initKeyword ? this.initKeyword + ' ' : '')\r\n\t\t\t+ [this.reference.toString(context), this.operator, this.val.toString(context)].join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Assignment) {\r\n\t\tvar parse = Lexer.lex(expr, Static.operators);\r\n\t\tif (parse.tokens.length === 2) {\r\n\t\t\tvar initKeyword, reference = parse.tokens.shift().trim(), val = parse.tokens.shift().trim();\r\n\t\t\tif (['var', 'let', 'const'].includes(_before(reference, ' '))) {\r\n\t\t\t\tinitKeyword = _before(reference, ' ');\r\n\t\t\t\treference = _after(reference, ' ').trim();\r\n\t\t\t}\r\n\t\t\tif (!((reference = parseCallback(reference, null, {lodge: false})) instanceof ReferenceInterface) \r\n\t\t\t|| !(val = parseCallback(val))) {\r\n\t\t\t\tthrow new Error('Invalid assignment expression: ' + expr);\r\n\t\t\t}\r\n\t\t\treturn new Static(initKeyword, reference, val, parse.matches[0].trim());\r\n\t\t}\r\n\t}\r\n};\t\r\n\r\n/**\r\n * @prop array\r\n */\r\nAssignment.operators = [' = '];\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Assignment;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * BlockInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Block'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ReturnInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'ReturnDirective'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _unique from '@web-native-js/commons/arr/unique.js';\r\nimport _before from '@web-native-js/commons/str/before.js';\r\nimport _flatten from '@web-native-js/commons/arr/flatten.js';\r\nimport BlockInterface from './BlockInterface.js';\r\nimport ReturnInterface from './ReturnInterface.js';\r\nimport Contexts from '../Contexts.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Block class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Block extends BlockInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(stmts, delim) {\r\n\t\tsuper();\r\n\t\tthis.stmts = stmts || [];\r\n\t\tthis.delim = delim;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, trap = {}) {\r\n\t\t// Current!\r\n\t\tcontext = Contexts.create(context);\r\n\t\t// Stringifies JSEN vars\r\n\t\tvar stringifyEach = list => _unique(list.map(expr => _before(_before(expr.toString(), '['), '(')));\r\n\r\n\t\tvar results = [];\r\n\t\tfor (var i = 0; i < this.stmts.length; i ++) {\r\n\t\t\tvar stmt = this.stmts[i];\r\n\t\t\tif (stmt instanceof ReturnInterface) {\r\n\t\t\t\treturn stmt.eval(context, trap);\r\n\t\t\t}\r\n\t\t\tresults[i] = stmt.eval(context, trap);\r\n\t\t\t// Lets be called...\r\n\t\t\tvar props = stringifyEach(stmt.meta.vars);\r\n\t\t\t//if (props.length)\r\n\t\t\t(function(stmt, props, prevContext) {\r\n\t\t\t\t// Prev?\r\n\t\t\t\tif (prevContext) {\r\n\t\t\t\t\t// Lets be called...\r\n\t\t\t\t\tprevContext.unobserve(props, null/** regardless callback */, {\r\n\t\t\t\t\t\ttags: ['#block', stmt],\r\n\t\t\t\t\t}, trap);\r\n\t\t\t\t}\r\n\t\t\t\tcontext.observe(props, (a, b, e) => {\r\n\t\t\t\t\tvar evalReturn = stmt.eval(context, trap);\r\n\t\t\t\t\t// If the result of this evaluation is false,\r\n\t\t\t\t\t// e.stopPropagation will be called and subsequent expressions\r\n\t\t\t\t\t// will not be evaluated. So we must not allow false to be returned.\r\n\t\t\t\t\t// All expressions are meant to be evaluated in parallel, independent of each other.\r\n\t\t\t\t\tif (evalReturn !== false) {\r\n\t\t\t\t\t\treturn evalReturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}, {data: false, tags: ['#block', stmt]}, trap);\r\n\t\t\t})(stmt, props, this.prevContext);\r\n\t\t}\r\n\t\tthis.prevContext = context;\r\n\t\treturn results;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn this.stmts.map(stmt => stmt.toString(context)).join(this.delim);\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Block) {\r\n\t\tvar parse = Lexer.lex(expr + ';', _flatten(Static.operators).concat([(a, b) => {\r\n\t\t\t// Cases of code blocks that won't end in \";\"\r\n\t\t\tif (a.endsWith('}') && !b.trim().startsWith('else')) {\r\n\t\t\t\treturn '';\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}]));\r\n\t\tif (parse.matches.length) {\r\n\t\t\treturn new Static(\r\n\t\t\t\tparse.tokens.map(stmt => parseCallback(stmt.trim())).filter(a => a),\r\n\t\t\t\tparse.matches[0].trim()\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop array\r\n */\r\nBlock.operators = [\r\n\t';',\r\n\t\"\\r\\n\",\r\n];\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * BoolInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'BooleanType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Lexer from '../Lexer.js';\r\nimport BoolInterface from './BoolInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Bool (boolean) class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Bool = class extends BoolInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(state) {\r\n\t\tsuper();\r\n\t\tthis.state = state;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval() {\r\n\t\treturn this.state.toLowerCase().trim() === 'true';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.state;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Bool) {\r\n\t\tvar expr = expr.toLowerCase().trim();\r\n\t\tif (expr === 'true' || expr === 'false') {\r\n\t\t\treturn new Static(expr);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Bool;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isUndefined from '@web-native-js/commons/js/isUndefined.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport CallInterface from './CallInterface.js';\r\nimport Arguments from './Arguments.js';\r\nimport Contexts from '../Contexts.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Call class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Call = class extends CallInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(reference, args) {\r\n\t\tsuper();\r\n\t\tthis.reference = reference;\r\n\t\tthis.args = args;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, trap = {}) {\r\n\t\t\tvar reference = this.reference.getEval(context, trap);\r\n\t\t\tvar args = this.args.eval(context, trap);\r\n\t\t\tif (!_isUndefined(reference.context) && !_isUndefined(reference.name)) {\r\n\t\t\t\treturn Contexts.create(reference.context).exec(reference.name, args, trap);\r\n\t\t\t}\r\n\t\ttry {\r\n\t\t} catch(e) {\r\n\t\t\tthrow new Error('[Execution Error][' + this + ']: ' + e.message);\r\n\t\t}\r\n\t\tthrow new Error('\"' + this + '\" is undefined!');\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn this.reference.toString(context) + this.args.toString(context);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Call) {\r\n\t\tif (!expr.startsWith('(') && expr.endsWith(')') && !Lexer.match(expr, [' ']).length) {\r\n\t\t\tvar tokens = Lexer.split(expr, []);\r\n\t\t\tvar reference, args = tokens.pop();\r\n\t\t\tif (!((reference = parseCallback(tokens.join(''), null, {lodge: false})) instanceof ReferenceInterface) \r\n\t\t\t|| !(args = parseCallback(args, [Arguments]))) {\r\n\t\t\t\tthrow new Error('Invalid call directive: ' + expr);\r\n\t\t\t}\r\n\t\t\treturn new Static(reference, args);\r\n\t\t}\r\n\t}\r\n};\t\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Call;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ComparisonInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'ComparisonExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _flatten from '@web-native-js/commons/arr/flatten.js';\r\nimport _first from '@web-native-js/commons/arr/first.js';\r\nimport _last from '@web-native-js/commons/arr/last.js';\r\nimport _difference from '@web-native-js/commons/arr/difference.js';\r\nimport _isArray from '@web-native-js/commons/js/isArray.js';\r\nimport _isObject from '@web-native-js/commons/js/isObject.js';\r\nimport _isString from '@web-native-js/commons/js/isString.js';\r\nimport _each from '@web-native-js/commons/obj/each.js';\r\nimport ComparisonInterface from './ComparisonInterface.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Comparison class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Comparison = class extends ComparisonInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(operand1, operand2, operator) {\r\n\t\tsuper();\r\n\t\tthis.operand1 = operand1;\r\n\t\tthis.operand2 = operand2;\r\n\t\tthis.operator = operator;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, trap = {}) {\r\n\t\treturn Comparison.compare(\r\n\t\t\tthis.operand1.eval(context, trap), \r\n\t\t\tthis.operand2.eval(context, trap), \r\n\t\t\tthis.operator\r\n\t\t);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn [\r\n\t\t\tthis.operand1.toString(context), \r\n\t\t\tthis.operator, \r\n\t\t\tthis.operand2.toString(context)\r\n\t\t].join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Comparison) {\r\n\t\tvar operators = _flatten(Static.operators).map(oper => ' ' + oper + ' ');\r\n\t\tvar parse = Lexer.lex(expr, operators);\r\n\t\tif (parse.tokens.length > 1) {\r\n\t\t\tif (parse.tokens.length > 2) {\r\n\t\t\t\tthrow new Error('Malformed \"Comparison\" expression: ' + expr + '!');\r\n\t\t\t}\r\n\t\t\treturn new Static(\r\n\t\t\t\tparseCallback(_first(parse.tokens).trim()),\r\n\t\t\t\tparseCallback(_last(parse.tokens).trim()),\r\n\t\t\t\tparse.matches[0].trim()\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * -------------------------------------------------------\r\n\t */\r\n\t \r\n\t/**\r\n\t * Use the operator type to compare the two operands\r\n\t *\r\n\t * @param mixed\t\toperand1\t\t\r\n\t * @param mixed\t\toperand2\t\t\r\n\t * @param string \toperator\t\t\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tstatic compare(operand1, operand2, operator = '==') {\r\n\t\tif (_flatten(Comparison.operators).indexOf(operator) === -1) {\r\n\t\t\tthrow new Error('The operator \"' + operator + '\" is not recognized.');\r\n\t\t}\r\n\t\tswitch(operator) {\r\n\t\t\tcase '===':\r\n\t\t\t\treturn operand1 === operand2;\r\n\t\t\tcase '==':\r\n\t\t\tcase '=':\r\n\t\t\t\treturn operand1 == operand2;\r\n\t\t\tcase '>':\r\n\t\t\t\treturn operand1 > operand2;\r\n\t\t\tcase '<':\r\n\t\t\t\treturn operand1 < operand2;\r\n\t\t\tcase '>=':\r\n\t\t\t\treturn operand1 >= operand2;\r\n\t\t\tcase '<=':\r\n\t\t\t\treturn operand1 <= operand2;\r\n\t\t\tcase '!=':\r\n\t\t\t\treturn operand1 != operand2;\r\n\t\t\tcase '!==':\r\n\t\t\t\treturn operand1 !== operand2;\r\n\t\t\tcase '^=':\r\n\t\t\t\treturn _isString(operand1) && operand1.startsWith(operand2);\r\n\t\t\tcase '$=':\r\n\t\t\t\treturn _isString(operand1) && operand1.endsWith(operand2);\r\n\t\t\tcase '*=':\r\n\t\t\t\t// Contains\r\n\t\t\t\treturn _isArray(operand2) || _isString(operand2) ? operand1.indexOf(operand2) > -1 : false;\r\n\t\t\tcase '~=':\r\n\t\t\t\t// Contains word\r\n\t\t\t\treturn _isString(operand1) && _isString(operand2) && (' ' + operand1 + ' ').indexOf(' ' + operand2 + ' ') > -1;\r\n\t\t\tcase '>=<': // Between\r\n\t\t\t\t if (!(_isArray(operand2) && operand2.length === 2)) {\r\n\t\t\t\t\t throw new Error('A \\'Between\\' comparison requires argument 2 to be an array of exactly 2 values.');\r\n\t\t\t\t }\r\n\t\t\t\t return operand1 >= operand2[0] && operand1 <= operand2[1];\r\n\t\r\n\t\t\tcase '/**/': // Regex\r\n\t\t\t\treturn operand2.match(new RegExp(operand1));\r\n\t\t\tdefault:\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * Compares two operands for differences\r\n\t *\r\n\t * @param mixed\t\toperand1\t\t\r\n\t * @param mixed\t\toperand2\t\t\r\n\t * @param bool\t \tstrict\t\t\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tstatic diff(operand1, operand2, strict) {\r\n\t\treturn !Comparison.compare(operand1, operand2, strict ? '===' : '==');\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nComparison.operators = {\r\n\texact: {\r\n\t\tis: '===',\r\n\t\tisNull: '===',\r\n\t\tequalsTo: '==',\r\n\t\tstrictlyNotEqualsTo: '!==',\r\n\t\tnotEqualsTo: '!=',\r\n\t},\r\n\trelative: {\r\n\t\tlesserThan: '<',\r\n\t\tgreaterThan: '>',\r\n\t\tlesserThanOrEqualsTo: '<=',\r\n\t\tgreaterThanOrEqualsTo: '>=',\r\n\t\tbetween: '>=<',\r\n\t},\r\n\tpartial: {\r\n\t\tstartsWith: '^=',\r\n\t\tendsWith: '$=',\r\n\t\tcontains: '*=',\r\n\t\tany: '~=',\r\n\t\tin: '~=',\r\n\t\tmatches: '/**/',\r\n\t},\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Comparison;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ConditionInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'TernaryConditional'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Lexer from '../Lexer.js';\r\nimport ConditionInterface from './ConditionInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Condition class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Condition = class extends ConditionInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(assertion, onTrue, onFalse) {\r\n\t\tsuper();\r\n\t\tthis.assertion = assertion;\r\n\t\tthis.onTrue = onTrue;\r\n\t\tthis.onFalse = onFalse;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, trap = {}) {\r\n\t\treturn this.assertion.eval(context, trap) \r\n\t\t\t? this.onTrue.eval(context, trap) \r\n\t\t\t: this.onFalse.eval(context, trap);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn [\r\n\t\t\tthis.assertion.toString(context), \r\n\t\t\tCondition.operators[0], \r\n\t\t\tthis.onTrue.toString(context),\r\n\t\t\tCondition.operators[1], \r\n\t\t\tthis.onFalse.toString(context)\r\n\t\t].join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Condition) {\r\n\t\tvar splits = Lexer.split(expr, Static.operators);\r\n\t\tif (splits.length > 1) {\r\n\t\t\tif (splits.length === 2) {\r\n\t\t\t\tthrow new Error('Malformed ternary expression: ' + expr + '!');\r\n\t\t\t}\r\n\t\t\treturn new Static(\r\n\t\t\t\tparseCallback(splits[0].trim()),\r\n\t\t\t\tparseCallback(splits[1].trim()),\r\n\t\t\t\tparseCallback(splits[2].trim())\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nCondition.operators = ['?', ':'];\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Condition;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * DeletionInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'DeleteExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _last from '@web-native-js/commons/arr/last.js';\r\nimport _isUndefined from '@web-native-js/commons/js/isUndefined.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport DeletionInterface from './DeletionInterface.js';\r\nimport Contexts from '../Contexts.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Deletion class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Deletion = class extends DeletionInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(reference, operator = 'delete') {\r\n\t\tsuper();\r\n\t\tthis.reference = reference;\r\n\t\tthis.operator = operator;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, trap = {}) {\r\n\t\tvar reference = this.reference.getEval(context, trap);\r\n\t\tif (!_isUndefined(reference.context) && !_isUndefined(reference.name)) {\r\n\t\t\treturn Contexts.create(reference.context).del(reference.name, trap);\r\n\t\t}\r\n\t\tthrow new Error('\"' + this + '\" is undefined!');\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn this.operator + ' ' + this.reference.toString(context);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Deletion) {\r\n\t\tvar parse = Lexer.lex(expr, Object.values(Static.operators));\r\n\t\tif (parse.matches.length === 1 && expr.startsWith(parse.matches[0] + ' ')) {\r\n\t\t\tvar reference;\r\n\t\t\tif (!((reference = parseCallback(parse.tokens.pop().trim())) instanceof ReferenceInterface)) {\r\n\t\t\t\tthrow new Error('Invalid delete directive: ' + expr);\r\n\t\t\t}\r\n\t\t\treturn new Static(reference, parse.matches[0].trim());\r\n\t\t}\r\n\t}\r\n};\t\r\n\r\n/**\r\n * @prop array\r\n */\r\nDeletion.operators = {\r\n\tred: 'reduce', \r\n\tdel: 'delete',\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Deletion;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * FuncInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'FunctionType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _copy from '@web-native-js/commons/obj/copy.js';\r\nimport _each from '@web-native-js/commons/obj/each.js';\r\nimport _flatten from '@web-native-js/commons/arr/flatten.js';\r\nimport _wrapped from '@web-native-js/commons/str/wrapped.js';\r\nimport _unwrap from '@web-native-js/commons/str/unwrap.js';\r\nimport FuncInterface from './FuncInterface.js';\r\nimport Contexts from '../Contexts.js';\r\nimport Lexer from '../Lexer.js';\r\nimport Block from './Block.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Func class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Func = class extends FuncInterface {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(paramters, statements, arrowFunctionFormatting = {}) {\r\n\t\tsuper();\r\n\t\tthis.paramters = paramters || {};\r\n\t\tthis.statements = statements;\r\n\t\tthis.arrowFunctionFormatting = arrowFunctionFormatting;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tinherit(Super) {\r\n\t\tif (Super instanceof FuncInterface) {\r\n\t\t\tvar parentParams = Object.keys(Super.paramters);\r\n\t\t\tvar ownParams = Object.keys(this.paramters);\r\n\t\t\tfor (var i = 0; i < Math.max(ownParams.length, parentParams.length); i ++) {\r\n\t\t\t\tvar nameInParent = parentParams[i];\r\n\t\t\t\tvar nameInSelf = ownParams[i];\r\n\t\t\t\tif (!nameInSelf && nameInParent) {\r\n\t\t\t\t\tthrow new Error('Parameter #' + i + ' (' + nameInParent + ') in parent function must be implemented.');\r\n\t\t\t\t}\r\n\t\t\t\tif (nameInSelf && nameInParent) {\r\n\t\t\t\t\tvar defaultValInParent = Super.paramters[nameInParent];\r\n\t\t\t\t\tvar defaultValInSelf = this.paramters[nameInSelf];\r\n\t\t\t\t\tif (defaultValInSelf && !defaultValInParent) {\r\n\t\t\t\t\t\tthrow new Error('Parameter #' + i + ' (' + nameInSelf + ') must not have a default value as established in parent function.');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (defaultValInSelf && defaultValInParent && defaultValInSelf.jsenType !== defaultValInParent.jsenType) {\r\n\t\t\t\t\t\tthrow new Error('Default value for parameter #' + i + ' (' + nameInSelf + ') must be of type ' + defaultValInParent.jsenType + ' as established in parent function.');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.sup = Super;\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, trap = {}) {\r\n\t\treturn (...args) => {\r\n\t\t\tvar newMainContext = {};\r\n\t\t\t_each(Object.keys(this.paramters), (i, name) => {\r\n\t\t\t\tvar defaultVal = this.paramters[name];\r\n\t\t\t\tif (args.length - 1 < i && !defaultVal) {\r\n\t\t\t\t\tthrow new Error('The parameter \"' + name + '\" is required.');\r\n\t\t\t\t}\r\n\t\t\t\tnewMainContext[name] = args.length > i \r\n\t\t\t\t\t? args[i] \r\n\t\t\t\t\t: (this.paramters[name] \r\n\t\t\t\t\t\t? this.paramters[name].eval(context, trap) \r\n\t\t\t\t\t\t: null);\r\n\t\t\t});\r\n\t\t\t// But this newer context should come first\r\n\t\t\tvar nestedContext = new Contexts({main:newMainContext, super:context});\r\n\t\t\treturn this.statements.eval(nestedContext, trap);\r\n\t\t};\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\tvar paramters = [];\r\n\t\t_each(this.paramters, (name, value) => {\r\n\t\t\tparamters.push(name + (value ? '=' + value.toString(context) : ''));\r\n\t\t});\r\n\t\tif (this.arrowFunctionFormatting) {\r\n\t\t\tvar headNoWrap = this.arrowFunctionFormatting.head === false || (paramters.length === 1 && paramters[0].indexOf('=') === -1);\r\n\t\t\tvar bodyNoWrap = this.arrowFunctionFormatting.body === false\r\n\t\t\treturn (headNoWrap ? paramters[0] : '(' + paramters.join(', ') + ')')\r\n\t\t\t+ ' => ' + (bodyNoWrap ? this.statements.toString(context) : '{' + this.statements.toString(context) + '}');\r\n\t\t}\r\n\t\treturn 'function (' + paramters.join(', ') + ') {' + this.statements.toString(context) + '}';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Func) {\r\n\t\texpr = expr.trim();\r\n\t\tvar splits;\r\n\t\tif (expr.startsWith('function') \r\n\t\t&& (splits = Lexer.split(expr, []).slice(1).filter(b => b.trim())) && splits.length === 2) {\r\n\t\t\tvar arrowFunctionFormatting = false;\r\n\t\t\tvar funcHead = _unwrap(splits.shift().trim(), '(', ')');\r\n\t\t\tvar funcBody = _unwrap(splits.shift().trim(), '{', '}');\r\n\t\t} else if (!expr.startsWith('function') \r\n\t\t&& (splits = Lexer.split(expr, ['=>'])) && splits.length === 2) {\r\n\t\t\tvar funcHead = splits.shift().trim();\r\n\t\t\tvar funcBody = splits.shift().trim();\r\n\t\t\tvar arrowFunctionFormatting = {};\r\n\t\t\tif (_wrapped(funcHead, '(', ')')) {\r\n\t\t\t\tfuncHead = _unwrap(funcHead, '(', ')');\r\n\t\t\t} else {\r\n\t\t\t\tarrowFunctionFormatting.head = false;\r\n\t\t\t}\r\n\t\t\tif (_wrapped(funcBody, '{', '}')) {\r\n\t\t\t\tfuncBody = _unwrap(funcBody, '{', '}');\r\n\t\t\t} else {\r\n\t\t\t\tarrowFunctionFormatting.body = false;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar paramters = {};\r\n\t\tLexer.split(funcHead, [',']).forEach(param => {\r\n\t\t\tvar paramSplit = param.split('=');\r\n\t\t\tif (paramSplit[1]) {\r\n\t\t\t\tparamters[paramSplit[0].trim()] = parseCallback(paramSplit[1].trim(), null, {\r\n\t\t\t\t\t// Any varaibles should be added to public vars\r\n\t\t\t\t\tmeta: null,\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tparamters[param.trim()] = null;\r\n\t\t\t}\r\n\t\t});\r\n\t\tvar block = parseCallback(funcBody, [Block], {assert:false}) || parseCallback(funcBody, null, {\r\n\t\t\t// Any varaibles should be added to public vars\r\n\t\t\tmeta: null,\r\n\t\t});\r\n\t\treturn new Static(\r\n\t\t\tparamters,\r\n\t\t\tblock.jsenType === 'Block' ? block : new Block([block]),\r\n\t\t\tarrowFunctionFormatting,\r\n\t\t);\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nFunc.operators = ['=>',];\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Func;","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * IfInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'IfConditional'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@web-native-js/commons/str/wrapped.js';\r\nimport _unwrap from '@web-native-js/commons/str/unwrap.js';\r\nimport Contexts from '../Contexts.js';\r\nimport Lexer from '../Lexer.js';\r\nimport IfInterface from './IfInterface.js';\r\nimport Block from './Block.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Condition class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst If = class extends IfInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(assertion, onTrue, onFalse, params = {}) {\r\n\t\tsuper();\r\n\t\tthis.assertion = assertion;\r\n\t\tthis.onTrue = onTrue;\r\n\t\tthis.onFalse = onFalse;\r\n\t\tthis.params = params;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, trap = {}) {\r\n        var newContext = new Contexts({main:{}, super:context}, 2/** type */);\r\n\t\treturn this.assertion.eval(context/** original context */, trap)\r\n\t\t\t? (this.onTrue ? this.onTrue.eval(newContext, trap) : undefined)\r\n\t\t\t: (this.onFalse ? this.onFalse.eval(newContext, trap) : undefined);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n        var onTrue = this.onTrue && this.params.onTrueIsBlock \r\n            ? '{' + this.onTrue.toString(context) + '}' \r\n            : (this.onTrue ? this.onTrue.toString(context) : '');\r\n        var onFalse = this.onFalse && this.params.onFalseIsBlock \r\n            ? '{' + this.onFalse.toString(context) + '}' \r\n            : (this.onFalse ? this.onFalse.toString(context) : '');\r\n\t\treturn 'if (' + this.assertion.toString(context) + ')' + onTrue + (onFalse ? ' else ' + onFalse : '');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = If) {\r\n        expr = expr.trim();\r\n        var splits;\r\n        if (expr.startsWith('if') \r\n\t\t&& (splits = Lexer.split(expr, [], {limit:2}/*IMPORTANT*/).slice(1).filter(b => b.trim())) && splits.length === 2) {\r\n            var assertion = parseCallback(_unwrap(splits.shift().trim(), '(', ')').trim());\r\n            var rest = Lexer.split(splits.shift().trim(), ['else'], {limit:1}/*IMPORTANT*/);\r\n            var onTrue = rest.shift().trim(), onTrueIsBlock, onFalse = (rest.shift() || '').trim(), onFalseIsBlock;\r\n            if (_wrapped(onTrue, '{', '}')) {\r\n                // The braces gives us the onTrue block\r\n                onTrueIsBlock = true;\r\n                onTrue = _unwrap(onTrue, '{', '}').trim();\r\n                onTrue = parseCallback(onTrue, [Block], {assert:false, meta:null}) || parseCallback(onTrue, null, {meta:null});\r\n            } else {\r\n                onTrue = parseCallback(onTrue, null, {meta:null});\r\n            }\r\n            if (onFalse) {\r\n                if (_wrapped(onFalse, '{', '}')) {\r\n                    // The braces gives us the onTrue block\r\n                    onFalseIsBlock = true;\r\n                    onFalse = _unwrap(onFalse, '{', '}').trim();\r\n                    onFalse = parseCallback(onFalse, [Block], {assert:false, meta:null}) || parseCallback(onFalse, null, {meta:null});\r\n                } else {\r\n                    onFalse = parseCallback(onFalse, null, {meta:null});\r\n                }\r\n            }\r\n\t\t\treturn new Static(\r\n                assertion, \r\n                onTrue ? (onTrue.jsenType === 'Block' ? onTrue : new Block([onTrue])) : null, \r\n                onFalse ? (onFalse.jsenType === 'Block' ? onFalse : new Block([onFalse])) : null, \r\n                {\r\n                    onTrueIsBlock,\r\n                    onFalseIsBlock,\r\n                }\r\n            );\r\n         }\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default If;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\n\r\n/**\r\n * Returns the intersection of two arrays;\r\n * optionally using a custom matching function.\r\n *\r\n * @param array \tarr\r\n * @param array\t \tarr2\r\n * @param function \tcallback\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, arr2, callback = null) {\r\n\treturn !_isArray(arr2) ? [] : arr.filter(val1 => callback \r\n\t\t? arr2.filter(val2 => callback(val1, val2)).length \r\n\t\t: arr2.indexOf(val1) !== -1\r\n\t);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * MathInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'MathExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNumeric from '@web-native-js/commons/js/isNumeric.js';\r\nimport _flatten from '@web-native-js/commons/arr/flatten.js';\r\nimport _intersect from '@web-native-js/commons/arr/intersect.js';\r\nimport _unique from '@web-native-js/commons/arr/unique.js';\r\nimport MathInterface from './MathInterface.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Math class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Math = class extends MathInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(val, exprs) {\r\n\t\tsuper();\r\n\t\tthis.val = val;\r\n\t\tthis.exprs = exprs;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, trap = {}) {\r\n\t\treturn this.exprs.reduce((currentTotal, expr) => {\r\n\t\t\tvar val = expr.val.eval(context, trap);\r\n\t\t\tvar operator = expr.operator.trim();\r\n\t\t\tif ((!_isNumeric(currentTotal) || !_isNumeric(val)) && operator !== '+') {\r\n\t\t\t\tthrow new Error('Invalid Math expression: ' + this.toString() + '!');\r\n\t\t\t}\r\n\t\t\tswitch(operator) {\r\n\t\t\t\tcase '+':\r\n\t\t\t\t\treturn currentTotal + val;\r\n\t\t\t\tcase '-':\r\n\t\t\t\t\treturn currentTotal - val;\r\n\t\t\t\tcase '*':\r\n\t\t\t\t\treturn currentTotal * val;\r\n\t\t\t\tcase '/':\r\n\t\t\t\t\treturn currentTotal / val;\r\n\t\t\t}\r\n\t\t}, this.val.eval(context, trap));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn [this.val.toString(context)].concat(\r\n\t\t\tthis.exprs.map(expr => expr.operator + ' ' + expr.val.toString(context))\r\n\t\t).join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Math) {\r\n\t\tvar parse = Lexer.lex(expr, _flatten(Static.operators));\r\n\t\tif (parse.tokens.length > 1 && parse.matches.length === parse.tokens.length - 1) {\r\n\t\t\tvar operators = _unique(parse.matches);\r\n\t\t\tif (_intersect(operators, Math.operators.sup).length && _intersect(operators, Math.operators.sub).length) {\r\n\t\t\t\tthrow new Error('\"Addition/subtraction\" and \"multiplication/division\" operators cannot be used in the same expression: ' + expr + '!');\r\n\t\t\t}\r\n\t\t\treturn new Static(\r\n\t\t\t\tparseCallback(parse.tokens.shift().trim()),\r\n\t\t\t\tparse.tokens.map((expr, i) => {return {\r\n\t\t\t\t\toperator: parse.matches[i],\r\n\t\t\t\t\tval: parseCallback(expr.trim())\r\n\t\t\t\t};})\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nMath.operators = {\r\n\tsup: ['*', '/'],\r\n\tsub: [' + ', ' - '],\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Math;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * NumInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'NumberType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNumeric from '@web-native-js/commons/js/isNumeric.js';\r\nimport NumInterface from './NumInterface.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Num (number) class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Num = class extends NumInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(int, dec = 0) {\r\n\t\tsuper();\r\n\t\tthis.int = int;\r\n\t\tthis.dec = dec;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval() {\r\n\t\treturn parseFloat(this.int + (this.dec ? '.' + this.dec : null));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn this.int + (this.dec ? '.' + this.dec : null);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Num) {\r\n\t\tif (_isNumeric(expr)) {\r\n\t\t\tvar expr = expr.split('.');\r\n\t\t\treturn new Static(\r\n\t\t\t\tparseInt(expr.shift()),\r\n\t\t\t\tparseInt(expr.shift())\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Num;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ObjInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'ObjectType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@web-native-js/commons/str/wrapped.js';\r\nimport _unwrap from '@web-native-js/commons/str/unwrap.js';\r\nimport _first from '@web-native-js/commons/arr/first.js';\r\nimport _last from '@web-native-js/commons/arr/last.js';\r\nimport _each from '@web-native-js/commons/obj/each.js';\r\nimport ObjInterface from './ObjInterface.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Object utils\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Obj = class extends ObjInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(entries) {\r\n\t\tsuper();\r\n\t\tthis.entries = entries || {};\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tinherit(Super) {\r\n\t\tif (Super instanceof ObjInterface) {\r\n\t\t\t_each(Super.entries, (name, val) => {\r\n\t\t\t\tif (!(name in this.entries)) {\r\n\t\t\t\t\tthis.entries[name] = val;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, trap = {}) {\r\n\t\tvar items = {};\r\n\t\t_each(this.entries, (key, expr) => {\r\n\t\t\titems[key] = expr.eval(context, trap);\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\tvar str = [];\r\n\t\t_each(this.entries, (key, expr) => {\r\n\t\t\tstr.push(key + Obj.operators.sub + expr.toString(context));\r\n\t\t});\r\n\t\treturn '{' + str.join(Obj.operators.sup) + '}';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Obj) {\r\n\t\tif (_wrapped(expr, '{', '}') && !Lexer.match(expr.trim(), [' ']).length) {\r\n\t\t\tvar entries = {};\r\n\t\t\tvar _entriesSplit = Lexer.split(_unwrap(expr, '{', '}'), [Obj.operators.sup])\r\n\t\t\t\t.map(n => n.trim()).filter(n => n);\r\n\t\t\t_each(_entriesSplit, (key, expr) => {\r\n\t\t\t\tvar entry = Lexer.split(expr, [Obj.operators.sub], {limit:1}/*IMPORTANT*/);\r\n\t\t\t\tentries[_first(entry).trim()] = parseCallback(_last(entry).trim());\r\n\t\t\t});\r\n\t\t\treturn new Static(entries);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nObj.operators = {\r\n\tsup: ',',\r\n\tsub: ':',\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Obj;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * PresenceInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'PresenceOperator'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _last from '@web-native-js/commons/arr/last.js';\r\nimport _isUndefined from '@web-native-js/commons/js/isUndefined.js';\r\nimport PresenceInterface from './PresenceInterface.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport Contexts from '../Contexts.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Presence class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Presence = class extends PresenceInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(prop, reference, operator = 'in') {\r\n\t\tsuper();\r\n\t\tthis.prop = prop;\r\n\t\tthis.reference = reference;\r\n\t\tthis.operator = operator;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, trap = {}) {\r\n\t\tvar reference = this.reference.getEval(context, trap);\r\n\t\tvar prop = this.prop.eval(context, trap);\r\n\t\tif (!_isUndefined(reference.context) && !_isUndefined(reference.name)) {\r\n\t\t\treturn Contexts.create(reference.context).has(reference.name, prop, trap);\r\n\t\t}\r\n\t\tthrow new Error('\"' + this + '\" is undefined!');\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn [this.prop.toString(context), this.operator, this.reference.toString(context)].join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Presence) {\r\n\t\tvar parse = Lexer.lex(expr, Static.operators);\r\n\t\tif (parse.tokens.length === 2) {\r\n\t\t\tvar prop, reference;\r\n\t\t\tif (!(prop = parseCallback(parse.tokens.shift().trim()))\r\n\t\t\t|| !((reference = parseCallback(parse.tokens.shift().trim())) instanceof ReferenceInterface)) {\r\n\t\t\t\tthrow new Error('Invalid presence check expression: ' + expr);\r\n\t\t\t}\r\n\t\t\treturn new Static(prop, reference, parse.matches[0].trim());\r\n\t\t}\r\n\t}\r\n};\t\r\n\r\n/**\r\n * @prop array\r\n */\r\nPresence.operators = [' in '];\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Presence;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isUndefined from '@web-native-js/commons/js/isUndefined.js';\r\nimport _wrapped from '@web-native-js/commons/str/wrapped.js';\r\nimport _unwrap from '@web-native-js/commons/str/unwrap.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport ExprInterface from '../ExprInterface.js';\r\nimport Contexts from '../Contexts.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Reference class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Reference = class extends ReferenceInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(context, name, backticks = false) {\r\n\t\tsuper();\r\n\t\tthis.context = context;\r\n\t\tthis.name = name;\r\n\t\tthis.backticks = backticks;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tgetEval(context = null, trap = {}) {\r\n\t\tvar sourceContext = context, name = this.name;\r\n\t\tif (this.context) {\r\n\t\t\tif (name instanceof ExprInterface) {\r\n\t\t\t\tname = name.eval(context, trap);\r\n\t\t\t}\r\n\t\t\tsourceContext = this.context.eval(context, trap);\r\n\t\t}\r\n\t\treturn {context:sourceContext, name:name,};\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, trap = {}) {\r\n\t\tvar parts = this.getEval(context, trap);\r\n\t\tif (!_isUndefined(parts.context) && !_isUndefined(parts.name)) {\r\n\t\t\treturn Contexts.create(parts.context).get(parts.name, trap);\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\tvar name = this.name;\r\n\t\tif (this.context) {\r\n\t\t\tvar subjectContext = this.context.toString(context);\r\n\t\t\tif (name instanceof ExprInterface) {\r\n\t\t\t\tname = '[' + name.toString(context) + ']';\r\n\t\t\t} else if (this.backticks) {\r\n\t\t\t\tname = '`' + name + '`';\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar subjectContext = context;\r\n\t\t\tif (this.backticks) {\r\n\t\t\t\tname = '`' + name + '`';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn (subjectContext || '') + (subjectContext && !name.startsWith('[') ? Reference.separator : '') + name;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Reference) {\r\n\t\tif (!Lexer.match(expr.trim(), [' ']).length) {\r\n\t\t\tvar splits = Lexer.split(expr, []);\r\n\t\t\t// ------------------------\r\n\t\t\t// name, first\r\n\t\t\t// ------------------------\r\n\t\t\tvar context, name = splits.pop(), backticks;\r\n\t\t\tvar nameSplit = Lexer.split(name.trim(), [Static.separator], {preserveDelims:true});\r\n\t\t\tif (nameSplit.length > 1) {\r\n\t\t\t\tname = nameSplit.pop().substr(1);\r\n\t\t\t\tsplits = splits.concat(nameSplit);\r\n\t\t\t}\r\n\t\t\tif (_wrapped(name, '`', '`')) {\r\n\t\t\t\tname = _unwrap(name, '`', '`');\r\n\t\t\t\tbackticks = true;\r\n\t\t\t}\r\n\t\t\t// ------------------------\r\n\t\t\t// context, second\r\n\t\t\t// ------------------------\r\n\t\t\tif (splits.length) {\r\n\t\t\t\tcontext = parseCallback(splits.join(''));\r\n\t\t\t\tcontext.isContext = true;\r\n\t\t\t}\r\n\t\t\tif (_wrapped(name, '[', ']')) {\r\n\t\t\t\tif (!context) {\r\n\t\t\t\t\tthrow new Error('Invalid reference: ' + expr + '!');\r\n\t\t\t\t}\r\n\t\t\t\tname = parseCallback(_unwrap(name, '[', ']'));\r\n\t\t\t}\r\n\t\t\treturn new Static(context, name, backticks);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop string\r\n */\r\nReference.separator = '.';\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Reference;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Lexer from '../Lexer.js';\r\nimport ReturnInterface from './ReturnInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Ret (return) class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Return = class extends ReturnInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(expr) {\r\n\t\tsuper();\r\n\t\tthis.expr = expr;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, trap = {}) {\r\n\t\treturn this.expr ? this.expr.eval(context, trap) : undefined;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn this.expr ? 'return ' + this.expr.toString(context) : 'return';\r\n\t}\r\n\t\r\n\t/**\r\n\t * -------------------------------------------------------\r\n\t */\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Return) {\r\n\t\tvar exprLc = expr.toLowerCase();\r\n\t\tif (exprLc.startsWith('return ') || exprLc === 'return') {\r\n\t\t\treturn new Static(\r\n\t\t\t\tparseCallback(expr.substr(6).trim())\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Return;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * StrInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'StringType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@web-native-js/commons/str/wrapped.js';\r\nimport _unwrap from '@web-native-js/commons/str/unwrap.js';\r\nimport StrInterface from './StrInterface.js';\r\nimport Lexer from '../Lexer.js';\r\nimport Bool from './Bool.js';\r\n\r\n/**\r\n * ---------------------------\r\n * String utils\r\n * ---------------------------\r\n */\r\n\r\nconst Str = class extends StrInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(expr, quote) {\r\n\t\tsuper();\r\n\t\tthis.expr = expr;\r\n\t\tthis.quote = quote;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval() {\r\n\t\treturn this.expr;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.quote + this.expr + this.quote;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Str) {\r\n\t\texpr = expr.trim();\r\n\t\tif ((_wrapped(expr, '\"', '\"') || _wrapped(expr, \"'\", \"'\")) \r\n\t\t&& !Lexer.match(expr, [' ']).length) {\r\n\t\t\tvar quote = _wrapped(expr, '\"', '\"') ? '\"' : \"'\";\r\n\t\t\treturn new Static(\r\n\t\t\t\t_unwrap(expr, quote, quote),\r\n\t\t\t\tquote\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Str;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Jsen from './Jsen.js';\r\nimport ExprInterface from './ExprInterface.js';\r\nimport Lexer from './Lexer.js';\r\nimport Contexts from './Contexts.js';\r\nimport Abstraction from './Expr/Abstraction.js';\r\nimport AbstractionInterface from './Expr/AbstractionInterface.js';\r\nimport Arr from './Expr/Arr.js';\r\nimport ArrInterface from './Expr/ArrInterface.js';\r\nimport Arguments from './Expr/Arguments.js';\r\nimport ArgumentsInterface from './Expr/ArgumentsInterface.js';\r\nimport Assertion from './Expr/Assertion.js';\r\nimport AssertionInterface from './Expr/AssertionInterface.js';\r\nimport Assignment from './Expr/Assignment.js';\r\nimport AssignmentInterface from './Expr/AssignmentInterface.js';\r\nimport Block from './Expr/Block.js';\r\nimport BlockInterface from './Expr/BlockInterface.js';\r\nimport Bool from './Expr/Bool.js';\r\nimport BoolInterface from './Expr/BoolInterface.js';\r\nimport Call from './Expr/Call.js';\r\nimport CallInterface from './Expr/CallInterface.js';\r\nimport Comparison from './Expr/Comparison.js';\r\nimport ComparisonInterface from './Expr/ComparisonInterface.js';\r\nimport Condition from './Expr/Condition.js';\r\nimport ConditionInterface from './Expr/ConditionInterface.js';\r\nimport Deletion from './Expr/Deletion.js';\r\nimport DeletionInterface from './Expr/DeletionInterface.js';\r\nimport Func from './Expr/Func.js';\r\nimport FuncInterface from './Expr/FuncInterface.js';\r\nimport If from './Expr/If.js';\r\nimport IfInterface from './Expr/IfInterface.js';\r\nimport Math from './Expr/Math.js';\r\nimport MathInterface from './Expr/MathInterface.js';\r\nimport Num from './Expr/Num.js';\r\nimport NumInterface from './Expr/NumInterface.js';\r\nimport Obj from './Expr/Obj.js';\r\nimport ObjInterface from './Expr/ObjInterface.js';\r\nimport Presence from './Expr/Presence.js';\r\nimport PresenceInterface from './Expr/PresenceInterface.js';\r\nimport Reference from './Expr/Reference.js';\r\nimport ReferenceInterface from './Expr/ReferenceInterface.js';\r\nimport Return from './Expr/Return.js';\r\nimport ReturnInterface from './Expr/ReturnInterface.js';\r\nimport Str from './Expr/Str.js';\r\nimport StrInterface from './Expr/StrInterface.js';\r\n\r\n/**\r\n * @var object\r\n */\r\nJsen.grammars = {\r\n\tIf: If,\t\t\t\t\t\t// if (condition) expr1 else expre2\r\n\t//Block: Block,\t\t\t\t// field1 = 3; field2 = val2\r\n\tReturn: Return,\t\t\t\t// return field1\r\n\tDeletion: Deletion,\t\t\t// delete field1\r\n\tAssignment: Assignment,\t\t// field1[key1].key2 = k\r\n\tPresence: Presence,\t\t\t// key1 in field1\r\n\tFunc: Func,\t\t\t\t\t// (field1, field2) => {}\r\n\tAbstraction: Abstraction,\t// (field1)\r\n\tCondition: Condition,\t\t// field1 > field2 ? val1 : val2\r\n\tAssertion: Assertion,\t\t// !field1 && field2\r\n\tComparison: Comparison,\t\t// field1 > field2\r\n\tMath: Math,\t\t\t\t\t// field1 + field2\r\n\tArr: Arr,\t\t\t\t\t// [field1, field2]\r\n\tObj: Obj,\t\t\t\t\t// {field1:val1, field2:val2}\r\n\tNum: Num,\t\t\t\t\t// [0-9]\r\n\tStr: Str,\t\t\t\t\t// \"\"\r\n\tBool: Bool,\t\t\t\t\t// true\r\n\tCall: Call,\t\t\t\t\t// field1()\r\n\tReference: Reference,\t\t// field1\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport {\r\n\tExprInterface,\r\n\tLexer,\r\n\tContexts\r\n};\r\nexport {\r\n\tAbstraction,\r\n\tArr,\r\n\tArguments,\r\n\tAssertion,\r\n\tAssignment,\r\n\tBlock,\r\n\tBool,\r\n\tCall,\r\n\tComparison,\r\n\tCondition,\r\n\tDeletion,\r\n\tFunc,\r\n\tIf,\r\n\tMath,\r\n\tNum,\r\n\tObj,\r\n\tPresence,\r\n\tReference,\r\n\tReturn,\r\n\tStr,\r\n};\r\nexport {\r\n\tAbstractionInterface,\r\n\tArrInterface,\r\n\tArgumentsInterface,\r\n\tAssertionInterface,\r\n\tAssignmentInterface,\r\n\tBlockInterface,\r\n\tBoolInterface,\r\n\tCallInterface,\r\n\tComparisonInterface,\r\n\tConditionInterface,\r\n\tDeletionInterface,\r\n\tFuncInterface,\r\n\tIfInterface,\r\n\tMathInterface,\r\n\tNumInterface,\r\n\tObjInterface,\r\n\tPresenceInterface,\r\n\tReferenceInterface,\r\n\tReturnInterface,\r\n\tStrInterface,\r\n};\r\nexport default Jsen;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Jsen from './index.js';\r\n\r\n// As globals\r\nif (!window.WebNative) {\r\n\twindow.WebNative = {};\r\n}\r\nwindow.WebNative.Jsen = Jsen;"],"sourceRoot":""}