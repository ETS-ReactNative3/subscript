{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/js/isArray.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/js/isTypeFunction.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/js/isFunction.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/js/isObject.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/js/isTypeObject.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/js/isNumber.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/js/isNumeric.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/obj/getAllPropertyNames.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/obj/getPrototypeChain.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/arr/pushUnique.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/obj/mergeCallback.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/obj/merge.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/js/isNull.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/js/isUndefined.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/arr/remove.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/js/isPlainObject.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/js/isBoolean.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/obj/each.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/obj/even.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/obj/compareCallback.js","webpack:///./src/ExprInterface.js","webpack:///./src/grammar/ReferenceInterface.js","webpack:///./src/grammar/CallInterface.js","webpack:///./src/IndependentExprInterface.js","webpack:///./src/grammar/IfInterface.js","webpack:///./src/SyntaxError.js","webpack:///./src/Parser.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/str/wrapped.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/str/after.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/str/before.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/str/unwrap.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/str/beforeLast.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/js/isString.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/arr/from.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/js/isEmpty.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/js/isTypeArray.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/arr/flatten.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/arr/first.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/arr/last.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/obj/copyPlain.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/str/Lexer.js","webpack:///./src/grammar/AbstractionInterface.js","webpack:///./src/grammar/Abstraction.js","webpack:///./src/grammar/ArrInterface.js","webpack:///./src/grammar/Arr.js","webpack:///./src/grammar/ArgumentsInterface.js","webpack:///./src/grammar/Arguments.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/arr/unique.js","webpack:///./src/grammar/AssertionInterface.js","webpack:///./src/grammar/Assertion.js","webpack:///./src/grammar/AssignmentInterface.js","webpack:///./src/ReferenceError.js","webpack:///./src/grammar/Assignment.js","webpack:///./src/grammar/BlockInterface.js","webpack:///./src/grammar/ReturnInterface.js","webpack:///./src/grammar/DeletionInterface.js","webpack:///./src/grammar/NumInterface.js","webpack:///./src/grammar/StrInterface.js","webpack:///./src/util.js","webpack:///./src/Scope.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/js/isClass.js","webpack:///./src/grammar/Block.js","webpack:///./src/grammar/BoolInterface.js","webpack:///./src/grammar/Bool.js","webpack:///./src/grammar/Call.js","webpack:///./src/grammar/ComparisonInterface.js","webpack:///./src/grammar/Comparison.js","webpack:///./src/grammar/ConditionInterface.js","webpack:///./src/grammar/Condition.js","webpack:///./src/grammar/Deletion.js","webpack:///./src/grammar/FuncInterface.js","webpack:///./src/grammar/Func.js","webpack:///./src/grammar/If.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/arr/intersect.js","webpack:///./src/grammar/MathInterface.js","webpack:///./src/grammar/Math.js","webpack:///./src/grammar/Num.js","webpack:///./src/grammar/ObjInterface.js","webpack:///./src/grammar/Obj.js","webpack:///./src/grammar/PresenceInterface.js","webpack:///./src/grammar/Presence.js","webpack:///./src/grammar/Reference.js","webpack:///./src/grammar/Return.js","webpack:///./src/grammar/Str.js","webpack:///./src/grammar/VoidInterface.js","webpack:///./src/grammar/Void.js","webpack:///./src/grammar.js","webpack:///./src/index.js","webpack:///./src/browser-entry.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Array","isArray","val","toString","Number","isNaN","keysAll","until","prototypalChain","obj","indexOf","push","getPrototypeOf","forEach","items","itm","arr","getOwnPropertyNames","mergeCallback","objs","callback","deepProps","isReplace","withSymbols","depth","obj1","shift","length","Error","obj2","valAtObj1","valAtObj2","getOwnPropertyDescriptor","e","k","arguments","undefined","limit","splice","returnValue","keys","parseFloat","_even","assertion","obj1Keys","obj2Keys","result","contn","v1","testPass","v2","netComparison","contrast","returnOnFirstFalse","Expr","jsenType","this","Super","comments","meta","vars","Interface","ExprInterface","args","super","cache","expr","grammar","params","_parsed","allowCache","parseOne","_grammar","values","parsed","assert","SyntaxError","deepVars","varsUnlodged","parse","_expr","_params","subStmt","ReferenceInterface","hasCallHead","_context","context","CallInterface","role","lodge","_var","IndependentExprInterface","deepVarsUnlodged","reference","IfInterface","onTrue","concat","onFalse","explain","subject","startsWith","openingTag","endsWith","closingTag","search","pos","afterLast","lastIndexOf","substr","beforeLast","String","castObject","slice","_flatten","withObjects","reduce","acc","count","firsts","amount","reverse","filter","str","delims","options","copyResult","nesting","maxDepth","tokens","matches","matchesi","$cache","cached","lex","$str","$options","blocks","$blocks","quotes","$quotes","$comments","runtime","cursor","_evalCharsAt","join","charWidth","commentTest","quoteTest","nestingTest","openComment","_testQuotes","openQuote","_testComments","ending","_push","chars","starting","_testNesting","stopChar","_testChars","stopChars","stopCharForward","matchedDelim","preserveDelims","nextIndex","quote","block","Math","max","testList","test","ret","useRegex","match","RegExp","ci","toLowerCase","target","isNewSeries","splitSeries","splitSeries2","regParse","AbstractionInterface","eval","stringify","parseCallback","ArrInterface","exprs","newExprs","exprA","uniqueSoFar","exprB","even","map","trim","split","ArgumentsInterface","list","arg","index","self","AssertionInterface","logic","Assertion","constructor","negation","operators","toUpperCase","isOr","or","isNor","nor","isAnd","and","isNand","nand","lastResult","trues","Assignment","AssignmentInterface","initKeyword","operator","postIncrDecr","initialVal","getEval","includes","operandA","operandB","set","references","_pushUnique","ReferenceError","message","testBlockEnd","isIncrDecr","a","b","pathStartsWith","prev","referencesToPaths","seg","pathArray","unshift","NumInterface","int","StrInterface","stack","errorLevel","local","$local","trap","observe","props","prop","_has","main","scope","subtree","tags","changes","delta","path","oldValue","unobserve","final","level","callMain","handle","bindThis","contxtObj","contxtMeta","advance","_get","Function","type","_set","cntxt","localContxtMeta","LogicalError","strictMode","deleteProperty","del","prop2","contextObj2","fn","exec","apply","execUnknown","has","BlockInterface","stmts","delim","returned","returnCallback","callEval","stmt","catch","results","isDirectEventTarget","f","v","isIndirectEventTarget","ReturnInterface","DeletionInterface","BoolInterface","state","pop","ComparisonInterface","operand1","operand2","compare","oper","strict","exact","is","isNull","equalsTo","strictlyNotEqualsTo","notEqualsTo","relative","lesserThan","greaterThan","lesserThanOrEqualsTo","greaterThanOrEqualsTo","between","partial","contains","any","in","ConditionInterface","splits","Deletion","red","Func","FuncInterface","paramters","statements","arrowFunctionFormatting","parentParams","ownParams","nameInParent","nameInSelf","defaultValInParent","defaultValInSelf","sup","instance","newMainContext","defaultVal","nestedContext","retrn","body","headNoWrap","head","bodyNoWrap","funcHead","funcBody","param","paramSplit","onTrueIsBlock","onFalseIsBlock","rest","arr2","val1","val2","MathInterface","currentTotal","sub","dec","parseInt","Obj","ObjInterface","entries","_entriesSplit","entry","Presence","PresenceInterface","backticks","sourceContext","subjectContext","separator","nameSplit","exprLc","If","Return","Abstraction","Condition","Comparison","Arr","Num","Str","Bool","Void","VoidInterface","Call","Reference","window","WN","Jsen","WebNative"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\r\n/**\r\n * Tells if val is of type \"array\".\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn Array.isArray(val);\r\n};\r\n","\r\n/**\r\n * Tells if val is of type \"function\".\r\n * This holds true for both regular functions and classes.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn typeof val === 'function';\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeFunction from './isTypeFunction.js';\r\n\r\n/**\r\n * Tells if val is of type \"function\".\r\n *\r\n * @param object \t\tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isTypeFunction(val) || (val && {}.toString.call(val) === '[object function]');\r\n};\r\n","\r\n/**\r\n * Tells if val is pure object.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn !Array.isArray(val) && typeof val === 'object' && val;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeFunction from './isTypeFunction.js';\r\n\r\n/**\r\n * Tells if val is of type \"object\".\r\n * This holds true for anything object, including built-ins.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn Array.isArray(val) || (typeof val === 'object' && val) || _isTypeFunction(val);\r\n};\r\n","\r\n/**\r\n * Tells if val is of type \"number\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val instanceof Number || (typeof val === 'number');\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNumber from './isNumber.js';\r\n/**\r\n * Tells if val is of type \"string\" or a numeric string.\r\n * This holds true for both numbers and numeric strings.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isNumber(val) || (val !== true && val !== false && val !== null && val !== '' && !isNaN(val * 1));\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _pushUnique from '../arr/pushUnique.js';\r\nimport _getPrototypeChain from './getPrototypeChain.js';\r\n\r\n/**\r\n * Eagerly retrieves object members all down the prototype chain.\r\n *\r\n * @param object\t \tobj\r\n * @param object\t \tuntil\r\n *\r\n * @return array\r\n */\r\nexport default function(obj, until) {\r\n\tvar keysAll = [];\r\n\t_getPrototypeChain(obj, until).forEach(obj => {\r\n\t\t_pushUnique(keysAll, ...Object.getOwnPropertyNames(obj));\r\n\t});\r\n\treturn keysAll;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\n\r\n/**\r\n * Returns the prototype chain.\r\n *\r\n * @param object \t\tobj\r\n * @param object\t \tuntil\r\n *\r\n * @return bool\r\n */\r\nexport default function(obj, until) {\r\n\tuntil = until || Object.prototype;\r\n\tuntil = until && !_isArray(until) ? [until] : until;\r\n\t// We get the chain of inheritance\r\n\tvar prototypalChain = [];\r\n\tvar obj = obj;\r\n\twhile((obj && (!until || until.indexOf(obj) < 0) && obj.name !== 'default')) {\r\n\t\tprototypalChain.push(obj);\r\n\t\tobj = obj ? Object.getPrototypeOf(obj) : null;\r\n\t}\r\n\treturn prototypalChain;\r\n};\r\n","\r\n/**\r\n * Adds an item if not already exist.\r\n *\r\n * @param array \tarr\r\n * @param array\t \t...itms\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, ...items) {\r\n\titems.forEach(itm => {\r\n\t\tif (arr.indexOf(itm) < 0) {\r\n\t\t\tarr.push(itm);\r\n\t\t}\r\n\t});\r\n\treturn arr;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\nimport _getAllPropertyNames from './getAllPropertyNames.js';\r\n\r\n/**\r\n  * Merges values from subsequent arrays/objects first array/object;\r\n  * optionally recursive\r\n  *\r\n  * @param array ...objs\r\n  *\r\n  * @return void\r\n  */\r\nexport default function mergeCallback(objs, callback, deepProps = false, isReplace = false, withSymbols = false) {\r\n\tvar depth = 0;\r\n\tvar obj1 = objs.shift();\r\n\tif (_isNumeric(obj1) || obj1 === true || obj1 === false) {\r\n\t\tdepth = obj1;\r\n\t\tobj1 = objs.shift();\r\n\t}\r\n\tif (!objs.length) {\r\n\t\tthrow new Error('_merge() requires two or more array/objects.');\r\n\t}\r\n\tobjs.forEach((obj2, i) => {\r\n\t\tif (!_isTypeObject(obj2) && !_isFunction(obj2)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t(deepProps ? _getAllPropertyNames(obj2) : Object.getOwnPropertyNames(obj2)).forEach(key => {\r\n\t\t\tif (!callback(key, obj1, obj2, i)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar valAtObj1 = obj1[key];\r\n\t\t\tvar valAtObj2 = obj2[key];\r\n\t\t\tif (((_isArray(valAtObj1) && _isArray(valAtObj2)) || (_isObject(valAtObj1) && _isObject(valAtObj2))) \r\n\t\t\t&& (depth === true || depth > 0)) {\r\n\t\t\t\t// RECURSE...\r\n\t\t\t\tobj1[key] = _isArray(valAtObj1) && _isArray(valAtObj2) ? [] : {};\r\n\t\t\t\tmergeCallback([_isNumeric(depth) ? depth - 1 : depth, obj1[key], valAtObj1, valAtObj2], callback, deepProps, isReplace, withSymbols);\r\n\t\t\t} else {\r\n\t\t\t\tif (_isArray(obj1) && _isArray(obj2)) {\r\n\t\t\t\t\tif (isReplace) {\r\n\t\t\t\t\t\tobj1[key] = valAtObj2;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tobj1.push(valAtObj2);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// In case we're setting a read-only property\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tif (withSymbols) {\r\n\t\t\t\t\t\t\tObject.defineProperty(obj1, key, Object.getOwnPropertyDescriptor(obj2, key));\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tobj1[key] = obj2[key];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} catch(e) {}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\treturn obj1;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _mergeCallback from './mergeCallback.js';\r\n\r\n/**\r\n  * Merges values from subsequent arrays/objects first array/object;\r\n  * optionally recursive\r\n  *\r\n  * @param array ...objs\r\n  *\r\n  * @return void\r\n  */\r\nexport default function(...objs) {\r\n\treturn _mergeCallback(objs, (k, obj1, obj2) => {\r\n\t\treturn true;\r\n\t}, false/*deepProps*/, false/*isReplace*/, false/*withSymbols*/);\r\n};\r\n","\r\n/**\r\n * Tells if val is undefined or is null.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val === null || val === '';\r\n};\r\n","\r\n/**\r\n * Tells if val is undefined or is of type \"undefined\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn arguments.length && (val === undefined || typeof val === 'undefined');\r\n};\r\n","\r\n/**\r\n * Removes instances of reference up to <limit> times.\r\n *\r\n * @param array \tarr\r\n * @param mixed\t \titm\r\n * @param int|bool \tlimit\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, itm, limit = false) {\r\n\tvar i = arr.indexOf(itm);\r\n\twhile (i > -1 && (limit || limit === false)) {\r\n\t\tarr.splice(i, 1);\r\n\t\tif (limit > 0) {\r\n\t\t\tlimit --;\r\n\t\t};\r\n\t\ti = arr.indexOf(itm);\r\n\t};\r\n\treturn arr;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isObject from './isObject.js';\r\n\r\n/**\r\n * Tells if an object is direct instance of Object.prototype.\r\n * Quite useful in differentiating native objects and class instances from plain objects ({}).\r\n *\r\n * @param object \tobj\r\n *\r\n * @return bool\r\n */\r\nexport default function(obj) {\r\n\treturn _isObject(obj) && Object.getPrototypeOf(obj) === Object.prototype;\r\n};\r\n","\r\n/**\r\n * Tells if val is undefined or is of type \"boolean\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val === true || val === false;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\n\r\n/**\r\n * Loops thru obj flatly with a callback function.\r\n * Stops when callback returns a non-undefined value.\r\n *\r\n * @param array|object \t\t\tobj \t\t\tThe array or object to iterate.\r\n * @param function \t\t\t\tcallback \t\tThe callback function.\r\n *\r\n * @return mixed|null\t\t\tAny non-null return from callback\r\n */\r\nexport default function(obj, callback) {\r\n\tvar returnValue = undefined;\r\n\tif (_isTypeObject(obj)) {\r\n\t\tObject.keys(obj).forEach((k, i) => {\r\n\t\t\tif (returnValue !== false) {\r\n\t\t\t\treturnValue = callback(_isNumeric(k) ? parseFloat(k) : k, obj[k], i);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\treturn returnValue;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNumber from '../js/isNumber.js';\r\nimport _isArray from '../js/isArray.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _isPlainObject from '../js/isPlainObject.js';\r\nimport _compareCallback from './compareCallback.js';\r\n\r\n/**\r\n * Asserts (members of) the first value against (members of) subsequent values.\r\n * Assertion could be TRUE, FALSE, or custom.\r\n *\r\n * @param mixed \t\t\tobj1\r\n * @param mixed \t\t\tobj2\r\n * @param bool|function\t\tassertion\r\n * @param int\t\t\t\tdepth\r\n *\r\n * @return bool\r\n */\r\nconst _even = function(obj1, obj2, assertion = true, depth = 1) {\r\n\tif (_isArray(obj1) && _isArray(obj2) && obj1.length !== obj2.length) {\r\n\t\treturn !assertion;\r\n\t}\r\n\tif (_isObject(obj1) && _isObject(obj2)) {\r\n\t\tvar obj1Keys = Object.keys(obj1);\r\n\t\tvar obj2Keys = Object.keys(obj2);\r\n\t\tif (!obj1Keys.length && !obj2Keys.length) {\r\n\t\t\t// Objects that won't show keys must be compared by instance\r\n\t\t\t// Many native objects won't. So we can't judge by keys alone.\r\n\t\t\treturn _isPlainObject(obj1) && _isPlainObject(obj2) \r\n\t\t\t\t? assertion\r\n\t\t\t\t: (obj1 === obj2) === assertion;\r\n\t\t}\r\n\t\tif (!_even(obj1Keys, obj2Keys)) {\r\n\t\t\treturn !assertion;\r\n\t\t}\r\n\t}\r\n\tif (depth > 0 && ((_isArray(obj1) && _isArray(obj2)) || (_isObject(obj1) && _isObject(obj2)))) {\r\n\t\tvar result = _compareCallback(obj1, obj2, (v1, v2) => {\r\n\t\t\treturn _even(v1, v2, assertion, depth - 1);\r\n\t\t}, false/*netComparison*/, false/*contrast*/, true/*returnOnFirstFalse*/);\r\n\t\treturn _isArray(result) \r\n\t\t\t? result.length === obj1.length && result.length === obj2.length \r\n\t\t\t: (_isObject(result) && _isObject(obj1) \r\n\t\t\t\t? Object.keys(result).length === Object.keys(obj1).length && Object.keys(result).length ===  Object.keys(obj2).length \r\n\t\t\t\t: result);\r\n\t}\r\n\treturn _isFunction(assertion) ? assertion(obj1, obj2) : (\r\n\t\t_isNumber(obj1) && _isNumber(obj2) && isNaN(obj1) && isNaN(obj2) \r\n\t\t\t? assertion \r\n\t\t\t: (obj1 === obj2) === assertion\r\n\t);\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default _even;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isBoolean from '../js/isBoolean.js';\r\nimport _each from './each.js';\r\n\r\n/**\r\n * Gets the match(es) between (members of) two values;\r\n * assertion optionally custom.\r\n *\r\n * @param mixed \t\t\tob1\r\n * @param mixed \t\t\tobj2\r\n * @param string|function\tassertion\r\n * @param bool\t\t\t\tnetComparison\r\n * @param bool\t\t\t\tcontrast\r\n * @param bool\t\t\t\treturnOnFirstFalse\r\n *\r\n * @return bool|array|object\r\n */\r\nexport default function(obj1, obj2, assertion = true, netComparison = true, contrast = false, returnOnFirstFalse = false) {\r\n\tif (_isArray(obj1) && _isArray(obj2)) {\r\n\t\tvar result = [];\r\n\t\tvar contn = true;\r\n\t\tobj1.forEach(v1 => {\r\n\t\t\tif (!contn) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar testPass = false;\r\n\t\t\t_each(obj2, (k, v2) => {\r\n\t\t\t\tif (!testPass || (netComparison && _isTypeObject(v1))) {\r\n\t\t\t\t\ttestPass = assertion(v1, v2);\r\n\t\t\t\t\tif ((_isArray(testPass) && !testPass.length) || (_isObject(testPass) && !Object.keys(testPass).length)) {\r\n\t\t\t\t\t\ttestPass = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (_isTypeObject(testPass) && netComparison) {\r\n\t\t\t\t\t\t// Further recursions should use this testPass as v1\r\n\t\t\t\t\t\tv1 = testPass;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (_isTypeObject(testPass)) {\r\n\t\t\t\tresult.push(netComparison ? testPass : v1);\r\n\t\t\t} else if (!_isBoolean(testPass)) {\r\n\t\t\t\tresult.push(testPass);\r\n\t\t\t} else if ((contrast && !testPass) || (!contrast && testPass)) {\r\n\t\t\t\tresult.push(v1);\r\n\t\t\t} else if (returnOnFirstFalse) {\r\n\t\t\t\tcontn = false;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\tif (_isObject(obj1) && _isObject(obj2)) {\r\n\t\tvar result = {};\r\n\t\tvar contn = true;\r\n\t\tObject.keys(obj1).forEach(k => {\r\n\t\t\tif (!contn) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar testPass = assertion(obj1[k], obj2[k]);\r\n\t\t\tif ((_isArray(testPass) && !testPass.length) || (_isObject(testPass) && !Object.keys(testPass).length)) {\r\n\t\t\t\ttestPass = false;\r\n\t\t\t}\r\n\t\t\tif (_isTypeObject(testPass)) {\r\n\t\t\t\tresult[k] = netComparison ? testPass : obj1[k];\r\n\t\t\t} else if (!_isBoolean(testPass)) {\r\n\t\t\t\tresult[k] = testPass;\r\n\t\t\t} else if ((contrast && !testPass) || (!contrast && testPass)) {\r\n\t\t\t\tresult[k] = obj1[k];\r\n\t\t\t} else if (returnOnFirstFalse) {\r\n\t\t\t\tcontn = false;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isObject from '@webqit/util/js/isObject.js';\r\nimport _even from '@webqit/util/obj/even.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ExprInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class {\r\n\t\r\n\t/**\r\n\t * Compares the current instance with another object.\r\n\t *\r\n\t * @param object Expr\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\teven(Expr) {\r\n\t\tif (_isObject(Expr) && Expr.jsenType === this.jsenType) {\r\n\t\t\treturn _even(Expr, this);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Inherits properties from a super Expr.\r\n\t *\r\n\t * @param ExprInterface Super\r\n\t *\r\n\t * @return this\r\n\t */\r\n\tinherit(Super) {\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Adds comments to the instance.\r\n\t *\r\n\t * @param string\t comments\r\n\t *\r\n\t * @return this\r\n\t */\r\n\twithComments(comments) {\r\n\t\tif (!this.meta) {\r\n\t\t\tthis.meta = {};\r\n\t\t}\r\n\t\tthis.meta.comments = comments;\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Adds variables to the instance.\r\n\t *\r\n\t * @param array\t\t vars\r\n\t *\r\n\t * @return this\r\n\t */\r\n\twithVars(vars) {\r\n\t\tif (!this.meta) {\r\n\t\t\tthis.meta = {};\r\n\t\t}\r\n\t\tthis.meta.vars = vars;\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Evaluates the expression instance for a result,\r\n\t * optionally in the context of an object.\r\n\t *\r\n\t * @param object context\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\t//eval(context = null, params = {})\r\n\t\r\n\t/**\r\n\t * SAttempts to parse a string into the class instance.\r\n\t *\r\n\t * @param string expr\r\n\t * @param object params\r\n\t *\r\n\t * @return ExprInterface\r\n\t */\r\n\t//static parse(expr, params = {})\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ReferenceInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Reference'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * CallInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'CallExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from './ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * IndependentScopeInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class extends ExprInterface {};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * IfInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'IfConstruct'; },\r\n});\r\nexport default Interface;\r\n","/**\r\n * SyntaxError\r\n */\r\nexport default class extends Error {\r\n    constructor(...args) {\r\n        super(...args);\r\n        this.name = 'Syntax Error';\r\n    }\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _merge from '@webqit/util/obj/merge.js';\r\nimport _isEmpty from '@webqit/util/js/isEmpty.js';\r\nimport _remove from '@webqit/util/arr/remove.js';\r\nimport _isArray from '@webqit/util/js/isArray.js';\r\nimport ReferenceInterface from './grammar/ReferenceInterface.js';\r\nimport CallInterface from './grammar/CallInterface.js';\r\nimport IndependentExprInterface from './IndependentExprInterface.js';\r\nimport IfInterface from './grammar/IfInterface.js';\r\nimport SyntaxError from './SyntaxError.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Parser class\r\n * ---------------------------\r\n */\t\t\t\t\r\nconst cache = {};\r\nexport default class Parser {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, grammar, params = {}) {\r\n\t\tif (expr.length) {\r\n\t\t\tif (cache[expr] && !grammar && params.allowCache !== false) {\r\n\t\t\t\tvar _parsed;\r\n\t\t\t\tif (_parsed = this.parseOne(expr, cache[expr], params)) {\r\n\t\t\t\t\treturn _parsed;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// -----------------------------\r\n\t\t\tvar _grammar = Object.values(grammar || this.grammar);\r\n\t\t\tfor (var i = 0; i < _grammar.length; i ++) {\r\n\t\t\t\tvar parsed = this.parseOne(expr, _grammar[i], params);\r\n\t\t\t\tif (parsed) {\r\n\t\t\t\t\tif (!grammar && params.allowCache !== false) {\r\n\t\t\t\t\t\tcache[expr] = _grammar[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn parsed;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// -----------------------------\r\n\t\t\tif (params.assert === false) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthrow new SyntaxError(expr);\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\r\n\tstatic parseOne(expr, Expr, params = {}) {\r\n\t\t// From this point forward, all vars is within current scope\r\n\t\tvar vars = [], deepVars = [], varsUnlodged = [], deepVarsUnlodged = [];\r\n\t\tvar parsed = Expr.parse(expr, (_expr, _grammar, _params = {}) => {\r\n\t\t\tvar subStmt = this.parse(_expr, _grammar, _params ? _merge({}, params, _params) : params);\r\n\t\t\tif (subStmt instanceof ReferenceInterface) {\r\n\t\t\t\tvar hasCallHead, _context = subStmt;\r\n\t\t\t\twhile(_context = _context.context) {\r\n\t\t\t\t\tif (_context instanceof CallInterface) {\r\n\t\t\t\t\t\thasCallHead = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (!hasCallHead && subStmt.role !== 'CONTEXT') {\r\n\t\t\t\t\tif (_params.lodge) {\r\n\t\t\t\t\t\tvarsUnlodged.push(subStmt);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvars.push(subStmt);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (subStmt instanceof CallInterface) {\r\n\t\t\t\tvarsUnlodged.push(subStmt);\r\n\t\t\t}\r\n\t\t\tif (subStmt) {\r\n\t\t\t\tsubStmt.meta.vars.forEach(_var => vars.push(_var));\r\n\t\t\t\tsubStmt.meta.deepVars.forEach(_var => deepVars.push(_var));\r\n\t\t\t}\r\n\t\t\treturn subStmt;\r\n\t\t}, params);\r\n\r\n\t\t// Add/remove vars to scope\r\n\t\tif (parsed) {\r\n\t\t\tif (parsed instanceof IndependentExprInterface) {\r\n\t\t\t\tparsed.meta = {\r\n\t\t\t\t\tvars: [], deepVars: [], varsUnlodged: [], deepVarsUnlodged: [], \r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tparsed.meta = {\r\n\t\t\t\t\tvars, deepVars, varsUnlodged, deepVarsUnlodged,\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tif ((parsed instanceof CallInterface)) {\r\n\t\t\t\tif (parsed.reference.context && !(parsed.reference.context instanceof CallInterface)) {\r\n\t\t\t\t\tparsed.meta.vars.push(parsed.reference.context);\r\n\t\t\t\t}\r\n\t\t\t} else if ((parsed instanceof IfInterface)) {\r\n\t\t\t\tif (parsed.onTrue) {\r\n\t\t\t\t\tparsed.onTrue.meta.vars.concat(parsed.onTrue.meta.deepVars).forEach(_var => {\r\n\t\t\t\t\t\t_remove(parsed.meta.vars, _var);\r\n\t\t\t\t\t\tparsed.meta.deepVars.push(_var);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tparsed.onTrue.meta.varsUnlodged.concat(parsed.onTrue.meta.deepVarsUnlodged).forEach(_var => {\r\n\t\t\t\t\t\t_remove(parsed.meta.varsUnlodged, _var);\r\n\t\t\t\t\t\tparsed.meta.deepVarsUnlodged.push(_var);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif (parsed.onFalse) {\r\n\t\t\t\t\tparsed.onFalse.meta.vars.concat(parsed.onFalse.meta.deepVars).forEach(_var => {\r\n\t\t\t\t\t\t_remove(parsed.meta.vars, _var);\r\n\t\t\t\t\t\tparsed.meta.deepVars.push(_var);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tparsed.onFalse.meta.varsUnlodged.concat(parsed.onFalse.meta.deepVarsUnlodged).forEach(_var => {\r\n\t\t\t\t\t\t_remove(parsed.meta.varsUnlodged, _var);\r\n\t\t\t\t\t\tparsed.meta.deepVarsUnlodged.push(_var);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (_isArray(params.explain)) {\r\n\t\t\t\tparams.explain.push(expr + ' >>------------->> ' + parsed.jsenType);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn parsed;\r\n\t}\r\n};","\r\n/**\r\n * Tells if the string is warapped with the given opening and closing tags.\r\n *\r\n * @param  string  subject\r\n * @param  string  openingTag\r\n * @param  string  closingTag\r\n *\r\n * @return bool\r\n */\r\nexport default function(subject, openingTag, closingTag) {\r\n\treturn subject.startsWith(openingTag) && subject.endsWith(closingTag);\r\n};\r\n","\r\n/**\r\n * Return the remainder of a string after a given value.\r\n *\r\n * @param  string  subject\r\n * @param  string  search\r\n * @param  bool\t   afterLast\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, search, afterLast = false) {\r\n\tif (search == '') {\r\n\t\treturn subject;\r\n\t}\r\n\tvar pos = afterLast ? subject.lastIndexOf(search) : subject.indexOf(search);\r\n\tif (pos === -1) {\r\n\t\treturn '';\r\n\t}\r\n\treturn subject.substr(pos + search.length);\r\n};\r\n","\r\n/**\r\n * Return the part of a string before a given value.\r\n *\r\n * @param  string  subject\r\n * @param  string  search\r\n * @param  bool\t   beforeLast\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, search, beforeLast = false) {\r\n\tif (search == '') {\r\n\t\treturn subject;\r\n\t}\r\n\tvar pos = beforeLast ? subject.lastIndexOf(search) : subject.indexOf(search);\r\n\tif (pos === -1) {\r\n\t\treturn subject;\r\n\t}\r\n\treturn subject.substr(0, pos);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _after from './after.js';\r\nimport _beforeLast from './beforeLast.js';\r\n\r\n/**\r\n * Returns the string without the given opening and closing tags.\r\n *\r\n * @param  string  subject\r\n * @param  string  openingTag\r\n * @param  string  closingTag\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, openingTag, closingTag) {\r\n\treturn _beforeLast(_after(subject, openingTag), closingTag);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _before from './before.js';\r\n\r\n/**\r\n * Return the part of a string before last occurence of a given value.\r\n *\r\n * @param  string  subject\r\n * @param  string  search\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, search) {\r\n\treturn _before(subject, search, true);\r\n};\r\n","\r\n/**\r\n * Tells if val is of type \"string\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val instanceof String || (typeof val === 'string' && val !== null);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isTypeArray from '../js/isTypeArray.js';\r\nimport _isEmpty from '../js/isEmpty.js';\r\nimport _isObject from '../js/isObject.js';\r\n\r\n/**\r\n * Casts an array-like object to an array.\r\n *\r\n * @param mixed \tval\r\n * @param bool\t \tcastObject\r\n *\r\n * @return array\r\n */\r\nexport default function(val, castObject = true) {\r\n\tif (_isArray(val)) {\r\n\t\treturn val;\r\n\t};\r\n\tif (!castObject && _isObject(val)) {\r\n\t\treturn [val];\r\n\t};\r\n\tif (val !== false && val !== 0 && _isEmpty(val)) {\r\n\t\treturn [];\r\n\t};\r\n\tif (_isTypeArray(val)) {\r\n\t\treturn Array.prototype.slice.call(val);\r\n\t};\r\n\tif (_isObject(val)) {\r\n\t\treturn Object.values(val);\r\n\t};\r\n\treturn [val];\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNull from './isNull.js';\r\nimport _isUndefined from './isUndefined.js';\r\nimport _isTypeObject from './isTypeObject.js';\r\n\r\n/**\r\n * Tells if val is empty in its own type.\r\n * This holds true for NULLs, UNDEFINED, FALSE, 0,\r\n * objects without keys, empty arrays.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isNull(val) || _isUndefined(val) || val === false || val === 0 \r\n\t\t|| (_isTypeObject(val) && !Object.keys(val).length);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isString from './isString.js';\r\nimport _isUndefined from './isUndefined.js';\r\n\r\n/**\r\n * Tells if val is \"array-like\".\r\n * This holds true for anything that has a length property.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn !_isString(val) && !_isUndefined(val.length);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\n\r\n/**\r\n * Flattens a nested array to the given depth.\r\n *\r\n * @param array \tarr\r\n * @param int \t \tdepth\r\n * @param bool \t \twithObjects\r\n *\r\n * @return array\r\n */\r\nconst _flatten = function(arr, depth = 1, withObjects = true) {\r\n\tif (!_isNumeric(depth) || depth <= 0) {\r\n\t\treturn arr;\r\n\t};\r\n\tif (!_isArray(arr) && _isObject(arr) && withObjects) {\r\n\t\tarr = Object.values(arr);\r\n\t};\r\n\tif (!_isArray(arr)) {\r\n\t\treturn arr;\r\n\t};\r\n\treturn arr.reduce((acc, val) => _isArray(val) || (_isObject(val) && withObjects) \r\n\t\t? acc.concat(_flatten(!_isArray(val) ? Object.values(val) : val, depth - 1, withObjects)) \r\n\t\t: acc.concat(val), []);\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default _flatten;","\r\n/**\r\n * Returns THE FIRST ENTRY OR A NUMBER OF ENTRIES counting forward from the begining.\r\n *\r\n * @param array \tarr\r\n * @param int\t \tamount\r\n *\r\n * @return mixed|array\r\n */\r\nexport default function(arr, amount = 1) {\r\n\tvar count = 0;\r\n\tarr.forEach(itm => {\r\n\t\tcount ++;\r\n\t});\r\n\tvar firsts = arr.slice(arr.length - count, amount);\r\n\treturn arguments.length > 1 ? firsts : firsts[0];\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _first from './first.js';\r\n\r\n/**\r\n * Returns THE LAST ENTRY OR A NUMBER OF ENTRIES counting forward to the end.\r\n *\r\n * @param array \tarr\r\n * @param int\t \tamount\r\n *\r\n * @return mixed|array\r\n */\r\nexport default function(arr, amount = 1) {\r\n\treturn arguments.length > 1\r\n\t\t? _first(arr.slice().reverse(), amount).reverse()\r\n\t\t: _first(arr.slice().reverse());\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _mergeCallback from './mergeCallback.js';\r\n\r\n/**\r\n * Copies only properties of an object.\r\n *\r\n * @param object\t \tobj\r\n * @param array\t\t \tonly\r\n * @param array\t\t \texcept\r\n *\r\n * @return object\r\n */\r\nexport default function(obj, filter = []) {\r\n\treturn _mergeCallback([{}, obj], (key, obj1, obj2) => {\r\n\t\tif (!_isFunction(obj2[key])) {\r\n\t\t\treturn _isFunction(filter) ? filter(key) \r\n\t\t\t\t: (_isArray(filter) && filter.length ? filter.indexOf(key) > -1 : true);\r\n\t\t}\r\n\t}, false/*deepProps*/, false/*isReplace*/, false/*withSymbols*/);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isString from '../js/isString.js';\r\nimport _isUndefined from '../js/isUndefined.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _arrFrom from '../arr/from.js';\r\nimport _flatten from '../arr/flatten.js';\r\nimport _first from '../arr/first.js';\r\nimport _last from '../arr/last.js';\r\nimport _merge from '../obj/merge.js';\r\nimport _even from '../obj/even.js';\r\nimport _copyPlain from '../obj/copyPlain.js';\r\n\r\n/**\r\n * --------------------------\r\n * TOKENIZER\r\n * --------------------------\r\n */\r\n\r\nexport default class Lexer {\r\n\r\n\t/**\r\n\t * Factory method.\r\n\t *\r\n\t * Handles caching.\r\n\t *\r\n\t * @see constructor()\r\n\t */\r\n\tstatic lex(str, delims, options = {}) {\r\n\t\tif (!_isString(str = str + '')) {\r\n\t\t\tthrow new Error('Argument1 must be a string!');\r\n\t\t}\r\n\t\tvar copyResult = result => {\r\n\t\t\treturn {\r\n\t\t\t\tdelims: result.delims.slice(),\r\n\t\t\t\toptions: _copyPlain(result.options),\r\n\t\t\t\tnesting: result.nesting.slice(),\r\n\t\t\t\tmaxDepth: result.maxDepth,\r\n\t\t\t\tcomments: result.comments.slice(),\r\n\t\t\t\ttokens: result.tokens.slice(),\r\n\t\t\t\tmatches: result.matches.slice(),\r\n\t\t\t\tmatchesi: _copyPlain(result.matchesi),\r\n\t\t\t};\r\n\t\t};\r\n\t\t// ASK CACHE ---------------------------\r\n\t\tif (Lexer.$cache[str] && options.cache !== false) {\r\n\t\t\tfor (var i = 0; i < Lexer.$cache[str].length; i ++) {\r\n\t\t\t\tvar cached = Lexer.$cache[str][i];\r\n\t\t\t\tif (_even(cached.delims, delims)) {\r\n\t\t\t\t\treturn copyResult(cached);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// FRESH PARSE\t -------------------------------\r\n\t\tvar instance = new Lexer(str, options);\r\n\t\tvar result = instance.lex(delims);\r\n\t\t// SAVE TO CACHE -------------------------------\r\n\t\tif (options.cache !== false) {\r\n\t\t\tLexer.$cache[str] = Lexer.$cache[str] || [];\r\n\t\t\tLexer.$cache[str].push(result);\r\n\t\t}\r\n\t\treturn copyResult(result);\r\n\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Factory method for .split().\r\n\t *\r\n\t * Handles caching.\r\n\t *\r\n\t * @see constructor()\r\n\t */\r\n\tstatic split(str, delims, options) {\r\n\t\treturn Lexer.lex(str, delims, options).tokens;\r\n\t}\r\n\r\n\t/**\r\n\t * Factory method for .match().\r\n\t *\r\n\t * Handles caching.\r\n\t *\r\n\t * @see constructor()\r\n\t */\r\n\tstatic match(str, delims, options) {\r\n\t\treturn Lexer.lex(str, delims, options).matches;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a lexer instance on a string with the given options.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions:\r\n\t * @param string \t\tblocks\t\t\t\tThe strings that begin and end a nested structure\r\n\t * @param number \t\tlimit\t\t\t\tMax results to return\r\n\t * @param string \t\tbackreference\t\tA character like (\\) that prefixes non-delim characters\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tconstructor(str, options) {\r\n\t\tif (!_isString(str)) {\r\n\t\t\tthrow new Error('Lexer requires the first argument to be a string.');\r\n\t\t}\r\n\t\tthis.$str = str;\r\n\t\tthis.$options = options || {};\r\n\t\tif (!this.$options.blocks) {\r\n\t\t\tthis.$options.blocks = Lexer.$blocks;\r\n\t\t}\r\n\t\tif (!this.$options.quotes) {\r\n\t\t\tthis.$options.quotes = Lexer.$quotes;\r\n\t\t}\r\n\t\tif (!this.$options.comments) {\r\n\t\t\tthis.$options.comments = Lexer.$comments;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the instance string on the given delimeters.\r\n\t *\r\n\t * This method supports static calling,\r\n\t * in which case a string is required as the first argument.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return object\r\n\t */\r\n\tlex(delims, options) {\r\n\t\tvar runtime = {\r\n\t\t\tdelims: _arrFrom(delims),\r\n\t\t\toptions: _merge(true, {}, this.$options, options || {}),\r\n\t\t\tnesting: [],\r\n\t\t\tmaxDepth: 0,\r\n\t\t\tcomments: [],\r\n\t\t\ttokens: [],\r\n\t\t\tmatches: [],\r\n\t\t\tmatchesi: {},\r\n\t\t};\r\n\t\t// Iterate over each character, keep track of current row and column (of the returned array)\r\n\t\tvar cursor = 0;\r\n\t\twhile(typeof cursor === 'number') {\r\n\t\t\tcursor = this._evalCharsAt(runtime, cursor);\r\n\t\t}\r\n\t\tif (runtime.nesting.length) {\r\n\t\t\tthrow new Error('Error parsing the string: ' + this.$str + '. Unterminated blocks: ' + _flatten(runtime.nesting).join(', ') + '');\r\n\t\t}\r\n\t\t// RETURN NEW ----------------------------------\r\n\t\treturn runtime;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: evaluates and handles the character on the current cursor.\r\n\t * Advances the cursor.\r\n\t *\r\n\t * @param object \truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return void\r\n\t */\r\n\t_evalCharsAt(runtime, i) {\r\n\t\tif (i >= this.$str.length) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar charWidth = 1;\r\n\t\tvar commentTest = {}, quoteTest = {}, nestingTest = {};\r\n\t\t// Quotes inside comments must be ignored\r\n\t\tif (!runtime.openComment) {\r\n\t\t\tquoteTest = this._testQuotes(runtime, i);\r\n\t\t}\r\n\t\t// Comments inside quotes must be ignored\r\n\t\tif (!runtime.openQuote) {\r\n\t\t\tcommentTest = this._testComments(runtime, i);\r\n\t\t}\r\n\t\t// Save comments\r\n\t\tif (runtime.openComment || commentTest.ending) {\r\n\t\t\t// Save only outer comments\r\n\t\t\tif (!runtime.nesting.length && !nestingTest.ending) {\r\n\t\t\t\tvar chars = commentTest.starting || commentTest.ending || this.$str[i];\r\n\t\t\t\tcharWidth = chars.length;\r\n\t\t\t\tthis._push(runtime, chars, 'comments', commentTest.starting);\r\n\t\t\t} else {\r\n\t\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t\t}\r\n\t\t} else if (runtime.openQuote || quoteTest.ending) {\r\n\t\t\t// Yes add quotes\r\n\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t} else if (runtime.options.limit && runtime.matches.length === runtime.options.limit) {\r\n\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t\treturn i + 1;\r\n\t\t} else {\r\n\t\t\t// Nesting tags inside comments and quotes have been ignored\r\n\t\t\tnestingTest = this._testNesting(runtime, i);\r\n\t\t\t// ---------------------\r\n\t\t\t// STOP ON THIS CHARACTER...?\r\n\t\t\t// ---------------------\r\n\t\t\tvar nestingTest = this._testNesting(runtime, i);\r\n\t\t\t// STOP CHAR(S)? at top level?\r\n\t\t\tvar stopChar = this._testChars(runtime.options.stopChars || [], runtime, i);\r\n\t\t\tif (!runtime.nesting.length && stopChar !== false) {\r\n\t\t\t\truntime.options.stopChar = stopChar;\r\n\t\t\t\truntime.options.stopCharForward = this.$str.substr(i);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t// ---------------------\r\n\t\t\t// Match and split now...\r\n\t\t\t// ---------------------\r\n\t\t\tif (!runtime.delims.length) {\r\n\t\t\t\t// BLOCK-BASED SPLITTING...\r\n\t\t\t\tif (runtime.nesting.length === 2 && nestingTest.starting) {\r\n\t\t\t\t\truntime.matches.push(null);\r\n\t\t\t\t\tthis._push(runtime, nestingTest.starting);\r\n\t\t\t\t\tcharWidth = nestingTest.starting.length;\r\n\t\t\t\t} else if (!runtime.nesting.length && nestingTest.ending) {\r\n\t\t\t\t\tthis._push(runtime, nestingTest.ending);\r\n\t\t\t\t\tcharWidth = nestingTest.ending.length;\r\n\t\t\t\t\truntime.matches.push(null);\r\n\t\t\t\t} else/*no-nesting flag*/ {\r\n\t\t\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// ---------------------\r\n\t\t\t\t// DELIMS-BASED SPLITTING\r\n\t\t\t\t// ---------------------\r\n\t\t\t\tif (!runtime.nesting.length && !nestingTest.ending) {\r\n\t\t\t\t\t// In case the chars at index 0 is a delim,\r\n\t\t\t\t\t// the resulting split should first have an empty string, instead of undefined\r\n\t\t\t\t\tthis._push(runtime, '');\r\n\t\t\t\t\tvar matchedDelim = this._testChars(runtime.delims, runtime, i);\r\n\t\t\t\t\tif (matchedDelim !== false) {\r\n\t\t\t\t\t\truntime.matches.push(matchedDelim);\r\n\t\t\t\t\t\truntime.matchesi[i] = matchedDelim;\r\n\t\t\t\t\t\tcharWidth = matchedDelim.length || 1;\r\n\t\t\t\t\t\tif (!runtime.options.preserveDelims) {\r\n\t\t\t\t\t\t\t// The current character is a delimiter...\r\n\t\t\t\t\t\t\t// and should not get to appending to the split series down the line\r\n\t\t\t\t\t\t\tvar nextIndex = i + (matchedDelim.length || 1);\r\n\t\t\t\t\t\t\tif (nextIndex === this.$str.length) {\r\n\t\t\t\t\t\t\t\t// In case the chars at last index is a delim,\r\n\t\t\t\t\t\t\t\t// the resulting split should last have an empty string\r\n\t\t\t\t\t\t\t\tthis._push(runtime, '');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn nextIndex;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._push(runtime, matchedDelim || this.$str[i]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar chars = nestingTest.starting || nestingTest.ending || this.$str[i];\r\n\t\t\t\t\tcharWidth = chars.length;\r\n\t\t\t\t\tthis._push(runtime, chars);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn i + charWidth;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a quote start/end character on the current cursor.\r\n\t *\r\n\t * @param object\truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return object\r\n\t */\r\n\t_testQuotes(runtime, i) {\r\n\t\tvar result = {};\r\n\t\t(runtime.options.quotes || []).forEach(quote => {\r\n\t\t\tif (this.$str.substr(i, 1) === quote) {\r\n\t\t\t\tif (!runtime.openQuote) {\r\n\t\t\t\t\truntime.openQuote = quote;\r\n\t\t\t\t\tresult.starting = quote;\r\n\t\t\t\t} else if (quote === runtime.openQuote) {\r\n\t\t\t\t\truntime.openQuote = false;\r\n\t\t\t\t\tresult.ending = quote;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a comment start/end character on the current cursor.\r\n\t *\r\n\t * @param object\truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return object\r\n\t */\r\n\t_testComments(runtime, i) {\r\n\t\tvar result = {};\r\n\t\t(runtime.options.comments || []).forEach(block => {\r\n\t\t\tif (!runtime.openComment) {\r\n\t\t\t\tvar starting = _first(block);\r\n\t\t\t\tif (this.$str.substr(i).startsWith(starting)) {\r\n\t\t\t\t\truntime.openComment = block;\r\n\t\t\t\t\tresult.starting = starting;\r\n\t\t\t\t}\r\n\t\t\t} else if (_last(block) === _last(runtime.openComment)) {\r\n\t\t\t\tvar ending = _last(block);\r\n\t\t\t\tif (this.$str.substr(i).startsWith(ending)) {\r\n\t\t\t\t\truntime.openComment = false;\r\n\t\t\t\t\tresult.ending = ending;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a nesting start/end character on the current cursor.\r\n\t *\r\n\t * @param object\truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return object\r\n\t */\r\n\t_testNesting(runtime, i) {\r\n\t\tvar result = {};\r\n\t\t(runtime.options.blocks || []).forEach(block => {\r\n\t\t\tvar starting = _first(block);\r\n\t\t\tif (this.$str.substr(i).startsWith(starting)) {\r\n\t\t\t\truntime.nesting = runtime.nesting.concat([block]);\r\n\t\t\t\tresult.starting = starting;\r\n\t\t\t} else if (runtime.nesting.length && _last(block) === _last(_last(runtime.nesting))) {\r\n\t\t\t\tvar ending = _last(block);\r\n\t\t\t\tif (this.$str.substr(i).startsWith(ending)) {\r\n\t\t\t\t\truntime.nesting = runtime.nesting.slice(0, -1);\r\n\t\t\t\t\tresult.ending = ending;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\truntime.maxDepth = Math.max(runtime.maxDepth, runtime.nesting.length);\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a delimiter or stop character on the current cursor.\r\n\t *\r\n\t * @param array\t\ttestList\r\n\t * @param object \truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\t_testChars(testList, runtime, i) {\r\n\t\tfor (var k = 0; k < testList.length; k ++) {\r\n\t\t\tvar test = testList[k];\r\n\t\t\tif (_isFunction(test)) {\r\n\t\t\t\tvar ret = test(this.$str.substr(0, i), this.$str.substr(i));\r\n\t\t\t\tif (ret !== false) {\r\n\t\t\t\t\treturn ret;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (runtime.options.useRegex) {\r\n\t\t\t\tvar m = this.$str.substr(i).match(new RegExp('^' + test, runtime.options.useRegex !== true ? runtime.options.useRegex : ''));\r\n\t\t\t\tif (m) {\r\n\t\t\t\t\treturn m[0];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ((!runtime.options.ci && this.$str.substr(i, test.length) === test)\r\n\t\t\t|| (runtime.options.ci && this.$str.substr(i, test.length).toLowerCase() === test.toLowerCase())) {\r\n\t\t\t\treturn test;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Expr helper: pushes a character or set of characters into the current split series.\r\n\t *\r\n\t * @param object \truntime\r\n\t * @param string\tchars\r\n\t * @param string\ttarget\r\n\t * @param bool\t\tisNewSeries\r\n\t *\r\n\t * @return void\r\n\t */\r\n\t_push(runtime, chars, target = 'tokens', isNewSeries = false) {\r\n\t\tvar splitSeries = runtime.matches.length;\r\n\t\tif (_isUndefined(runtime.tokens[splitSeries])) {\r\n\t\t\truntime.tokens[splitSeries] = '';\r\n\t\t}\r\n\r\n\t\tif (target === 'comments') {\r\n\t\t\tif (!runtime.tokens[splitSeries].comments) {\r\n\t\t\t\truntime.tokens[splitSeries] = new String(runtime.tokens[splitSeries]);\r\n\t\t\t\truntime.tokens[splitSeries].comments = [];\r\n\t\t\t}\r\n\t\t\tvar splitSeries2 = runtime.tokens[splitSeries].comments.length - (!runtime.tokens[splitSeries].comments.length || isNewSeries ? 0 : 1);\r\n\t\t\truntime.tokens[splitSeries].comments[splitSeries2] = (runtime.tokens[splitSeries].comments[splitSeries2] || '') + chars;\r\n\t\t} else {\r\n\t\t\tvar comments = runtime.tokens[splitSeries].comments;\r\n\t\t\truntime.tokens[splitSeries] = runtime.tokens[splitSeries] + chars;\r\n\t\t\t//runtime.tokens[splitSeries].comments = comments;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Splits the instance string on the given delimeters and returns the tokens.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tsplit(str, delims, options) {\r\n\t\treturn this.lex(delims, options).tokens;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Splits the instance string on the given delimeters and returns the matches.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions:\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tmatch(str, delims, options) {\r\n\t\treturn this.lex(delims, options).matches;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Parses the instance string on the given delimeters using regex.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return object\r\n\t */\r\n\tregParse(delims, options) {\r\n\t\treturn this.lex(delims, _merge({useRegex: true}, options || {}));\r\n\t}\r\n\t\r\n\t/**\r\n\t * Splits the instance string on the given delimeters using regex; returns the tokens.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tregSplit(delims, options) {\r\n\t\treturn this.regParse(delims, options).tokens;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Matches the instance string on the given delimeters using regex; returns the matches.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tregMatch(delims, options) {\r\n\t\treturn this.regParse(delims, options).matches;\r\n\t}\r\n};\r\n\r\n/**\r\n * @var array\r\n */\r\nLexer.$blocks = [['(', ')'], ['[', ']'], ['{', '}'],];\r\n\r\n/**\r\n * @var array\r\n */\r\nLexer.$quotes = ['\"', \"'\", '`',];\r\n\r\n/**\r\n * @var array\r\n */\r\nLexer.$comments = [['/*', '*/'], ['//', \"\\n\"],];\r\n\r\n/**\r\n * @var object\r\n */\r\nLexer.$cache = {};","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * AbstractionInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Abstraction'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport AbstractionInterface from './AbstractionInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Abstraction class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Abstraction = class extends AbstractionInterface {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(expr) {\r\n\t\tsuper();\r\n\t\tthis.expr = expr;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.expr.eval(context, params);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn '(' + this.expr.stringify(params) + ')';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (_wrapped(expr, '(', ')') && !Lexer.match(expr, [' ']).length) {\r\n\t\t\treturn new this(\r\n\t\t\t\tparseCallback(_unwrap(expr, '(', ')'))\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Abstraction;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ArrInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'ArrayType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\nimport ArrInterface from './ArrInterface.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Array utils\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Arr = class extends ArrInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(exprs) {\r\n\t\tsuper();\r\n\t\tthis.exprs = exprs || [];\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tinherit(Super) {\r\n\t\tif (Super instanceof ArrInterface) {\r\n\t\t\tvar newExprs = Super.exprs.filter(exprA => {\r\n\t\t\t\treturn this.exprs.reduce((uniqueSoFar, exprB) => uniqueSoFar && !exprA.even(exprB), true);\r\n\t\t\t});\r\n\t\t\tthis.exprs = newExprs.concat(this.exprs);\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.exprs.map(expr => expr.eval(context, params));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn '[' + this.exprs.map(expr => expr.stringify(params)).join(', ') + ']';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (_wrapped(expr, '[', ']') && !Lexer.match(expr.trim(), [' ']).length) {\r\n\t\t\tvar splits = Lexer.split(_unwrap(expr, '[', ']'), [','])\r\n\t\t\t\t.map(n => n.trim()).filter(n => n).map(expr => parseCallback(expr));\r\n\t\t\treturn new this(splits);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @export\r\n */\r\nexport default Arr;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ArgumentsInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Arguments'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport ArgumentsInterface from './ArgumentsInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Arguments class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Arguments = class extends ArgumentsInterface {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(list = []) {\r\n\t\tsuper();\r\n\t\tthis.list = list;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.list.map(arg => arg.eval(context, params));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn '(' + this.list.map(arg => arg.stringify(params)).join(', ') + ')';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar args; expr = expr.trim();\r\n\t\tif (_wrapped(expr, '(', ')') && !Lexer.match(expr, [' ']).length) {\r\n\t\t\treturn new this(\r\n\t\t\t\tLexer.split(_unwrap(expr, '(', ')'), [',']).map(arg => parseCallback(arg.trim()))\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Arguments;\r\n","\r\n/**\r\n * Returns a list of unique items.\r\n *\r\n * @param array\t \t\t\t\tarr\r\n *\t *\r\n * @return array\r\n */\r\nexport default function(arr) {\r\n\tconst distinct = (value, index, self) => {\r\n\t\treturn self.indexOf(value) === index;\r\n\t};\r\n\treturn arr.filter(distinct);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * AssertionInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'AssertionExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _first from '@webqit/util/arr/first.js';\r\nimport _flatten from '@webqit/util/arr/flatten.js';\r\nimport _unique from '@webqit/util/arr/unique.js';\r\nimport AssertionInterface from './AssertionInterface.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Assertion class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Assertion = class extends AssertionInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(exprs, logic) {\r\n\t\tsuper();\r\n\t\tthis.exprs = exprs;\r\n\t\tthis.logic = logic;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\t eval(context = null, params = {}) {\r\n\t\tvar Assertion = this.constructor;\r\n\t\tif (this.logic.toLowerCase() === Assertion.negation.toLowerCase()) {\r\n\t\t\treturn !_first(this.exprs).eval(context, params);\r\n\t\t}\r\n\t\tvar operators = _flatten(Assertion.operators);\r\n\t\tvar logic = (this.logic || '').trim().toUpperCase();\r\n\t\tvar isOr = logic === (Assertion.operators.or || '').trim().toUpperCase();\r\n\t\tvar isNor = logic === (Assertion.operators.nor || '').trim().toUpperCase();\r\n\t\tvar isAnd = logic === (Assertion.operators.and || '').trim().toUpperCase();\r\n\t\tvar isNand = logic === (Assertion.operators.nand || '').trim().toUpperCase();\r\n\t\tvar lastResult = true, trues = 0;\r\n\t\tfor(var i = 0; i < this.exprs.length; i ++) {\r\n\t\t\tlastResult = this.exprs[i].eval(context, params);\r\n\t\t\tif (isAnd && !lastResult) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (isNand && !lastResult) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tif (isOr && lastResult) {\r\n\t\t\t\treturn lastResult;\r\n\t\t\t}\r\n\t\t\ttrues += lastResult ? 1 : 0;\r\n\t\t}\r\n\t\tif (isOr) {\r\n\t\t\t// Which is falsey,\r\n\t\t\t// by virtue of getting here\r\n\t\t\treturn lastResult;\r\n\t\t}\r\n\t\tif (isAnd || isNand) {\r\n\t\t\t// For AND and NAND, all entries must be true by now,\r\n\t\t\t// by virtue of getting here.\r\n\t\t\t// For AND, this means true; for NAND, false\r\n\t\t\treturn isAnd;\r\n\t\t}\r\n\t\t// For NOR, all entries need to be false\r\n\t\treturn isNor && trues === 0;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\tvar Assertion = this.constructor;\r\n\t\tif (this.logic.toLowerCase() === Assertion.negation.toLowerCase()) {\r\n\t\t\treturn this.logic + _first(this.exprs).stringify(params);\r\n\t\t}\r\n\t\treturn this.exprs.map(expr => expr.stringify(params)).join(' ' + this.logic + ' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (expr.toUpperCase().startsWith(this.negation.toUpperCase())) {\r\n\t\t\treturn new this(\r\n\t\t\t\t[parseCallback(expr.substr(this.negation.length))],\r\n\t\t\t\tthis.negation\r\n\t\t\t);\r\n\t\t}\r\n\t\tvar parse = Lexer.lex(expr, _flatten(this.operators));\r\n\t\tif (parse.tokens.length > 1) {\r\n\t\t\tvar logic = _unique(parse.matches);\r\n\t\t\tif (logic.length > 1) {\r\n\t\t\t\tthrow new Error('\"AND\" and \"OR\" logic cannot be asserted in the same expression: ' + expr + '!');\r\n\t\t\t}\r\n\t\t\treturn new this(\r\n\t\t\t\tparse.tokens.map(expr => parseCallback(expr.trim())),\r\n\t\t\t\t_first(logic)\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nAssertion.negation = '!';\r\n\r\n/**\r\n * @prop object\r\n */\r\nAssertion.operators = {\r\n\tand: '&&',\r\n\tor: '||',\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Assertion;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * AssignmentInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'AssignmentExpression'; },\r\n});\r\nexport default Interface;\r\n","/**\r\n * ReferenceError\r\n */\r\nexport default class extends Error {\r\n    constructor(...args) {\r\n        super(...args);\r\n        this.name = 'Reference Error';\r\n    }\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _last from '@webqit/util/arr/last.js';\r\nimport _before from '@webqit/util/str/before.js';\r\nimport _after from '@webqit/util/str/after.js';\r\nimport _isNumber from '@webqit/util/js/isNumber.js';\r\nimport _isArray from '@webqit/util/js/isArray.js';\r\nimport _isUndefined from '@webqit/util/js/isUndefined.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport AssignmentInterface from './AssignmentInterface.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport SyntaxError from '../SyntaxError.js';\r\nimport ReferenceError from '../ReferenceError.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Assignment class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Assignment = class extends AssignmentInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(initKeyword, reference, val, operator = '=', postIncrDecr = false) {\r\n\t\tsuper();\r\n\t\tthis.initKeyword = initKeyword;\r\n\t\tthis.reference = reference;\r\n\t\tthis.val = val;\r\n\t\tthis.operator = operator;\r\n\t\tthis.postIncrDecr = postIncrDecr;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\tvar val, initialVal, reference = this.reference.getEval(context, params);\r\n\t\tif (['++', '--'].includes(this.operator)) {\r\n\t\t\tinitialVal = this.reference.eval(context, params);\r\n\t\t\tif (!_isNumber(initialVal)) {\r\n\t\t\t\tthrow new Error(this.reference + ' must be a number!');\r\n\t\t\t}\r\n\t\t\tif (this.operator === '++') {\r\n\t\t\t\tval = initialVal + 1;\r\n\t\t\t} else {\r\n\t\t\t\tval = initialVal - 1;\r\n\t\t\t}\r\n\t\t} else if (['+=', '-=', '*=', '/='].includes(this.operator)) {\r\n\t\t\tvar operandA = reference.get();\r\n\t\t\tvar operandB = this.val.eval(context, params);\r\n\t\t\tif (this.operator !== '+=' && (!_isNumber(operandA) || !_isNumber(operandB))) {\r\n\t\t\t\tthrow new Error(this + ' - operands must each be a number!');\r\n\t\t\t}\r\n\t\t\tif (this.operator === '*=') {\r\n\t\t\t\tval = operandA * operandB;\r\n\t\t\t} else if (this.operator === '/=') {\r\n\t\t\t\tval = operandA / operandB;\r\n\t\t\t} else if (this.operator === '-=') {\r\n\t\t\t\tval = operandA - operandB;\r\n\t\t\t} else {\r\n\t\t\t\tval = operandA + operandB;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tval = this.val.eval(context, params);\r\n\t\t}\r\n\t\ttry {\r\n\t\t\treference.set(val, this.initKeyword);\r\n\t\t\tif (params && _isArray(params.references)) {\r\n\t\t\t\t_pushUnique(params.references, this.reference.toString());\r\n\t\t\t}\r\n\t\t\treturn this.postIncrDecr ? initialVal : val;\r\n\t\t} catch(e) {\r\n\t\t\tif (e instanceof ReferenceError) {\r\n\t\t\t\tthrow new ReferenceError('[' + this + ']: ' + e.message);\r\n\t\t\t} else {\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\tif (['++', '--'].includes(this.operator)) {\r\n\t\t\treturn this.postIncrDecr \r\n\t\t\t\t? this.reference.stringify(params) + this.operator\r\n\t\t\t\t: this.operator + this.reference.stringify(params);\r\n\t\t}\r\n\t\treturn (this.initKeyword ? this.initKeyword + ' ' : '')\r\n\t\t\t+ [this.reference.stringify(params), this.operator, this.val.stringify(params)].join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar parse = Lexer.lex(expr, this.operators.concat([testBlockEnd]));\r\n\t\tif (parse.matches.length) {\r\n\t\t\tvar initKeyword, reference, val, operator = parse.matches[0].trim(), isIncrDecr = ['++', '--'].includes(operator), postIncrDecr;\r\n\t\t\tif (isIncrDecr) {\r\n\t\t\t\tpostIncrDecr = (expr.trim().endsWith('++') || expr.trim().endsWith('--'));\r\n\t\t\t\treference = parse.tokens[postIncrDecr ? 'shift' : 'pop']().trim();\r\n\t\t\t} else {\r\n\t\t\t\treference = parse.tokens.shift().trim();\r\n\t\t\t\tval = parse.tokens.shift().trim();\r\n\t\t\t}\r\n\t\t\tif (['var', 'let', 'const'].includes(_before(reference, ' '))) {\r\n\t\t\t\tif (operator !== '=') {\r\n\t\t\t\t\tthrow new SyntaxError('Invalid declaration: ' + expr);\r\n\t\t\t\t}\r\n\t\t\t\tinitKeyword = _before(reference, ' ');\r\n\t\t\t\treference = _after(reference, ' ').trim();\r\n\t\t\t}\r\n\t\t\tif (!((reference = parseCallback(reference, null, {lodge: false})) instanceof ReferenceInterface) \r\n\t\t\t|| (!isIncrDecr && !(val = parseCallback(val)))) {\r\n\t\t\t\tthrow new SyntaxError(expr);\r\n\t\t\t}\r\n\t\t\treference.role = 'ASSIGNMENT_SPECIFIER';\r\n\t\t\treturn new this(initKeyword, reference, val, operator, postIncrDecr);\r\n\t\t}\r\n\t}\r\n};\t\r\n\r\n/**\r\n * @prop array\r\n */\r\nAssignment.operators = [\r\n\t'+=',\r\n\t'-=',\r\n\t'*=',\r\n\t'/=',\r\n\t'++',\r\n\t'--',\r\n];\r\n\r\nconst testBlockEnd = (a, b) => {\r\n\t// Match exactly \"=\", not \"=>\", \"==\", \"===\"\r\n\tif (!a.endsWith('=') && b.startsWith('=') && !b.startsWith('=>') && !b.startsWith('==') && !b.startsWith('===')) {\r\n\t\treturn '=';\r\n\t}\r\n\treturn false;\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Assignment;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * BlockInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Block'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ReturnInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'ReturnDirective'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * DeletionInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'DeleteExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * NumInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'NumberType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * StrInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'StringType'; },\r\n});\r\nexport default Interface;\r\n","/**\r\n * @imports\r\n */\r\nimport _isString from '@webqit/util/js/isString.js';\r\nimport CallInterface from './grammar/CallInterface.js';\r\nimport NumInterface from './grammar/NumInterface.js';\r\nimport StrInterface from './grammar/StrInterface.js';\r\n\r\n\r\n/**\r\n * UTILS\r\n */\r\nexport function pathStartsWith(a, b) {\r\n\treturn b.reduce((prev, value, i) => prev && value === a[i], true);\r\n};\r\nexport function pathAfter(a, b) {\r\n\treturn a.slice(b.length);\r\n};\r\nexport function pathIsSame(a, b) {\r\n\treturn a.length === b.length && a.reduce((prev, value, i) => prev && value === b[i], true);\r\n};\r\nexport function referencesToPaths(references) {\r\n    return references.map(expr => {\r\n        var seg = expr, pathArray = [];\r\n        do {\r\n            if (seg instanceof CallInterface) {\r\n                pathArray.splice(0);\r\n                seg = seg.reference;\r\n            }\r\n            if (_isString(seg.name)) {\r\n                pathArray.unshift(seg.name);\r\n            } else if (seg.name instanceof NumInterface) {\r\n                pathArray.unshift(seg.name.int);\r\n            } else if (seg.name instanceof StrInterface) {\r\n                pathArray.unshift(seg.name.expr);\r\n            } else {\r\n                pathArray.splice(0);\r\n            }\r\n        } while(seg = seg.context);\r\n        return pathArray;\r\n    });\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeObject from '@webqit/util/js/isTypeObject.js';\r\nimport _isUndefined from '@webqit/util/js/isUndefined.js';\r\nimport _isFunction from '@webqit/util/js/isFunction.js';\r\nimport _isClass from '@webqit/util/js/isClass.js';\r\nimport _isString from '@webqit/util/js/isString.js';\r\nimport _isNull from '@webqit/util/js/isNull.js';\r\nimport _isNumber from '@webqit/util/js/isNumber.js';\r\nimport _after from '@webqit/util/str/after.js';\r\nimport _before from '@webqit/util/str/before.js';\r\nimport _unique from '@webqit/util/arr/unique.js';\r\nimport ReferenceError from './ReferenceError.js';\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default class Scope {\r\n\r\n\t/**\r\n\t * Creates a new context stack.\r\n\t *\r\n\t * @param object\t \tparams\r\n\t * @param object\t\tparams\r\n\t *\r\n\t * @return Scope\r\n\t */\r\n\tconstructor(stack, params = {}) {\r\n\t\tthis.stack = stack;\r\n\t\tthis.params = params;\r\n\t\tif (!('main' in this.stack)) {\r\n\t\t\tthrow new Error('A \"main\" context must be provided!');\r\n\t\t}\r\n\t\tif (this.stack.super) {\r\n\t\t\tthis.stack.super = Scope.create(this.stack.super, {errorLevel: params.errorLevel});\r\n\t\t}\r\n\t\tthis.stack.local = this.stack.local || {};\r\n\t\tthis.stack.$local = this.stack.$local || {};\r\n\t}\r\n\r\n\t/**\r\n\t * Binds a callback to changes\r\n\t * that happen in the contexts.\r\n\t *\r\n\t * @param object\t\t \ttrap\r\n\t * @param function\t\t \tcallback\r\n\t *\r\n\t * @return Scope\r\n\t */\r\n\tobserve(trap, callback, params = {}) {\r\n\t\tif (this.stack.super) {\r\n\t\t\tthis.stack.super.observe(trap, (e) => {\r\n\t\t\t\tif (e.props.filter(prop => !_has(this.stack.local, prop, trap) && !_has(this.stack.main, prop, trap)).length) {\r\n\t\t\t\t\te.scope = 'super';\r\n\t\t\t\t\treturn callback(e);\r\n\t\t\t\t}\r\n\t\t\t}, params);\r\n\t\t}\r\n\t\tvar _params  = {...params};\r\n\t\t_params.subtree = true;\r\n\t\t_params.tags = [this, 'jsen-context',];\r\n\t\ttrap.observe(this.stack, changes => {\r\n\t\t\t// Changes firing directly from super and local should be ignored\r\n\t\t\tchanges = changes.filter(delta => delta.name === 'main');\r\n\t\t\tvar references = changes.map(delta => delta.path.slice(1)).filter(path => path.length);\r\n\t\t\tvar props = references.map(path => path[0]);\r\n\t\t\tif (!references.length && changes.length && changes[0].value) {\r\n\t\t\t\tprops = _unique((\r\n\t\t\t\t\t\t_isTypeObject(changes[0].value) ? Object.keys(changes[0].value) : []\r\n\t\t\t\t\t).concat(changes[0].oldValue && _isTypeObject(changes[0].oldValue) ? Object.keys(changes[0].oldValue) : [])\r\n\t\t\t\t);\r\n\t\t\t\treferences = props.map(prop => [prop]);\r\n\t\t\t}\r\n\t\t\tif (props.filter(prop => !_has(this.stack.local, prop, trap)).length) {\r\n\t\t\t\treturn callback({\r\n\t\t\t\t\tprops,\r\n\t\t\t\t\treferences,\r\n\t\t\t\t\tscope:'local',\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}, _params);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Unbinds callbacks previously bound\r\n\t * with observe()\r\n\t *\r\n\t * @param object\t\t \ttrap\r\n\t * @param function\t\t \tcallback\r\n\t *\r\n\t * @return Scope\r\n\t */\r\n\tunobserve(trap, callback) {\r\n\t\tif (this.stack.super) {\r\n\t\t\tthis.stack.super.unobserve(trap, callback);\r\n\t\t}\r\n\t\ttrap.unobserve(this.stack, callback, {\r\n\t\t\tsubtree:true,\r\n\t\t\ttags:[this, 'jsen-context',],\r\n\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Tries the handler on the different contexts in the stack.\r\n\t *\r\n\t * @param string|number \tprop\r\n\t * @param function\t\t \tcallback\r\n\t * @param function\t\t \tfinal\r\n\t *\r\n\t * @return Scope\r\n\t */\r\n\thandle(prop, callback, final, level = 0) {\r\n\t\tvar callMain = () => {\r\n\t\t\treturn callback(this.stack.main, null, () => {\r\n\t\t\t\tif (this.stack.super) {\r\n\t\t\t\t\treturn this.stack.super.handle(prop, callback, final, level + 1);\r\n\t\t\t\t}\r\n\t\t\t\tif (final) {\r\n\t\t\t\t\treturn final();\r\n\t\t\t\t}\r\n\t\t\t}, level);\r\n\t\t};\r\n\t\t// Normally, we would begin with local...\r\n\t\t// but no if...\r\n\t\tif (prop === 'toString' && this.stack.local.toString === Object.prototype.toString) {\r\n\t\t\treturn callMain();\r\n\t\t}\r\n\t\t// Conditions are right, we begin with local\r\n\t\treturn callback(this.stack.local, this.stack.$local, callMain, level);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a property's value from the first possessing context.\r\n\t *\r\n\t * @param string|number prop\r\n\t * @param object\t\ttrap\r\n\t * @param bool\t\t\tbindThis\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\tget(prop, trap = {}, bindThis = true) {\r\n\t\tif (prop instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop = prop + '';\r\n\t\t}\r\n\t\treturn this.handle(prop, (contxtObj, contxtMeta, advance, level) => {\r\n\t\t\tvar val = _get(contxtObj, prop, trap);\r\n\t\t\t// asking first mught not go well generally && _has(this[i], prop, trap)\r\n\t\t\tif (!_isUndefined(val) || _has(contxtObj, prop, trap)) {\r\n\t\t\t\tif (_isFunction(val) && !_isClass(val) && bindThis) {\r\n\t\t\t\t\treturn val.bind(contxtObj);\r\n\t\t\t\t}\r\n\t\t\t\treturn val;\r\n\t\t\t}\r\n\t\t\treturn advance();\r\n\t\t}/* Not good for RQL derived fields , () => {throw new ReferenceError('\"' + prop + '\" is undefined!');}*/);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Updates a property's value from the first possessing context.\r\n\t * Or adds a new context to set the property.\r\n\t *\r\n\t * @param string|number prop\r\n\t * @param mixed\t\t\tval\r\n\t * @param object\t\ttrap\r\n\t * @param bool\t\t\tinitKeyword\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tset(prop, val, trap = {}, initKeyword = false) {\r\n\t\tif (this.params.type === 2 && initKeyword === 'var' && this.stack.super) {\r\n\t\t\treturn this.stack.super.set(prop, val, trap, initKeyword);\r\n\t\t}\r\n\t\tif (prop instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop = prop + '';\r\n\t\t}\r\n\t\tconst _set = (cntxt, prop, val, trap) => {\r\n\t\t\tif (trap.set) {\r\n\t\t\t\treturn trap.set(cntxt, prop, val);\r\n\t\t\t}\r\n\t\t\tcntxt[prop] = val;\r\n\t\t\treturn true;\r\n\t\t};\r\n\t\treturn this.handle(initKeyword ? true : prop, (contxtObj, localContxtMeta, advance, level) => {\r\n\t\t\t// Whatever the level of localContext...\r\n\t\t\tif (localContxtMeta && localContxtMeta[prop] === 'const') {\r\n\t\t\t\tthrow new LogicalError('CONST ' + prop + ' cannot be modified!');\r\n\t\t\t}\r\n\t\t\t// Set this locally, we wont be getting to advance()\r\n\t\t\tif (initKeyword) {\r\n\t\t\t\tlocalContxtMeta[prop] = initKeyword;\r\n\t\t\t\treturn _set(contxtObj, prop, val, trap);\r\n\t\t\t}\r\n\t\t\t// For any other contex, it must already exists\r\n\t\t\tif (_has(contxtObj, prop, trap)) {\r\n\t\t\t\treturn _set(contxtObj, prop, val, trap);\r\n\t\t\t}\r\n\t\t\ttry {\r\n\t\t\t\treturn advance();\r\n\t\t\t} catch(e) {\r\n\t\t\t\tif ((e instanceof ReferenceError) && !localContxtMeta && level === 0 && this.params.strictMode === false) {\r\n\t\t\t\t\t// Assign to undeclared variables\r\n\t\t\t\t\treturn _set(contxtObj, prop, val, trap);\r\n\t\t\t\t}\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t}, () => {throw new ReferenceError('\"' + prop + '\" does not exist in scope!');});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Deletes a property from the first possessing context.\r\n\t *\r\n\t * @param string|number prop\r\n\t * @param object\t\ttrap\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tdel(prop, trap = {}) {\r\n\t\tif (prop instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop = prop + '';\r\n\t\t}\r\n\t\treturn this.handle(prop, (contxtObj, contxtMeta, advance) => {\r\n\t\t\tif (_has(contxtObj, prop, trap)) {\r\n\t\t\t\tif (contxtMeta) {\r\n\t\t\t\t\tdelete contxtMeta[prop];\r\n\t\t\t\t}\r\n\t\t\t\tif (trap.deleteProperty || trap.del) {\r\n\t\t\t\t\treturn (trap.deleteProperty || trap.del)(contxtObj, prop);\r\n\t\t\t\t}\r\n\t\t\t\tdelete contxtObj[prop];\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn advance();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Tests if a property exists in any context.\r\n\t *\r\n\t * @param string|number prop\r\n\t * @param string|number prop2\r\n\t * @param object\t\ttrap\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\thas(prop, prop2, trap = {}) {\r\n\t\tif (prop instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop = prop + '';\r\n\t\t}\r\n\t\tif (prop2 instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop2 = prop2 + '';\r\n\t\t}\r\n\t\treturn this.handle(prop, (contxtObj, contxtMeta, advance) => {\r\n\t\t\tif (_has(contxtObj, prop, trap)) {\r\n\t\t\t\tvar contextObj2 = _get(contxtObj, prop, trap);\r\n\t\t\t\treturn _has(contextObj2, prop2, trap);\r\n\t\t\t}\r\n\t\t\treturn advance();\r\n\t\t}, () => {throw new ReferenceError('\"' + prop + '\" is undefined!');});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Tests if a property exists in any context.\r\n\t *\r\n\t * @param string|number prop\r\n\t * @param array\t\t\targs\r\n\t * @param object\t\ttrap\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\texec(prop, args, trap = {}) {\r\n\t\tif (prop instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop = prop + '';\r\n\t\t}\r\n\t\treturn this.handle(prop, (contxtObj, contxtMeta, advance) => {\r\n\t\t\tvar fn = _get(contxtObj, prop, trap);\r\n\t\t\tif (!_isUndefined(fn) || _has(contxtObj, prop, trap)) {\r\n\t\t\t\tif (!_isFunction(fn)) {\r\n\t\t\t\t\tif (trap.exec) {\r\n\t\t\t\t\t\treturn trap.exec(contxtObj, prop, args);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthrow new ReferenceError('\"' + prop + '\" is not a function! (Called on type: ' + typeof contxtObj + '.)');\r\n\t\t\t\t}\r\n\t\t\t\tif (trap.apply) {\r\n\t\t\t\t\treturn trap.apply(fn, contxtObj, args);\r\n\t\t\t\t}\r\n\t\t\t\treturn fn.apply(contxtObj, args);\r\n\t\t\t}\r\n\t\t\treturn advance();\r\n\t\t}, () => {\r\n\t\t\tif (trap.execUnknown) {\r\n\t\t\t\treturn trap.execUnknown(this, prop, args);\r\n\t\t\t}\r\n\t\t\tthrow new ReferenceError('\"' + prop + '()\" is undefined!');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Factory method for making a Scope instance.\r\n\t *\r\n\t * @param array|object \tcntxt\r\n\t * @param object \t\tparams\r\n\t *\r\n\t * @return Scope\r\n\t */\r\n\tstatic create(cntxt, params = {}) {\r\n\t\treturn cntxt instanceof Scope ? cntxt : new Scope({\r\n\t\t\tmain: cntxt,\r\n\t\t}, params);\r\n\t}\r\n};\r\n\r\nconst _get = (cntxt, prop, trap) => {\r\n\tif (_isNull(cntxt) || _isUndefined(cntxt)) {\r\n\t\treturn;\r\n\t}\r\n\treturn trap.get && _isTypeObject(cntxt) ? trap.get(cntxt, prop) : (\r\n\t\tcntxt[prop]\r\n\t);\r\n};\r\n\r\nconst _has = (cntxt, prop, trap) => {\r\n\tif (_isNull(cntxt) || _isUndefined(cntxt)) {\r\n\t\treturn false;\r\n\t}\r\n\treturn trap.has && _isTypeObject(cntxt) ? trap.has(cntxt, prop) : (\r\n\t\t_isTypeObject(cntxt) ? prop in cntxt : !_isUndefined(cntxt[prop])\r\n\t);\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeFunction from './isTypeFunction.js';\r\n\r\n/**\r\n * Tells if val is of type \"class\".\r\n *\r\n * @param object \t\tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isTypeFunction(val) && /^class\\s?/.test(Function.prototype.toString.call(val));\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport _copy from '@webqit/util/obj/copy.js';\r\nimport _flatten from '@webqit/util/arr/flatten.js';\r\nimport BlockInterface from './BlockInterface.js';\r\nimport ReturnInterface from './ReturnInterface.js';\r\nimport AssignmentInterface from './AssignmentInterface.js';\r\nimport DeletionInterface from './DeletionInterface.js';\r\nimport { referencesToPaths, pathStartsWith } from '../util.js';\r\nimport Scope from '../Scope.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Block class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Block extends BlockInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(stmts, delim) {\r\n\t\tsuper();\r\n\t\tthis.stmts = stmts || [];\r\n\t\tthis.delim = delim;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\r\n\t\tvar returned, returnCallback = params.returnCallback;\r\n\t\tparams = {...params};\r\n\t\tparams.returnCallback = () => {\r\n\t\t\treturned = true;\r\n\t\t};\r\n\r\n\t\t// Current!\r\n\t\tcontext = Scope.create(context);\r\n\t\tvar callEval = (stmt, context, _params) => {\r\n\t\t\ttry {\r\n\t\t\t\treturn stmt.eval(context, _params);\r\n\t\t\t} catch(e) {\r\n\t\t\t\tif (_params.catch) {\r\n\t\t\t\t\t_params.catch(e);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t};\r\n\t\t\r\n\t\tvar results = [];\r\n\t\tfor (var i = 0; i < this.stmts.length; i ++) {\r\n\t\t\tvar stmt = this.stmts[i];\r\n\t\t\t// Lets be called...\r\n\t\t\tvar vars = referencesToPaths(stmt.meta.vars);\r\n\t\t\tvar deepVars = referencesToPaths(stmt.meta.deepVars || []);\r\n\t\t\tvar isDirectEventTarget = (params.references || []).filter(f => vars.filter(v => pathStartsWith(v, f)).length);\r\n\t\t\tvar isIndirectEventTarget = (params.references || []).filter(f => deepVars.filter(v => pathStartsWith(v, f)).length);\r\n\t\t\tif (!params.references || !params.references.length \r\n\t\t\t|| (isDirectEventTarget = isDirectEventTarget.length)\r\n\t\t\t|| (isIndirectEventTarget = isIndirectEventTarget.length)) {\r\n\t\t\t\tvar _params = params;\r\n\t\t\t\tif (isDirectEventTarget) {\r\n\t\t\t\t\t_params = {...params};\r\n\t\t\t\t\tdelete _params.references;\r\n\t\t\t\t}\r\n\t\t\t\tresults[i] = callEval(stmt, context, _params);\r\n\t\t\t\tif (stmt instanceof ReturnInterface || returned) {\r\n\t\t\t\t\tif (returnCallback) {\r\n\t\t\t\t\t\treturnCallback();\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn results[i];\r\n\t\t\t\t}\r\n\t\t\t\t// Add this change for subsequent statements\r\n\t\t\t\t// This is a local change!\r\n\t\t\t\tif (params.references && ((stmt instanceof AssignmentInterface) || (stmt instanceof DeletionInterface))) {\r\n\t\t\t\t\tparams.references = params.references.concat(referencesToPaths([stmt.reference]));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn results;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.stmts.map(stmt => stmt.stringify(params)).join(this.delim);\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar parse = Lexer.lex(expr + ';', _flatten(this.operators).concat([Block.testBlockEnd]));\r\n\t\tif (parse.matches.length) {\r\n\t\t\treturn new this(\r\n\t\t\t\tparse.tokens.map(stmt => parseCallback(stmt.trim())).filter(a => a),\r\n\t\t\t\tparse.matches[0].trim()\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic testBlockEnd(a, b) {\r\n\t\t// Cases of code blocks that won't end in \";\"\r\n\t\tif (a.endsWith('}') && !b.trim().startsWith('else')) {\r\n\t\t\treturn '';\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop array\r\n */\r\nBlock.operators = [\r\n\t';',\r\n\t\"\\r\\n\",\r\n];\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * BoolInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'BooleanType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport BoolInterface from './BoolInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Bool (boolean) class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Bool = class extends BoolInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(state) {\r\n\t\tsuper();\r\n\t\tthis.state = state;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval() {\r\n\t\treturn this.state.toLowerCase().trim() === 'true';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.state;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar expr = expr.toLowerCase().trim();\r\n\t\tif (expr === 'true' || expr === 'false') {\r\n\t\t\treturn new this(expr);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Bool;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isUndefined from '@webqit/util/js/isUndefined.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport CallInterface from './CallInterface.js';\r\nimport Arguments from './Arguments.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport SyntaxError from '../SyntaxError.js';\r\nimport ReferenceError from '../ReferenceError.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Call class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Call = class extends CallInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(reference, args) {\r\n\t\tsuper();\r\n\t\tthis.reference = reference;\r\n\t\tthis.args = args;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\ttry {\r\n\t\t\tvar args = this.args.eval(context, params);\r\n\t\t\treturn this.reference.getEval(context, params).exec(args);\r\n\t\t} catch(e) {\r\n\t\t\tif (e instanceof ReferenceError) {\r\n\t\t\t\tthrow new ReferenceError('[' + this + ']: ' + e.message);\r\n\t\t\t} else {\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.reference.stringify(params) + this.args.stringify(params);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (!expr.startsWith('(') && expr.endsWith(')') && !Lexer.match(expr, [' ']).length) {\r\n\t\t\tvar tokens = Lexer.split(expr, []);\r\n\t\t\tvar reference, args = tokens.pop();\r\n\t\t\tif (!((reference = parseCallback(tokens.join(''))) instanceof ReferenceInterface) \r\n\t\t\t|| !(args = parseCallback(args, [Arguments]))) {\r\n\t\t\t\tthrow new SyntaxError(expr);\r\n\t\t\t}\r\n\t\t\treference.role = 'CALL_SPECIFIER';\r\n\t\t\treturn new this(reference, args);\r\n\t\t}\r\n\t}\r\n};\t\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Call;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ComparisonInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'ComparisonExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _flatten from '@webqit/util/arr/flatten.js';\r\nimport _first from '@webqit/util/arr/first.js';\r\nimport _last from '@webqit/util/arr/last.js';\r\nimport _difference from '@webqit/util/arr/difference.js';\r\nimport _isArray from '@webqit/util/js/isArray.js';\r\nimport _isObject from '@webqit/util/js/isObject.js';\r\nimport _isString from '@webqit/util/js/isString.js';\r\nimport _each from '@webqit/util/obj/each.js';\r\nimport ComparisonInterface from './ComparisonInterface.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Comparison class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Comparison extends ComparisonInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(operand1, operand2, operator) {\r\n\t\tsuper();\r\n\t\tthis.operand1 = operand1;\r\n\t\tthis.operand2 = operand2;\r\n\t\tthis.operator = operator;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.constructor.compare(\r\n\t\t\tthis.operand1.eval(context, params), \r\n\t\t\tthis.operand2.eval(context, params), \r\n\t\t\tthis.operator\r\n\t\t);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn [\r\n\t\t\tthis.operand1.stringify(params), \r\n\t\t\tthis.operator, \r\n\t\t\tthis.operand2.stringify(params)\r\n\t\t].join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar operators = _flatten(this.operators).map(oper => ' ' + oper + ' ');\r\n\t\tvar parse = Lexer.lex(expr, operators);\r\n\t\tif (parse.tokens.length > 1) {\r\n\t\t\tif (parse.tokens.length > 2) {\r\n\t\t\t\tthrow new Error('Malformed \"Comparison\" expression: ' + expr + '!');\r\n\t\t\t}\r\n\t\t\treturn new this(\r\n\t\t\t\tparseCallback(_first(parse.tokens).trim()),\r\n\t\t\t\tparseCallback(_last(parse.tokens).trim()),\r\n\t\t\t\tparse.matches[0].trim()\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * -------------------------------------------------------\r\n\t */\r\n\t \r\n\t/**\r\n\t * Use the operator type to compare the two operands\r\n\t *\r\n\t * @param mixed\t\toperand1\t\t\r\n\t * @param mixed\t\toperand2\t\t\r\n\t * @param string \toperator\t\t\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tstatic compare(operand1, operand2, operator = '==') {\r\n\t\tif (_flatten(this.operators).indexOf(operator) === -1) {\r\n\t\t\tthrow new Error('The operator \"' + operator + '\" is not recognized.');\r\n\t\t}\r\n\t\tswitch(operator) {\r\n\t\t\tcase '===':\r\n\t\t\t\treturn operand1 === operand2;\r\n\t\t\tcase '==':\r\n\t\t\tcase '=':\r\n\t\t\t\treturn operand1 == operand2;\r\n\t\t\tcase '>':\r\n\t\t\t\treturn operand1 > operand2;\r\n\t\t\tcase '<':\r\n\t\t\t\treturn operand1 < operand2;\r\n\t\t\tcase '>=':\r\n\t\t\t\treturn operand1 >= operand2;\r\n\t\t\tcase '<=':\r\n\t\t\t\treturn operand1 <= operand2;\r\n\t\t\tcase '!=':\r\n\t\t\t\treturn operand1 != operand2;\r\n\t\t\tcase '<>':\r\n\t\t\tcase '!==':\r\n\t\t\t\treturn operand1 !== operand2;\r\n\t\t\tcase '^=':\r\n\t\t\t\treturn _isString(operand1) && operand1.startsWith(operand2);\r\n\t\t\tcase '$=':\r\n\t\t\t\treturn _isString(operand1) && operand1.endsWith(operand2);\r\n\t\t\tcase '*=':\r\n\t\t\t\t// Contains\r\n\t\t\t\treturn _isArray(operand2) || _isString(operand2) ? operand1.indexOf(operand2) > -1 : false;\r\n\t\t\tcase '~=':\r\n\t\t\t\t// Contains word\r\n\t\t\t\treturn _isString(operand1) && _isString(operand2) && (' ' + operand1 + ' ').indexOf(' ' + operand2 + ' ') > -1;\r\n\t\t\tcase '>=<': // Between\r\n\t\t\t\t if (!(_isArray(operand2) && operand2.length === 2)) {\r\n\t\t\t\t\t throw new Error('A \\'Between\\' comparison requires argument 2 to be an array of exactly 2 values.');\r\n\t\t\t\t }\r\n\t\t\t\t return operand1 >= operand2[0] && operand1 <= operand2[1];\r\n\t\r\n\t\t\tcase '/**/': // Regex\r\n\t\t\t\treturn operand2.match(new RegExp(operand1));\r\n\t\t\tdefault:\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * Compares two operands for differences\r\n\t *\r\n\t * @param mixed\t\toperand1\t\t\r\n\t * @param mixed\t\toperand2\t\t\r\n\t * @param bool\t \tstrict\t\t\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tstatic diff(operand1, operand2, strict) {\r\n\t\treturn !this.compare(operand1, operand2, strict ? '===' : '==');\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nComparison.operators = {\r\n\texact: {\r\n\t\tis: '===',\r\n\t\tisNull: '===',\r\n\t\tequalsTo: '==',\r\n\t\tstrictlyNotEqualsTo: '!==',\r\n\t\tnotEqualsTo: '!=',\r\n\t},\r\n\trelative: {\r\n\t\tlesserThan: '<',\r\n\t\tgreaterThan: '>',\r\n\t\tlesserThanOrEqualsTo: '<=',\r\n\t\tgreaterThanOrEqualsTo: '>=',\r\n\t\tbetween: '>=<',\r\n\t},\r\n\tpartial: {\r\n\t\tstartsWith: '^=',\r\n\t\tendsWith: '$=',\r\n\t\tcontains: '*=',\r\n\t\tany: '~=',\r\n\t\tin: '~=',\r\n\t\tmatches: '/**/',\r\n\t},\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ConditionInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'TernaryConditional'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport ConditionInterface from './ConditionInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Condition class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Condition extends ConditionInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(assertion, onTrue, onFalse) {\r\n\t\tsuper();\r\n\t\tthis.assertion = assertion;\r\n\t\tthis.onTrue = onTrue;\r\n\t\tthis.onFalse = onFalse;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.assertion.eval(context, params) \r\n\t\t\t? this.onTrue.eval(context, params) \r\n\t\t\t: this.onFalse.eval(context, params);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn [\r\n\t\t\tthis.assertion.stringify(params), \r\n\t\t\tthis.constructor.operators[0], \r\n\t\t\tthis.onTrue.stringify(params),\r\n\t\t\tthis.constructor.operators[1], \r\n\t\t\tthis.onFalse.stringify(params)\r\n\t\t].join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar splits = Lexer.split(expr, this.operators);\r\n\t\tif (splits.length > 1) {\r\n\t\t\tif (splits.length === 2) {\r\n\t\t\t\tthrow new Error('Malformed ternary expression: ' + expr + '!');\r\n\t\t\t}\r\n\t\t\treturn new this(\r\n\t\t\t\tparseCallback(splits[0].trim()),\r\n\t\t\t\tparseCallback(splits[1].trim()),\r\n\t\t\t\tparseCallback(splits[2].trim())\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nCondition.operators = [\r\n\t'?', \r\n\t':',\r\n];","\r\n/**\r\n * @imports\r\n */\r\nimport _last from '@webqit/util/arr/last.js';\r\nimport _isUndefined from '@webqit/util/js/isUndefined.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport DeletionInterface from './DeletionInterface.js';\r\nimport SyntaxError from '../SyntaxError.js';\r\nimport ReferenceError from '../ReferenceError.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Deletion class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Deletion = class extends DeletionInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(reference, operator = 'delete') {\r\n\t\tsuper();\r\n\t\tthis.reference = reference;\r\n\t\tthis.operator = operator;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\ttry {\r\n\t\t\treturn this.reference.getEval(context, params).del();\r\n\t\t} catch(e) {\r\n\t\t\tif (e instanceof ReferenceError) {\r\n\t\t\t\tthrow new ReferenceError('[' + this + ']: ' + e.message);\r\n\t\t\t} else {\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.operator + ' ' + this.reference.stringify(params);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar parse = Lexer.lex(expr, Object.values(this.operators));\r\n\t\tif (parse.matches.length === 1 && expr.startsWith(parse.matches[0] + ' ')) {\r\n\t\t\tvar reference;\r\n\t\t\tif (!((reference = parseCallback(parse.tokens.pop().trim(), null, {lodge: false})) instanceof ReferenceInterface)) {\r\n\t\t\t\tthrow new SyntaxError(expr);\r\n\t\t\t}\r\n\t\t\treference.role = 'DELETION_SPECIFIER';\r\n\t\t\treturn new this(reference, parse.matches[0].trim());\r\n\t\t}\r\n\t}\r\n};\t\r\n\r\n/**\r\n * @prop array\r\n */\r\nDeletion.operators = {\r\n\tred: 'reduce', \r\n\tdel: 'delete',\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Deletion;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport IndependentExprInterface from '../IndependentExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * FuncInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends IndependentExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'FunctionType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _copy from '@webqit/util/obj/copy.js';\r\nimport _each from '@webqit/util/obj/each.js';\r\nimport _flatten from '@webqit/util/arr/flatten.js';\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport FuncInterface from './FuncInterface.js';\r\nimport Block from './Block.js';\r\nimport Scope from '../Scope.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Func class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Func = class extends FuncInterface {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(paramters, statements, arrowFunctionFormatting = {}) {\r\n\t\tsuper();\r\n\t\tthis.paramters = paramters || {};\r\n\t\tthis.statements = statements;\r\n\t\tthis.arrowFunctionFormatting = arrowFunctionFormatting;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tinherit(Super) {\r\n\t\tif (Super instanceof FuncInterface) {\r\n\t\t\tvar parentParams = Object.keys(Super.paramters);\r\n\t\t\tvar ownParams = Object.keys(this.paramters);\r\n\t\t\tfor (var i = 0; i < Math.max(ownParams.length, parentParams.length); i ++) {\r\n\t\t\t\tvar nameInParent = parentParams[i];\r\n\t\t\t\tvar nameInSelf = ownParams[i];\r\n\t\t\t\tif (!nameInSelf && nameInParent) {\r\n\t\t\t\t\tthrow new Error('Parameter #' + i + ' (' + nameInParent + ') in parent function must be implemented.');\r\n\t\t\t\t}\r\n\t\t\t\tif (nameInSelf && nameInParent) {\r\n\t\t\t\t\tvar defaultValInParent = Super.paramters[nameInParent];\r\n\t\t\t\t\tvar defaultValInSelf = this.paramters[nameInSelf];\r\n\t\t\t\t\tif (defaultValInSelf && !defaultValInParent) {\r\n\t\t\t\t\t\tthrow new Error('Parameter #' + i + ' (' + nameInSelf + ') must not have a default value as established in parent function.');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (defaultValInSelf && defaultValInParent && defaultValInSelf.jsenType !== defaultValInParent.jsenType) {\r\n\t\t\t\t\t\tthrow new Error('Default value for parameter #' + i + ' (' + nameInSelf + ') must be of type ' + defaultValInParent.jsenType + ' as established in parent function.');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.sup = Super;\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\tvar instance = this;\r\n\t\tparams = {...params};\r\n\t\tdelete params.returnCallback;\r\n\t\treturn function(...args) {\r\n\t\t\tvar newMainContext = {};\r\n\t\t\t_each(Object.keys(instance.paramters), (i, name) => {\r\n\t\t\t\tvar defaultVal = instance.paramters[name];\r\n\t\t\t\tif (args.length - 1 < i && !defaultVal) {\r\n\t\t\t\t\tthrow new Error('The parameter \"' + name + '\" is required.');\r\n\t\t\t\t}\r\n\t\t\t\tnewMainContext[name] = args.length > i \r\n\t\t\t\t\t? args[i] \r\n\t\t\t\t\t: (instance.paramters[name] \r\n\t\t\t\t\t\t? instance.paramters[name].eval(context, params) \r\n\t\t\t\t\t\t: null);\r\n\t\t\t});\r\n\t\t\tif (!instance.arrowFunctionFormatting) {\r\n\t\t\t\tnewMainContext['this'] = this;\r\n\t\t\t}\r\n\t\t\t// But this newer context should come first\r\n\t\t\tvar errorLevel = context instanceof Scope ? context.params.errorLevel : undefined;\r\n\t\t\tvar nestedContext = new Scope({main:newMainContext, super:context}, {errorLevel});\r\n\t\t\tvar retrn = instance.statements.eval(nestedContext, params);\r\n\t\t\tif (instance.arrowFunctionFormatting.body === false) {\r\n\t\t\t\treturn retrn[0];\r\n\t\t\t}\r\n\t\t\treturn retrn;\r\n\t\t};\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\tvar paramters = [];\r\n\t\t_each(this.paramters, (name, value) => {\r\n\t\t\tparamters.push(name + (value ? '=' + value.stringify(params) : ''));\r\n\t\t});\r\n\t\tif (this.arrowFunctionFormatting) {\r\n\t\t\tvar headNoWrap = this.arrowFunctionFormatting.head === false || (paramters.length === 1 && paramters[0].indexOf('=') === -1);\r\n\t\t\tvar bodyNoWrap = this.arrowFunctionFormatting.body === false\r\n\t\t\treturn (headNoWrap ? paramters[0] : '(' + paramters.join(', ') + ')')\r\n\t\t\t+ ' => ' + (bodyNoWrap ? this.statements.stringify(params) : '{' + this.statements.stringify(params) + '}');\r\n\t\t}\r\n\t\treturn 'function (' + paramters.join(', ') + ') {' + this.statements.stringify(params) + '}';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\texpr = expr.trim();\r\n\t\tvar splits;\r\n\t\tif (expr.startsWith('function') \r\n\t\t&& (splits = Lexer.split(expr, []).slice(1).filter(b => b.trim())) && splits.length === 2) {\r\n\t\t\tvar arrowFunctionFormatting = false;\r\n\t\t\tvar funcHead = _unwrap(splits.shift().trim(), '(', ')');\r\n\t\t\tvar funcBody = _unwrap(splits.shift().trim(), '{', '}');\r\n\t\t} else if (!expr.startsWith('function') \r\n\t\t&& (splits = Lexer.split(expr, ['=>'])) && splits.length === 2) {\r\n\t\t\tvar funcHead = splits.shift().trim();\r\n\t\t\tvar funcBody = splits.shift().trim();\r\n\t\t\tvar arrowFunctionFormatting = {};\r\n\t\t\tif (_wrapped(funcHead, '(', ')')) {\r\n\t\t\t\tfuncHead = _unwrap(funcHead, '(', ')');\r\n\t\t\t} else {\r\n\t\t\t\tarrowFunctionFormatting.head = false;\r\n\t\t\t}\r\n\t\t\tif (_wrapped(funcBody, '{', '}')) {\r\n\t\t\t\tfuncBody = _unwrap(funcBody, '{', '}');\r\n\t\t\t} else {\r\n\t\t\t\tarrowFunctionFormatting.body = false;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar paramters = {};\r\n\t\tLexer.split(funcHead, [',']).forEach(param => {\r\n\t\t\tvar paramSplit = param.split('=');\r\n\t\t\tif (paramSplit[1]) {\r\n\t\t\t\tparamters[paramSplit[0].trim()] = parseCallback(paramSplit[1].trim(), null, {\r\n\t\t\t\t\t// Any varaibles should be added to public vars\r\n\t\t\t\t\tmeta: null,\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tparamters[param.trim()] = null;\r\n\t\t\t}\r\n\t\t});\r\n\t\tvar block = parseCallback(funcBody, [Block], {assert:false}) || parseCallback(funcBody, null, {\r\n\t\t\t// Any varaibles should be added to public vars\r\n\t\t\tmeta: null,\r\n\t\t});\r\n\t\treturn new this(\r\n\t\t\tparamters,\r\n\t\t\tblock.jsenType === 'Block' ? block : new Block([block]),\r\n\t\t\tarrowFunctionFormatting,\r\n\t\t);\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nFunc.operators = ['=>',];\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Func;","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport IfInterface from './IfInterface.js';\r\nimport Block from './Block.js';\r\nimport Scope from '../Scope.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Condition class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst If = class extends IfInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(assertion, onTrue, onFalse, params = {}) {\r\n\t\tsuper();\r\n\t\tthis.assertion = assertion;\r\n\t\tthis.onTrue = onTrue;\r\n\t\tthis.onFalse = onFalse;\r\n\t\tthis.params = params;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n        var errorLevel = context instanceof Scope ? context.params.errorLevel : undefined;\r\n        var _context = new Scope({\r\n            main:{}, \r\n            super:context,\r\n        }, {type: 2, errorLevel});\r\n\t\treturn  this.assertion.eval(context/** original context */, params)\r\n\t\t\t? (this.onTrue ? this.onTrue.eval(_context, params) : undefined)\r\n            : (this.onFalse ? this.onFalse.eval(_context, params) : undefined);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n        var onTrue = this.onTrue && this.params.onTrueIsBlock \r\n            ? '{' + this.onTrue.stringify(params) + '}' \r\n            : (this.onTrue ? this.onTrue.stringify(params) : '');\r\n        var onFalse = this.onFalse && this.params.onFalseIsBlock \r\n            ? '{' + this.onFalse.stringify(params) + '}' \r\n            : (this.onFalse ? this.onFalse.stringify(params) : '');\r\n\t\treturn 'if (' + this.assertion.stringify(params) + ')' + onTrue + (onFalse ? ' else ' + onFalse : '');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n        expr = expr.trim();\r\n        var splits;\r\n        if (expr.startsWith('if') \r\n\t\t&& (splits = Lexer.split(expr, [], {limit:2}/*IMPORTANT*/).slice(1).filter(b => b.trim())) && splits.length === 2) {\r\n            var assertion = parseCallback(_unwrap(splits.shift().trim(), '(', ')').trim());\r\n            var rest = Lexer.split(splits.shift().trim(), ['else'], {limit:1}/*IMPORTANT*/);\r\n            var onTrue = rest.shift().trim(), onTrueIsBlock, onFalse = (rest.shift() || '').trim(), onFalseIsBlock;\r\n            if (_wrapped(onTrue, '{', '}')) {\r\n                // The braces gives us the onTrue block\r\n                onTrueIsBlock = true;\r\n                onTrue = _unwrap(onTrue, '{', '}').trim();\r\n            }\r\n            onTrue = parseCallback(onTrue, [Block], {assert:false, meta:null}) || parseCallback(onTrue, null, {meta:null});\r\n            if (onFalse) {\r\n                if (_wrapped(onFalse, '{', '}')) {\r\n                    // The braces gives us the onTrue block\r\n                    onFalseIsBlock = true;\r\n                    onFalse = _unwrap(onFalse, '{', '}').trim();\r\n                }\r\n                onFalse = parseCallback(onFalse, [Block], {assert:false, meta:null}) || parseCallback(onFalse, null, {meta:null});\r\n            }\r\n\t\t\treturn new this(assertion, onTrue, onFalse, {\r\n                    onTrueIsBlock,\r\n                    onFalseIsBlock,\r\n                }\r\n            );\r\n         }\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default If;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\n\r\n/**\r\n * Returns the intersection of two arrays;\r\n * optionally using a custom matching function.\r\n *\r\n * @param array \tarr\r\n * @param array\t \tarr2\r\n * @param function \tcallback\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, arr2, callback = null) {\r\n\treturn !_isArray(arr2) ? [] : arr.filter(val1 => callback \r\n\t\t? arr2.filter(val2 => callback(val1, val2)).length \r\n\t\t: arr2.indexOf(val1) !== -1\r\n\t);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * MathInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'MathExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNumeric from '@webqit/util/js/isNumeric.js';\r\nimport _flatten from '@webqit/util/arr/flatten.js';\r\nimport _intersect from '@webqit/util/arr/intersect.js';\r\nimport _unique from '@webqit/util/arr/unique.js';\r\nimport MathInterface from './MathInterface.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Math class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Math = class extends MathInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(val, exprs) {\r\n\t\tsuper();\r\n\t\tthis.val = val;\r\n\t\tthis.exprs = exprs;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.exprs.reduce((currentTotal, expr) => {\r\n\t\t\tvar val = expr.val.eval(context, params);\r\n\t\t\tvar operator = expr.operator.trim();\r\n\t\t\tif ((!_isNumeric(currentTotal) || !_isNumeric(val)) && operator !== '+') {\r\n\t\t\t\tthrow new Error('Invalid Math expression: ' + this.toString() + '!');\r\n\t\t\t}\r\n\t\t\tswitch(operator) {\r\n\t\t\t\tcase '+':\r\n\t\t\t\t\treturn currentTotal + val;\r\n\t\t\t\tcase '-':\r\n\t\t\t\t\treturn currentTotal - val;\r\n\t\t\t\tcase '*':\r\n\t\t\t\t\treturn currentTotal * val;\r\n\t\t\t\tcase '/':\r\n\t\t\t\t\treturn currentTotal / val;\r\n\t\t\t}\r\n\t\t}, this.val.eval(context, params));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn [this.val.stringify(params)].concat(\r\n\t\t\tthis.exprs.map(expr => expr.operator + ' ' + expr.val.stringify(params))\r\n\t\t).join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar parse = Lexer.lex(expr, _flatten(this.operators));\r\n\t\tif (parse.tokens.filter(t => t).length > 1 && parse.matches.length === parse.tokens.length - 1) {\r\n\t\t\tvar operators = _unique(parse.matches);\r\n\t\t\tif (_intersect(operators, this.operators.sup).length && _intersect(operators, this.operators.sub).length) {\r\n\t\t\t\tthrow new Error('\"Addition/subtraction\" and \"multiplication/division\" operators cannot be used in the same expression: ' + expr + '!');\r\n\t\t\t}\r\n\t\t\treturn new this(\r\n\t\t\t\tparseCallback(parse.tokens.shift().trim()),\r\n\t\t\t\tparse.tokens.map((expr, i) => {return {\r\n\t\t\t\t\toperator: parse.matches[i],\r\n\t\t\t\t\tval: parseCallback(expr.trim())\r\n\t\t\t\t};})\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nMath.operators = {\r\n\tsup: ['*', '/'],\r\n\tsub: ['+', '-'],\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Math;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNumeric from '@webqit/util/js/isNumeric.js';\r\nimport NumInterface from './NumInterface.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Num (number) class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Num = class extends NumInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(int, dec = 0) {\r\n\t\tsuper();\r\n\t\tthis.int = int;\r\n\t\tthis.dec = dec;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval() {\r\n\t\treturn parseFloat(this.int + (this.dec ? '.' + this.dec : null));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.int + (this.dec ? '.' + this.dec : null);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (_isNumeric(expr)) {\r\n\t\t\tvar expr = expr.split('.');\r\n\t\t\treturn new this(\r\n\t\t\t\tparseInt(expr.shift()),\r\n\t\t\t\tparseInt(expr.shift())\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Num;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ObjInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'ObjectType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\nimport _first from '@webqit/util/arr/first.js';\r\nimport _last from '@webqit/util/arr/last.js';\r\nimport _each from '@webqit/util/obj/each.js';\r\nimport ObjInterface from './ObjInterface.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Object utils\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Obj = class extends ObjInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(entries) {\r\n\t\tsuper();\r\n\t\tthis.entries = entries || {};\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tinherit(Super) {\r\n\t\tif (Super instanceof ObjInterface) {\r\n\t\t\t_each(Super.entries, (name, val) => {\r\n\t\t\t\tif (!(name in this.entries)) {\r\n\t\t\t\t\tthis.entries[name] = val;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\tvar items = {};\r\n\t\t_each(this.entries, (key, expr) => {\r\n\t\t\titems[key] = expr.eval(context, params);\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\tvar str = [];\r\n\t\t_each(this.entries, (key, expr) => {\r\n\t\t\tstr.push(key + Obj.operators.sub + expr.stringify(params));\r\n\t\t});\r\n\t\treturn '{' + str.join(Obj.operators.sup) + '}';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (_wrapped(expr, '{', '}') && !Lexer.match(expr.trim(), [' ']).length) {\r\n\t\t\tvar entries = {};\r\n\t\t\tvar _entriesSplit = Lexer.split(_unwrap(expr, '{', '}'), [Obj.operators.sup])\r\n\t\t\t\t.map(n => n.trim()).filter(n => n);\r\n\t\t\t_each(_entriesSplit, (key, expr) => {\r\n\t\t\t\tvar entry = Lexer.split(expr, [Obj.operators.sub], {limit:1}/*IMPORTANT*/);\r\n\t\t\t\tentries[_first(entry).trim()] = parseCallback(_last(entry).trim());\r\n\t\t\t});\r\n\t\t\treturn new this(entries);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nObj.operators = {\r\n\tsup: ',',\r\n\tsub: ':',\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Obj;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * PresenceInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'PresenceOperator'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _last from '@webqit/util/arr/last.js';\r\nimport _isUndefined from '@webqit/util/js/isUndefined.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport PresenceInterface from './PresenceInterface.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport SyntaxError from '../SyntaxError.js';\r\nimport ReferenceError from '../ReferenceError.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Presence class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Presence = class extends PresenceInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(prop, reference, operator = 'in') {\r\n\t\tsuper();\r\n\t\tthis.prop = prop;\r\n\t\tthis.reference = reference;\r\n\t\tthis.operator = operator;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\tvar prop = this.prop.eval(context, params);\r\n\t\ttry {\r\n\t\t\treturn this.reference.getEval(context, params).has(prop);\r\n\t\t} catch(e) {\r\n\t\t\tif (e instanceof ReferenceError) {\r\n\t\t\t\tthrow new ReferenceError('[' + this + ']: ' + e.message);\r\n\t\t\t} else {\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn [this.prop.stringify(params), this.operator, this.reference.stringify(params)].join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar parse = Lexer.lex(expr, this.operators);\r\n\t\tif (parse.tokens.length === 2) {\r\n\t\t\tvar prop, reference;\r\n\t\t\tif (!(prop = parseCallback(parse.tokens.shift().trim()))\r\n\t\t\t|| !((reference = parseCallback(parse.tokens.shift().trim())) instanceof ReferenceInterface)) {\r\n\t\t\t\tthrow new SyntaxError(expr);\r\n\t\t\t}\r\n\t\t\treturn new this(prop, reference, parse.matches[0].trim());\r\n\t\t}\r\n\t}\r\n};\t\r\n\r\n/**\r\n * @prop array\r\n */\r\nPresence.operators = [' in '];\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Presence;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isUndefined from '@webqit/util/js/isUndefined.js';\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport ExprInterface from '../ExprInterface.js';\r\nimport Scope from '../Scope.js';\r\nimport SyntaxError from '../SyntaxError.js';\r\nimport ReferenceError from '../ReferenceError.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Reference class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Reference extends ReferenceInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(context, name, backticks = false) {\r\n\t\tsuper();\r\n\t\tthis.context = context;\r\n\t\tthis.name = name;\r\n\t\tthis.backticks = backticks;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tgetEval(context = null, params = {}) {\r\n\t\tvar sourceContext = context, name = this.name;\r\n\t\tif (this.context) {\r\n\t\t\tif (name instanceof ExprInterface) {\r\n\t\t\t\tname = name.eval(context, params);\r\n\t\t\t}\r\n\t\t\tsourceContext = this.context.eval(context, params);\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tget() {\r\n\t\t\t\treturn Scope.create(sourceContext, params).get(name, params.trap);\r\n\t\t\t},\r\n\t\t\tdel() {\r\n\t\t\t\treturn Scope.create(sourceContext, params).del(name, params.trap);\r\n\t\t\t},\r\n\t\t\thas(prop) {\r\n\t\t\t\treturn Scope.create(sourceContext, params).has(name, prop, params.trap);\r\n\t\t\t},\r\n\t\t\tset(val, initKeyword = null) {\r\n\t\t\t\treturn Scope.create(sourceContext, params).set(name, val, params.trap, initKeyword);\r\n\t\t\t},\r\n\t\t\texec(args) {\r\n\t\t\t\treturn Scope.create(sourceContext, params).exec(name, args, params.trap);\r\n\t\t\t},\r\n\t\t};\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\ttry {\r\n\t\t\treturn this.getEval(context, params).get();\r\n\t\t} catch(e) {\r\n\t\t\tif (e instanceof ReferenceError) {\r\n\t\t\t\tthrow new ReferenceError('[' + this + ']: ' + e.message);\r\n\t\t\t} else {\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\tvar name = this.name;\r\n\t\tif (this.context) {\r\n\t\t\tvar subjectContext = this.context.stringify(params);\r\n\t\t\tif (name instanceof ExprInterface) {\r\n\t\t\t\tname = '[' + name.stringify(params) + ']';\r\n\t\t\t} else if (this.backticks) {\r\n\t\t\t\tname = '`' + name + '`';\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar subjectContext = params.context;\r\n\t\t\tif (this.backticks) {\r\n\t\t\t\tname = '`' + name + '`';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn (subjectContext || '') + (subjectContext && !name.startsWith('[') ? Reference.separator : '') + name;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (!Lexer.match(expr.trim(), [' ']).length) {\r\n\t\t\tvar splits = Lexer.split(expr, []);\r\n\t\t\t// ------------------------\r\n\t\t\t// name, first\r\n\t\t\t// ------------------------\r\n\t\t\tvar context, name = splits.pop(), backticks;\r\n\t\t\tvar nameSplit = Lexer.split(name.trim(), [this.separator], {preserveDelims:true});\r\n\t\t\tif (nameSplit.length > 1) {\r\n\t\t\t\tname = nameSplit.pop().substr(1);\r\n\t\t\t\tsplits = splits.concat(nameSplit);\r\n\t\t\t}\r\n\t\t\tif (_wrapped(name, '`', '`')) {\r\n\t\t\t\tname = _unwrap(name, '`', '`');\r\n\t\t\t\tbackticks = true;\r\n\t\t\t}\r\n\t\t\t// ------------------------\r\n\t\t\t// context, second\r\n\t\t\t// ------------------------\r\n\t\t\tif (splits.length) {\r\n\t\t\t\tcontext = parseCallback(splits.join(''));\r\n\t\t\t\tcontext.role = 'CONTEXT';\r\n\t\t\t}\r\n\t\t\tif (_wrapped(name, '[', ']')) {\r\n\t\t\t\tif (!context) {\r\n\t\t\t\t\tthrow new SyntaxError(expr);\r\n\t\t\t\t}\r\n\t\t\t\tname = parseCallback(_unwrap(name, '[', ']'));\r\n\t\t\t}\r\n\t\t\treturn new this(context, name, backticks);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop string\r\n */\r\nReference.separator = '.';\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport ReturnInterface from './ReturnInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Ret (return) class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Return = class extends ReturnInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(expr) {\r\n\t\tsuper();\r\n\t\tthis.expr = expr;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.expr ? this.expr.eval(context, params) : undefined;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.expr ? 'return ' + this.expr.stringify(params) : 'return';\r\n\t}\r\n\t\r\n\t/**\r\n\t * -------------------------------------------------------\r\n\t */\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar exprLc = expr.toLowerCase();\r\n\t\tif (exprLc.startsWith('return ') || exprLc === 'return') {\r\n\t\t\treturn new this(\r\n\t\t\t\tparseCallback(expr.substr(6).trim())\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Return;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\nimport StrInterface from './StrInterface.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport Bool from './Bool.js';\r\n\r\n/**\r\n * ---------------------------\r\n * String utils\r\n * ---------------------------\r\n */\r\n\r\nconst Str = class extends StrInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(expr, quote) {\r\n\t\tsuper();\r\n\t\tthis.expr = expr;\r\n\t\tthis.quote = quote;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval() {\r\n\t\treturn this.expr;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.quote + this.expr + this.quote;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\texpr = expr.trim();\r\n\t\tif ((_wrapped(expr, '\"', '\"') || _wrapped(expr, \"'\", \"'\")) \r\n\t\t&& !Lexer.match(expr, [' ']).length) {\r\n\t\t\tvar quote = _wrapped(expr, '\"', '\"') ? '\"' : \"'\";\r\n\t\t\treturn new this(\r\n\t\t\t\t_unwrap(expr, quote, quote),\r\n\t\t\t\tquote\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Str;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * VoidInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Void'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport VoidInterface from './VoidInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Void (boolean) class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Void = class extends VoidInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(val) {\r\n\t\tsuper();\r\n\t\tthis.val = val;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval() {\r\n\t\treturn this.val.toLowerCase().trim() === 'null' ? null : undefined;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.val;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar expr = expr.toLowerCase().trim();\r\n\t\tif (expr === 'null' || expr === 'undefined') {\r\n\t\t\treturn new this(expr);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Void;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from './ExprInterface.js';\r\nimport IndependentExprInterface from './IndependentExprInterface.js';\r\nimport Abstraction from './grammar/Abstraction.js';\r\nimport AbstractionInterface from './grammar/AbstractionInterface.js';\r\nimport Arr from './grammar/Arr.js';\r\nimport ArrInterface from './grammar/ArrInterface.js';\r\nimport Arguments from './grammar/Arguments.js';\r\nimport ArgumentsInterface from './grammar/ArgumentsInterface.js';\r\nimport Assertion from './grammar/Assertion.js';\r\nimport AssertionInterface from './grammar/AssertionInterface.js';\r\nimport Assignment from './grammar/Assignment.js';\r\nimport AssignmentInterface from './grammar/AssignmentInterface.js';\r\nimport Block from './grammar/Block.js';\r\nimport BlockInterface from './grammar/BlockInterface.js';\r\nimport Bool from './grammar/Bool.js';\r\nimport BoolInterface from './grammar/BoolInterface.js';\r\nimport Call from './grammar/Call.js';\r\nimport CallInterface from './grammar/CallInterface.js';\r\nimport Comparison from './grammar/Comparison.js';\r\nimport ComparisonInterface from './grammar/ComparisonInterface.js';\r\nimport Condition from './grammar/Condition.js';\r\nimport ConditionInterface from './grammar/ConditionInterface.js';\r\nimport Deletion from './grammar/Deletion.js';\r\nimport DeletionInterface from './grammar/DeletionInterface.js';\r\nimport Func from './grammar/Func.js';\r\nimport FuncInterface from './grammar/FuncInterface.js';\r\nimport If from './grammar/If.js';\r\nimport IfInterface from './grammar/IfInterface.js';\r\nimport Math from './grammar/Math.js';\r\nimport MathInterface from './grammar/MathInterface.js';\r\nimport Num from './grammar/Num.js';\r\nimport NumInterface from './grammar/NumInterface.js';\r\nimport Obj from './grammar/Obj.js';\r\nimport ObjInterface from './grammar/ObjInterface.js';\r\nimport Presence from './grammar/Presence.js';\r\nimport PresenceInterface from './grammar/PresenceInterface.js';\r\nimport Reference from './grammar/Reference.js';\r\nimport ReferenceInterface from './grammar/ReferenceInterface.js';\r\nimport Return from './grammar/Return.js';\r\nimport ReturnInterface from './grammar/ReturnInterface.js';\r\nimport Str from './grammar/Str.js';\r\nimport StrInterface from './grammar/StrInterface.js';\r\nimport Void from './grammar/Void.js';\r\nimport VoidInterface from './grammar/VoidInterface.js';\r\n\r\n/**\r\n * @var object\r\n */\r\nexport default {\r\n\tIf: If,\t\t\t\t\t\t// if (condition) expr1 else expre2\r\n\t//Block: Block,\t\t\t\t// field1 = 3; field2 = val2\r\n\tReturn: Return,\t\t\t\t// return field1\r\n\tDeletion: Deletion,\t\t\t// delete field1\r\n\tAssignment: Assignment,\t\t// field1[key1].key2 = k\r\n\tPresence: Presence,\t\t\t// key1 in field1\r\n\tFunc: Func,\t\t\t\t\t// (field1, field2) => {}\r\n\tAbstraction: Abstraction,\t// (field1)\r\n\tCondition: Condition,\t\t// field1 > field2 ? val1 : val2\r\n\tAssertion: Assertion,\t\t// !field1 && field2\r\n\tComparison: Comparison,\t\t// field1 > field2\r\n\tMath: Math,\t\t\t\t\t// field1 + field2\r\n\tArr: Arr,\t\t\t\t\t// [field1, field2]\r\n\tObj: Obj,\t\t\t\t\t// {field1:val1, field2:val2}\r\n\tNum: Num,\t\t\t\t\t// [0-9]\r\n\tStr: Str,\t\t\t\t\t// \"\"\r\n\tBool: Bool,\t\t\t\t\t// true\r\n\tVoid: Void,\t\t\t\t\t// null|undefined\r\n\tCall: Call,\t\t\t\t\t// field1()\r\n\tReference: Reference,\t\t// field1\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport {\r\n\tExprInterface,\r\n\tIndependentExprInterface,\r\n};\r\nexport {\r\n\tAbstraction,\r\n\tArr,\r\n\tArguments,\r\n\tAssertion,\r\n\tAssignment,\r\n\tBlock,\r\n\tBool,\r\n\tCall,\r\n\tComparison,\r\n\tCondition,\r\n\tDeletion,\r\n\tFunc,\r\n\tIf,\r\n\tMath,\r\n\tNum,\r\n\tObj,\r\n\tPresence,\r\n\tReference,\r\n\tReturn,\r\n\tStr,\r\n\tVoid,\r\n};\r\nexport {\r\n\tAbstractionInterface,\r\n\tArrInterface,\r\n\tArgumentsInterface,\r\n\tAssertionInterface,\r\n\tAssignmentInterface,\r\n\tBlockInterface,\r\n\tBoolInterface,\r\n\tCallInterface,\r\n\tComparisonInterface,\r\n\tConditionInterface,\r\n\tDeletionInterface,\r\n\tFuncInterface,\r\n\tIfInterface,\r\n\tMathInterface,\r\n\tNumInterface,\r\n\tObjInterface,\r\n\tPresenceInterface,\r\n\tReferenceInterface,\r\n\tReturnInterface,\r\n\tStrInterface,\r\n\tVoidInterface,\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport Parser from './Parser.js';\r\nimport grammar from './grammar.js';\r\nimport Scope from './Scope.js';\r\n\r\n/**\r\n * @var object\r\n */\r\nParser.grammar = grammar;\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Parser;\r\nexport {\r\n\tScope,\r\n}\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Jsen from './index.js';\r\n\r\n// As globals\r\nif (!window.WN) {\r\n\twindow.WN = {};\r\n}\r\nwindow.WN.Jsen = Jsen;\r\nif (!window.WebNative) {\r\n\twindow.WebNative = {};\r\n}\r\nwindow.WebNative.Jsen = Jsen;\r\n"],"sourceRoot":""}