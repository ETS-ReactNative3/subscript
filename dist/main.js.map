{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@webqit/util/js/isArray.js","webpack:///./node_modules/@webqit/util/js/isTypeFunction.js","webpack:///./node_modules/@webqit/util/js/isFunction.js","webpack:///./node_modules/@webqit/util/js/isObject.js","webpack:///./node_modules/@webqit/util/js/isTypeObject.js","webpack:///./node_modules/@webqit/util/js/isNumber.js","webpack:///./node_modules/@webqit/util/js/isNumeric.js","webpack:///./node_modules/@webqit/util/obj/getAllPropertyNames.js","webpack:///./node_modules/@webqit/util/obj/getPrototypeChain.js","webpack:///./node_modules/@webqit/util/arr/pushUnique.js","webpack:///./node_modules/@webqit/util/obj/mergeCallback.js","webpack:///./node_modules/@webqit/util/obj/merge.js","webpack:///./node_modules/@webqit/util/js/isNull.js","webpack:///./node_modules/@webqit/util/js/isUndefined.js","webpack:///./node_modules/@webqit/util/js/isPlainObject.js","webpack:///./node_modules/@webqit/util/js/isBoolean.js","webpack:///./node_modules/@webqit/util/obj/each.js","webpack:///./node_modules/@webqit/util/obj/even.js","webpack:///./node_modules/@webqit/util/obj/compareCallback.js","webpack:///./src/ExprInterface.js","webpack:///./src/grammar/ReferenceInterface.js","webpack:///./src/grammar/CallInterface.js","webpack:///./src/IndependentExprInterface.js","webpack:///./src/grammar/IfInterface.js","webpack:///./src/SyntaxError.js","webpack:///./node_modules/@webqit/util/str/wrapped.js","webpack:///./node_modules/@webqit/util/str/after.js","webpack:///./node_modules/@webqit/util/str/before.js","webpack:///./node_modules/@webqit/util/str/unwrap.js","webpack:///./node_modules/@webqit/util/str/beforeLast.js","webpack:///./node_modules/@webqit/util/js/isString.js","webpack:///./node_modules/@webqit/util/arr/from.js","webpack:///./node_modules/@webqit/util/js/isEmpty.js","webpack:///./node_modules/@webqit/util/js/isTypeArray.js","webpack:///./node_modules/@webqit/util/arr/flatten.js","webpack:///./node_modules/@webqit/util/arr/first.js","webpack:///./node_modules/@webqit/util/arr/last.js","webpack:///./node_modules/@webqit/util/obj/copyPlain.js","webpack:///./node_modules/@webqit/util/str/Lexer.js","webpack:///./src/grammar/AbstractionInterface.js","webpack:///./src/grammar/ArrInterface.js","webpack:///./src/grammar/Arr.js","webpack:///./node_modules/@webqit/util/arr/unique.js","webpack:///./src/grammar/AssertionInterface.js","webpack:///./src/grammar/Assertion.js","webpack:///./src/grammar/AssignmentInterface.js","webpack:///./src/ReferenceError.js","webpack:///./src/grammar/Assignment.js","webpack:///./src/grammar/BoolInterface.js","webpack:///./src/grammar/ArgumentsInterface.js","webpack:///./src/grammar/ComparisonInterface.js","webpack:///./src/grammar/Comparison.js","webpack:///./src/grammar/ConditionInterface.js","webpack:///./src/grammar/Condition.js","webpack:///./src/grammar/DeletionInterface.js","webpack:///./src/grammar/Deletion.js","webpack:///./src/grammar/FuncInterface.js","webpack:///./src/grammar/BlockInterface.js","webpack:///./src/grammar/ReturnInterface.js","webpack:///./src/grammar/NumInterface.js","webpack:///./src/grammar/StrInterface.js","webpack:///./src/util.js","webpack:///./src/Scope.js","webpack:///./node_modules/@webqit/util/js/isClass.js","webpack:///./src/grammar/Block.js","webpack:///./src/grammar/Func.js","webpack:///./src/grammar/If.js","webpack:///./node_modules/@webqit/util/arr/intersect.js","webpack:///./src/grammar/MathInterface.js","webpack:///./src/grammar/Math.js","webpack:///./src/grammar/ObjInterface.js","webpack:///./src/grammar/Obj.js","webpack:///./src/grammar/PresenceInterface.js","webpack:///./src/grammar/Presence.js","webpack:///./src/grammar/Reference.js","webpack:///./src/grammar/VoidInterface.js","webpack:///./src/browser-entry.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Array","isArray","val","toString","Number","isNaN","keysAll","until","prototypalChain","obj","indexOf","push","getPrototypeOf","forEach","items","itm","arr","getOwnPropertyNames","mergeCallback","objs","callback","deepProps","isReplace","withSymbols","depth","obj1","shift","length","Error","obj2","valAtObj1","valAtObj2","getOwnPropertyDescriptor","e","k","arguments","undefined","returnValue","keys","parseFloat","_even","assertion","obj1Keys","obj2Keys","result","contn","v1","testPass","v2","netComparison","contrast","returnOnFirstFalse","Expr","jsenType","this","Super","comments","meta","vars","Interface","ExprInterface","args","super","subject","startsWith","openingTag","endsWith","closingTag","search","pos","afterLast","lastIndexOf","substr","beforeLast","String","castObject","slice","values","_flatten","withObjects","reduce","acc","concat","count","firsts","amount","reverse","filter","str","delims","options","copyResult","nesting","maxDepth","tokens","matches","matchesi","$cache","cache","cached","lex","$str","$options","blocks","$blocks","quotes","$quotes","$comments","runtime","cursor","_evalCharsAt","join","charWidth","commentTest","quoteTest","nestingTest","openComment","_testQuotes","openQuote","_testComments","ending","_push","chars","starting","limit","_testNesting","stopChar","_testChars","stopChars","stopCharForward","matchedDelim","preserveDelims","nextIndex","quote","block","Math","max","testList","test","ret","useRegex","match","RegExp","ci","toLowerCase","target","isNewSeries","splitSeries","splitSeries2","regParse","index","self","AssertionInterface","exprs","logic","context","params","Assertion","constructor","negation","eval","operators","trim","toUpperCase","isOr","or","isNor","nor","isAnd","and","isNand","nand","lastResult","trues","stringify","map","expr","parseCallback","parse","Assignment","AssignmentInterface","initKeyword","reference","operator","postIncrDecr","initialVal","getEval","includes","operandA","operandB","set","references","_pushUnique","ReferenceError","message","testBlockEnd","isIncrDecr","SyntaxError","role","ReferenceInterface","a","b","ComparisonInterface","operand1","operand2","compare","oper","strict","exact","is","isNull","equalsTo","strictlyNotEqualsTo","notEqualsTo","relative","lesserThan","greaterThan","lesserThanOrEqualsTo","greaterThanOrEqualsTo","between","partial","contains","any","in","ConditionInterface","onTrue","onFalse","splits","split","Deletion","DeletionInterface","del","pop","red","IndependentExprInterface","pathStartsWith","prev","referencesToPaths","seg","pathArray","CallInterface","splice","unshift","NumInterface","int","StrInterface","stack","errorLevel","local","$local","trap","observe","props","prop","_has","main","scope","_params","subtree","tags","diff","changes","path","keysMain","oldValue","ref","unobserve","final","level","callMain","handle","bindThis","contxtObj","contxtMeta","advance","_get","Function","isRootVar","type","_set","cntxt","localContxtMeta","LogicalError","strictMode","deleteProperty","prop2","contextObj2","fn","exec","apply","execUnknown","scopeObj","cntxts","supr","has","BlockInterface","stmts","delim","returned","returnCallback","flag","callEval","stmt","catch","results","reads","deepReads","deep","isDirectEventTarget","v","isIndirectEventTarget","isFirstRunOrDirectOrIndirectReference","ReturnInterface","IfInterface","abortive","basePath","leafPath","Func","FuncInterface","paramters","statements","arrowFunctionFormatting","isIndependent","parentParams","ownParams","nameInParent","nameInSelf","defaultValInParent","defaultValInSelf","sup","instance","newMainContext","defaultVal","nestedContext","retrn","body","headNoWrap","head","bodyNoWrap","funcHead","funcBody","param","paramSplit","assert","arr2","val1","val2","MathInterface","currentTotal","sub","Obj","ObjInterface","entries","_entriesSplit","entry","Presence","PresenceInterface","backticks","sourceContext","subjectContext","separator","nameSplit","window","WebQit","Subscript"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","\r\n/**\r\n * Tells if val is of type \"array\".\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn Array.isArray(val);\r\n};\r\n","\r\n/**\r\n * Tells if val is of type \"function\".\r\n * This holds true for both regular functions and classes.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn typeof val === 'function';\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeFunction from './isTypeFunction.js';\r\n\r\n/**\r\n * Tells if val is of type \"function\".\r\n *\r\n * @param object \t\tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isTypeFunction(val) || (val && {}.toString.call(val) === '[object function]');\r\n};\r\n","\r\n/**\r\n * Tells if val is pure object.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn !Array.isArray(val) && typeof val === 'object' && val;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeFunction from './isTypeFunction.js';\r\n\r\n/**\r\n * Tells if val is of type \"object\".\r\n * This holds true for anything object, including built-ins.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn Array.isArray(val) || (typeof val === 'object' && val) || _isTypeFunction(val);\r\n};\r\n","\r\n/**\r\n * Tells if val is of type \"number\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val instanceof Number || (typeof val === 'number');\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNumber from './isNumber.js';\r\n/**\r\n * Tells if val is of type \"string\" or a numeric string.\r\n * This holds true for both numbers and numeric strings.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isNumber(val) || (val !== true && val !== false && val !== null && val !== '' && !isNaN(val * 1));\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _pushUnique from '../arr/pushUnique.js';\r\nimport _getPrototypeChain from './getPrototypeChain.js';\r\n\r\n/**\r\n * Eagerly retrieves object members all down the prototype chain.\r\n *\r\n * @param object\t \tobj\r\n * @param object\t \tuntil\r\n *\r\n * @return array\r\n */\r\nexport default function(obj, until) {\r\n\tvar keysAll = [];\r\n\t_getPrototypeChain(obj, until).forEach(obj => {\r\n\t\t_pushUnique(keysAll, ...Object.getOwnPropertyNames(obj));\r\n\t});\r\n\treturn keysAll;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\n\r\n/**\r\n * Returns the prototype chain.\r\n *\r\n * @param object \t\tobj\r\n * @param object\t \tuntil\r\n *\r\n * @return bool\r\n */\r\nexport default function(obj, until) {\r\n\tuntil = until || Object.prototype;\r\n\tuntil = until && !_isArray(until) ? [until] : until;\r\n\t// We get the chain of inheritance\r\n\tvar prototypalChain = [];\r\n\tvar obj = obj;\r\n\twhile((obj && (!until || until.indexOf(obj) < 0) && obj.name !== 'default')) {\r\n\t\tprototypalChain.push(obj);\r\n\t\tobj = obj ? Object.getPrototypeOf(obj) : null;\r\n\t}\r\n\treturn prototypalChain;\r\n};\r\n","\r\n/**\r\n * Adds an item if not already exist.\r\n *\r\n * @param array \tarr\r\n * @param array\t \t...itms\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, ...items) {\r\n\titems.forEach(itm => {\r\n\t\tif (arr.indexOf(itm) < 0) {\r\n\t\t\tarr.push(itm);\r\n\t\t}\r\n\t});\r\n\treturn arr;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\nimport _getAllPropertyNames from './getAllPropertyNames.js';\r\n\r\n/**\r\n  * Merges values from subsequent arrays/objects first array/object;\r\n  * optionally recursive\r\n  *\r\n  * @param array ...objs\r\n  *\r\n  * @return void\r\n  */\r\nexport default function mergeCallback(objs, callback, deepProps = false, isReplace = false, withSymbols = false) {\r\n\tvar depth = 0;\r\n\tvar obj1 = objs.shift();\r\n\tif (_isNumeric(obj1) || obj1 === true || obj1 === false) {\r\n\t\tdepth = obj1;\r\n\t\tobj1 = objs.shift();\r\n\t}\r\n\tif (!objs.length) {\r\n\t\tthrow new Error('_merge() requires two or more array/objects.');\r\n\t}\r\n\tobjs.forEach((obj2, i) => {\r\n\t\tif (!_isTypeObject(obj2) && !_isFunction(obj2)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t(deepProps ? _getAllPropertyNames(obj2) : Object.getOwnPropertyNames(obj2)).forEach(key => {\r\n\t\t\tif (!callback(key, obj1, obj2, i)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar valAtObj1 = obj1[key];\r\n\t\t\tvar valAtObj2 = obj2[key];\r\n\t\t\tif (((_isArray(valAtObj1) && _isArray(valAtObj2)) || (_isObject(valAtObj1) && _isObject(valAtObj2))) \r\n\t\t\t&& (depth === true || depth > 0)) {\r\n\t\t\t\t// RECURSE...\r\n\t\t\t\tobj1[key] = _isArray(valAtObj1) && _isArray(valAtObj2) ? [] : {};\r\n\t\t\t\tmergeCallback([_isNumeric(depth) ? depth - 1 : depth, obj1[key], valAtObj1, valAtObj2], callback, deepProps, isReplace, withSymbols);\r\n\t\t\t} else {\r\n\t\t\t\tif (_isArray(obj1) && _isArray(obj2)) {\r\n\t\t\t\t\tif (isReplace) {\r\n\t\t\t\t\t\tobj1[key] = valAtObj2;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tobj1.push(valAtObj2);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// In case we're setting a read-only property\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tif (withSymbols) {\r\n\t\t\t\t\t\t\tObject.defineProperty(obj1, key, Object.getOwnPropertyDescriptor(obj2, key));\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tobj1[key] = obj2[key];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} catch(e) {}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\treturn obj1;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _mergeCallback from './mergeCallback.js';\r\n\r\n/**\r\n  * Merges values from subsequent arrays/objects first array/object;\r\n  * optionally recursive\r\n  *\r\n  * @param array ...objs\r\n  *\r\n  * @return void\r\n  */\r\nexport default function(...objs) {\r\n\treturn _mergeCallback(objs, (k, obj1, obj2) => {\r\n\t\treturn true;\r\n\t}, false/*deepProps*/, false/*isReplace*/, false/*withSymbols*/);\r\n};\r\n","\r\n/**\r\n * Tells if val is undefined or is null.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val === null || val === '';\r\n};\r\n","\r\n/**\r\n * Tells if val is undefined or is of type \"undefined\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn arguments.length && (val === undefined || typeof val === 'undefined');\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isObject from './isObject.js';\r\n\r\n/**\r\n * Tells if an object is direct instance of Object.prototype.\r\n * Quite useful in differentiating native objects and class instances from plain objects ({}).\r\n *\r\n * @param object \tobj\r\n *\r\n * @return bool\r\n */\r\nexport default function(obj) {\r\n\treturn _isObject(obj) && Object.getPrototypeOf(obj) === Object.prototype;\r\n};\r\n","\r\n/**\r\n * Tells if val is undefined or is of type \"boolean\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val === true || val === false;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\n\r\n/**\r\n * Loops thru obj flatly with a callback function.\r\n * Stops when callback returns a non-undefined value.\r\n *\r\n * @param array|object \t\t\tobj \t\t\tThe array or object to iterate.\r\n * @param function \t\t\t\tcallback \t\tThe callback function.\r\n *\r\n * @return mixed|null\t\t\tAny non-null return from callback\r\n */\r\nexport default function(obj, callback) {\r\n\tvar returnValue = undefined;\r\n\tif (_isTypeObject(obj)) {\r\n\t\tObject.keys(obj).forEach((k, i) => {\r\n\t\t\tif (returnValue !== false) {\r\n\t\t\t\treturnValue = callback(_isNumeric(k) ? parseFloat(k) : k, obj[k], i);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\treturn returnValue;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNumber from '../js/isNumber.js';\r\nimport _isArray from '../js/isArray.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _isPlainObject from '../js/isPlainObject.js';\r\nimport _compareCallback from './compareCallback.js';\r\n\r\n/**\r\n * Asserts (members of) the first value against (members of) subsequent values.\r\n * Assertion could be TRUE, FALSE, or custom.\r\n *\r\n * @param mixed \t\t\tobj1\r\n * @param mixed \t\t\tobj2\r\n * @param bool|function\t\tassertion\r\n * @param int\t\t\t\tdepth\r\n *\r\n * @return bool\r\n */\r\nconst _even = function(obj1, obj2, assertion = true, depth = 1) {\r\n\tif (_isArray(obj1) && _isArray(obj2) && obj1.length !== obj2.length) {\r\n\t\treturn !assertion;\r\n\t}\r\n\tif (_isObject(obj1) && _isObject(obj2)) {\r\n\t\tvar obj1Keys = Object.keys(obj1);\r\n\t\tvar obj2Keys = Object.keys(obj2);\r\n\t\tif (!obj1Keys.length && !obj2Keys.length) {\r\n\t\t\t// Objects that won't show keys must be compared by instance\r\n\t\t\t// Many native objects won't. So we can't judge by keys alone.\r\n\t\t\treturn _isPlainObject(obj1) && _isPlainObject(obj2) \r\n\t\t\t\t? assertion\r\n\t\t\t\t: (obj1 === obj2) === assertion;\r\n\t\t}\r\n\t\tif (!_even(obj1Keys, obj2Keys)) {\r\n\t\t\treturn !assertion;\r\n\t\t}\r\n\t}\r\n\tif (depth > 0 && ((_isArray(obj1) && _isArray(obj2)) || (_isObject(obj1) && _isObject(obj2)))) {\r\n\t\tvar result = _compareCallback(obj1, obj2, (v1, v2) => {\r\n\t\t\treturn _even(v1, v2, assertion, depth - 1);\r\n\t\t}, false/*netComparison*/, false/*contrast*/, true/*returnOnFirstFalse*/);\r\n\t\treturn _isArray(result) \r\n\t\t\t? result.length === obj1.length && result.length === obj2.length \r\n\t\t\t: (_isObject(result) && _isObject(obj1) \r\n\t\t\t\t? Object.keys(result).length === Object.keys(obj1).length && Object.keys(result).length ===  Object.keys(obj2).length \r\n\t\t\t\t: result);\r\n\t}\r\n\treturn _isFunction(assertion) ? assertion(obj1, obj2) : (\r\n\t\t_isNumber(obj1) && _isNumber(obj2) && isNaN(obj1) && isNaN(obj2) \r\n\t\t\t? assertion \r\n\t\t\t: (obj1 === obj2) === assertion\r\n\t);\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default _even;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isBoolean from '../js/isBoolean.js';\r\nimport _each from './each.js';\r\n\r\n/**\r\n * Gets the match(es) between (members of) two values;\r\n * assertion optionally custom.\r\n *\r\n * @param mixed \t\t\tob1\r\n * @param mixed \t\t\tobj2\r\n * @param string|function\tassertion\r\n * @param bool\t\t\t\tnetComparison\r\n * @param bool\t\t\t\tcontrast\r\n * @param bool\t\t\t\treturnOnFirstFalse\r\n *\r\n * @return bool|array|object\r\n */\r\nexport default function(obj1, obj2, assertion = true, netComparison = true, contrast = false, returnOnFirstFalse = false) {\r\n\tif (_isArray(obj1) && _isArray(obj2)) {\r\n\t\tvar result = [];\r\n\t\tvar contn = true;\r\n\t\tobj1.forEach(v1 => {\r\n\t\t\tif (!contn) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar testPass = false;\r\n\t\t\t_each(obj2, (k, v2) => {\r\n\t\t\t\tif (!testPass || (netComparison && _isTypeObject(v1))) {\r\n\t\t\t\t\ttestPass = assertion(v1, v2);\r\n\t\t\t\t\tif ((_isArray(testPass) && !testPass.length) || (_isObject(testPass) && !Object.keys(testPass).length)) {\r\n\t\t\t\t\t\ttestPass = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (_isTypeObject(testPass) && netComparison) {\r\n\t\t\t\t\t\t// Further recursions should use this testPass as v1\r\n\t\t\t\t\t\tv1 = testPass;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (_isTypeObject(testPass)) {\r\n\t\t\t\tresult.push(netComparison ? testPass : v1);\r\n\t\t\t} else if (!_isBoolean(testPass)) {\r\n\t\t\t\tresult.push(testPass);\r\n\t\t\t} else if ((contrast && !testPass) || (!contrast && testPass)) {\r\n\t\t\t\tresult.push(v1);\r\n\t\t\t} else if (returnOnFirstFalse) {\r\n\t\t\t\tcontn = false;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\tif (_isObject(obj1) && _isObject(obj2)) {\r\n\t\tvar result = {};\r\n\t\tvar contn = true;\r\n\t\tObject.keys(obj1).forEach(k => {\r\n\t\t\tif (!contn) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar testPass = assertion(obj1[k], obj2[k]);\r\n\t\t\tif ((_isArray(testPass) && !testPass.length) || (_isObject(testPass) && !Object.keys(testPass).length)) {\r\n\t\t\t\ttestPass = false;\r\n\t\t\t}\r\n\t\t\tif (_isTypeObject(testPass)) {\r\n\t\t\t\tresult[k] = netComparison ? testPass : obj1[k];\r\n\t\t\t} else if (!_isBoolean(testPass)) {\r\n\t\t\t\tresult[k] = testPass;\r\n\t\t\t} else if ((contrast && !testPass) || (!contrast && testPass)) {\r\n\t\t\t\tresult[k] = obj1[k];\r\n\t\t\t} else if (returnOnFirstFalse) {\r\n\t\t\t\tcontn = false;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isObject from '@webqit/util/js/isObject.js';\r\nimport _even from '@webqit/util/obj/even.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ExprInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class {\r\n\t\r\n\t/**\r\n\t * Compares the current instance with another object.\r\n\t *\r\n\t * @param object Expr\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\teven(Expr) {\r\n\t\tif (_isObject(Expr) && Expr.jsenType === this.jsenType) {\r\n\t\t\treturn _even(Expr, this);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Inherits properties from a super Expr.\r\n\t *\r\n\t * @param ExprInterface Super\r\n\t *\r\n\t * @return this\r\n\t */\r\n\tinherit(Super) {\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Adds comments to the instance.\r\n\t *\r\n\t * @param string\t comments\r\n\t *\r\n\t * @return this\r\n\t */\r\n\twithComments(comments) {\r\n\t\tif (!this.meta) {\r\n\t\t\tthis.meta = {};\r\n\t\t}\r\n\t\tthis.meta.comments = comments;\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Adds variables to the instance.\r\n\t *\r\n\t * @param array\t\t vars\r\n\t *\r\n\t * @return this\r\n\t */\r\n\twithVars(vars) {\r\n\t\tif (!this.meta) {\r\n\t\t\tthis.meta = {};\r\n\t\t}\r\n\t\tthis.meta.vars = vars;\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Evaluates the expression instance for a result,\r\n\t * optionally in the context of an object.\r\n\t *\r\n\t * @param object context\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\t//eval(context = null, params = {})\r\n\t\r\n\t/**\r\n\t * SAttempts to parse a string into the class instance.\r\n\t *\r\n\t * @param string expr\r\n\t * @param object params\r\n\t *\r\n\t * @return ExprInterface\r\n\t */\r\n\t//static parse(expr, params = {})\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ReferenceInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Reference'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * CallInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'CallExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from './ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * IndependentScopeInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class extends ExprInterface {};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * IfInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'IfConstruct'; },\r\n});\r\nexport default Interface;\r\n","/**\r\n * SyntaxError\r\n */\r\nexport default class extends Error {\r\n    constructor(...args) {\r\n        super(...args);\r\n        this.name = 'Syntax Error';\r\n    }\r\n};","\r\n/**\r\n * Tells if the string is warapped with the given opening and closing tags.\r\n *\r\n * @param  string  subject\r\n * @param  string  openingTag\r\n * @param  string  closingTag\r\n *\r\n * @return bool\r\n */\r\nexport default function(subject, openingTag, closingTag) {\r\n\treturn subject.startsWith(openingTag) && subject.endsWith(closingTag);\r\n};\r\n","\r\n/**\r\n * Return the remainder of a string after a given value.\r\n *\r\n * @param  string  subject\r\n * @param  string  search\r\n * @param  bool\t   afterLast\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, search, afterLast = false) {\r\n\tif (search == '') {\r\n\t\treturn subject;\r\n\t}\r\n\tvar pos = afterLast ? subject.lastIndexOf(search) : subject.indexOf(search);\r\n\tif (pos === -1) {\r\n\t\treturn '';\r\n\t}\r\n\treturn subject.substr(pos + search.length);\r\n};\r\n","\r\n/**\r\n * Return the part of a string before a given value.\r\n *\r\n * @param  string  subject\r\n * @param  string  search\r\n * @param  bool\t   beforeLast\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, search, beforeLast = false) {\r\n\tif (search == '') {\r\n\t\treturn subject;\r\n\t}\r\n\tvar pos = beforeLast ? subject.lastIndexOf(search) : subject.indexOf(search);\r\n\tif (pos === -1) {\r\n\t\treturn subject;\r\n\t}\r\n\treturn subject.substr(0, pos);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _after from './after.js';\r\nimport _beforeLast from './beforeLast.js';\r\n\r\n/**\r\n * Returns the string without the given opening and closing tags.\r\n *\r\n * @param  string  subject\r\n * @param  string  openingTag\r\n * @param  string  closingTag\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, openingTag, closingTag) {\r\n\treturn _beforeLast(_after(subject, openingTag), closingTag);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _before from './before.js';\r\n\r\n/**\r\n * Return the part of a string before last occurence of a given value.\r\n *\r\n * @param  string  subject\r\n * @param  string  search\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, search) {\r\n\treturn _before(subject, search, true);\r\n};\r\n","\r\n/**\r\n * Tells if val is of type \"string\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val instanceof String || (typeof val === 'string' && val !== null);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isTypeArray from '../js/isTypeArray.js';\r\nimport _isEmpty from '../js/isEmpty.js';\r\nimport _isObject from '../js/isObject.js';\r\n\r\n/**\r\n * Casts an array-like object to an array.\r\n *\r\n * @param mixed \tval\r\n * @param bool\t \tcastObject\r\n *\r\n * @return array\r\n */\r\nexport default function(val, castObject = true) {\r\n\tif (_isArray(val)) {\r\n\t\treturn val;\r\n\t};\r\n\tif (!castObject && _isObject(val)) {\r\n\t\treturn [val];\r\n\t};\r\n\tif (val !== false && val !== 0 && _isEmpty(val)) {\r\n\t\treturn [];\r\n\t};\r\n\tif (_isTypeArray(val)) {\r\n\t\treturn Array.prototype.slice.call(val);\r\n\t};\r\n\tif (_isObject(val)) {\r\n\t\treturn Object.values(val);\r\n\t};\r\n\treturn [val];\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNull from './isNull.js';\r\nimport _isUndefined from './isUndefined.js';\r\nimport _isTypeObject from './isTypeObject.js';\r\n\r\n/**\r\n * Tells if val is empty in its own type.\r\n * This holds true for NULLs, UNDEFINED, FALSE, 0,\r\n * objects without keys, empty arrays.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isNull(val) || _isUndefined(val) || val === false || val === 0 \r\n\t\t|| (_isTypeObject(val) && !Object.keys(val).length);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isString from './isString.js';\r\nimport _isUndefined from './isUndefined.js';\r\n\r\n/**\r\n * Tells if val is \"array-like\".\r\n * This holds true for anything that has a length property.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn !_isString(val) && !_isUndefined(val.length);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\n\r\n/**\r\n * Flattens a nested array to the given depth.\r\n *\r\n * @param array \tarr\r\n * @param int \t \tdepth\r\n * @param bool \t \twithObjects\r\n *\r\n * @return array\r\n */\r\nconst _flatten = function(arr, depth = 1, withObjects = true) {\r\n\tif (!_isNumeric(depth) || depth <= 0) {\r\n\t\treturn arr;\r\n\t};\r\n\tif (!_isArray(arr) && _isObject(arr) && withObjects) {\r\n\t\tarr = Object.values(arr);\r\n\t};\r\n\tif (!_isArray(arr)) {\r\n\t\treturn arr;\r\n\t};\r\n\treturn arr.reduce((acc, val) => _isArray(val) || (_isObject(val) && withObjects) \r\n\t\t? acc.concat(_flatten(!_isArray(val) ? Object.values(val) : val, depth - 1, withObjects)) \r\n\t\t: acc.concat(val), []);\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default _flatten;","\r\n/**\r\n * Returns THE FIRST ENTRY OR A NUMBER OF ENTRIES counting forward from the begining.\r\n *\r\n * @param array \tarr\r\n * @param int\t \tamount\r\n *\r\n * @return mixed|array\r\n */\r\nexport default function(arr, amount = 1) {\r\n\tvar count = 0;\r\n\tarr.forEach(itm => {\r\n\t\tcount ++;\r\n\t});\r\n\tvar firsts = arr.slice(arr.length - count, amount);\r\n\treturn arguments.length > 1 ? firsts : firsts[0];\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _first from './first.js';\r\n\r\n/**\r\n * Returns THE LAST ENTRY OR A NUMBER OF ENTRIES counting forward to the end.\r\n *\r\n * @param array \tarr\r\n * @param int\t \tamount\r\n *\r\n * @return mixed|array\r\n */\r\nexport default function(arr, amount = 1) {\r\n\treturn arguments.length > 1\r\n\t\t? _first(arr.slice().reverse(), amount).reverse()\r\n\t\t: _first(arr.slice().reverse());\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _mergeCallback from './mergeCallback.js';\r\n\r\n/**\r\n * Copies only properties of an object.\r\n *\r\n * @param object\t \tobj\r\n * @param array\t\t \tonly\r\n * @param array\t\t \texcept\r\n *\r\n * @return object\r\n */\r\nexport default function(obj, filter = []) {\r\n\treturn _mergeCallback([{}, obj], (key, obj1, obj2) => {\r\n\t\tif (!_isFunction(obj2[key])) {\r\n\t\t\treturn _isFunction(filter) ? filter(key) \r\n\t\t\t\t: (_isArray(filter) && filter.length ? filter.indexOf(key) > -1 : true);\r\n\t\t}\r\n\t}, false/*deepProps*/, false/*isReplace*/, false/*withSymbols*/);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isString from '../js/isString.js';\r\nimport _isUndefined from '../js/isUndefined.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _arrFrom from '../arr/from.js';\r\nimport _flatten from '../arr/flatten.js';\r\nimport _first from '../arr/first.js';\r\nimport _last from '../arr/last.js';\r\nimport _merge from '../obj/merge.js';\r\nimport _even from '../obj/even.js';\r\nimport _copyPlain from '../obj/copyPlain.js';\r\n\r\n/**\r\n * --------------------------\r\n * TOKENIZER\r\n * --------------------------\r\n */\r\n\r\nexport default class Lexer {\r\n\r\n\t/**\r\n\t * Factory method.\r\n\t *\r\n\t * Handles caching.\r\n\t *\r\n\t * @see constructor()\r\n\t */\r\n\tstatic lex(str, delims, options = {}) {\r\n\t\tif (!_isString(str = str + '')) {\r\n\t\t\tthrow new Error('Argument1 must be a string!');\r\n\t\t}\r\n\t\tvar copyResult = result => {\r\n\t\t\treturn {\r\n\t\t\t\tdelims: result.delims.slice(),\r\n\t\t\t\toptions: _copyPlain(result.options),\r\n\t\t\t\tnesting: result.nesting.slice(),\r\n\t\t\t\tmaxDepth: result.maxDepth,\r\n\t\t\t\tcomments: result.comments.slice(),\r\n\t\t\t\ttokens: result.tokens.slice(),\r\n\t\t\t\tmatches: result.matches.slice(),\r\n\t\t\t\tmatchesi: _copyPlain(result.matchesi),\r\n\t\t\t};\r\n\t\t};\r\n\t\t// ASK CACHE ---------------------------\r\n\t\tif (Lexer.$cache[str] && options.cache !== false) {\r\n\t\t\tfor (var i = 0; i < Lexer.$cache[str].length; i ++) {\r\n\t\t\t\tvar cached = Lexer.$cache[str][i];\r\n\t\t\t\tif (_even(cached.delims, delims)) {\r\n\t\t\t\t\treturn copyResult(cached);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// FRESH PARSE\t -------------------------------\r\n\t\tvar instance = new Lexer(str, options);\r\n\t\tvar result = instance.lex(delims);\r\n\t\t// SAVE TO CACHE -------------------------------\r\n\t\tif (options.cache !== false) {\r\n\t\t\tLexer.$cache[str] = Lexer.$cache[str] || [];\r\n\t\t\tLexer.$cache[str].push(result);\r\n\t\t}\r\n\t\treturn copyResult(result);\r\n\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Factory method for .split().\r\n\t *\r\n\t * Handles caching.\r\n\t *\r\n\t * @see constructor()\r\n\t */\r\n\tstatic split(str, delims, options) {\r\n\t\treturn Lexer.lex(str, delims, options).tokens;\r\n\t}\r\n\r\n\t/**\r\n\t * Factory method for .match().\r\n\t *\r\n\t * Handles caching.\r\n\t *\r\n\t * @see constructor()\r\n\t */\r\n\tstatic match(str, delims, options) {\r\n\t\treturn Lexer.lex(str, delims, options).matches;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a lexer instance on a string with the given options.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions:\r\n\t * @param string \t\tblocks\t\t\t\tThe strings that begin and end a nested structure\r\n\t * @param number \t\tlimit\t\t\t\tMax results to return\r\n\t * @param string \t\tbackreference\t\tA character like (\\) that prefixes non-delim characters\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tconstructor(str, options) {\r\n\t\tif (!_isString(str)) {\r\n\t\t\tthrow new Error('Lexer requires the first argument to be a string.');\r\n\t\t}\r\n\t\tthis.$str = str;\r\n\t\tthis.$options = options || {};\r\n\t\tif (!this.$options.blocks) {\r\n\t\t\tthis.$options.blocks = Lexer.$blocks;\r\n\t\t}\r\n\t\tif (!this.$options.quotes) {\r\n\t\t\tthis.$options.quotes = Lexer.$quotes;\r\n\t\t}\r\n\t\tif (!this.$options.comments) {\r\n\t\t\tthis.$options.comments = Lexer.$comments;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the instance string on the given delimeters.\r\n\t *\r\n\t * This method supports static calling,\r\n\t * in which case a string is required as the first argument.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return object\r\n\t */\r\n\tlex(delims, options) {\r\n\t\tvar runtime = {\r\n\t\t\tdelims: _arrFrom(delims),\r\n\t\t\toptions: _merge(true, {}, this.$options, options || {}),\r\n\t\t\tnesting: [],\r\n\t\t\tmaxDepth: 0,\r\n\t\t\tcomments: [],\r\n\t\t\ttokens: [],\r\n\t\t\tmatches: [],\r\n\t\t\tmatchesi: {},\r\n\t\t};\r\n\t\t// Iterate over each character, keep track of current row and column (of the returned array)\r\n\t\tvar cursor = 0;\r\n\t\twhile(typeof cursor === 'number') {\r\n\t\t\tcursor = this._evalCharsAt(runtime, cursor);\r\n\t\t}\r\n\t\tif (runtime.nesting.length) {\r\n\t\t\tthrow new Error('Error parsing the string: ' + this.$str + '. Unterminated blocks: ' + _flatten(runtime.nesting).join(', ') + '');\r\n\t\t}\r\n\t\t// RETURN NEW ----------------------------------\r\n\t\treturn runtime;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: evaluates and handles the character on the current cursor.\r\n\t * Advances the cursor.\r\n\t *\r\n\t * @param object \truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return void\r\n\t */\r\n\t_evalCharsAt(runtime, i) {\r\n\t\tif (i >= this.$str.length) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar charWidth = 1;\r\n\t\tvar commentTest = {}, quoteTest = {}, nestingTest = {};\r\n\t\t// Quotes inside comments must be ignored\r\n\t\tif (!runtime.openComment) {\r\n\t\t\tquoteTest = this._testQuotes(runtime, i);\r\n\t\t}\r\n\t\t// Comments inside quotes must be ignored\r\n\t\tif (!runtime.openQuote) {\r\n\t\t\tcommentTest = this._testComments(runtime, i);\r\n\t\t}\r\n\t\t// Save comments\r\n\t\tif (runtime.openComment || commentTest.ending) {\r\n\t\t\t// Save only outer comments\r\n\t\t\tif (!runtime.nesting.length && !nestingTest.ending) {\r\n\t\t\t\tvar chars = commentTest.starting || commentTest.ending || this.$str[i];\r\n\t\t\t\tcharWidth = chars.length;\r\n\t\t\t\tthis._push(runtime, chars, 'comments', commentTest.starting);\r\n\t\t\t} else {\r\n\t\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t\t}\r\n\t\t} else if (runtime.openQuote || quoteTest.ending) {\r\n\t\t\t// Yes add quotes\r\n\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t} else if (runtime.options.limit && runtime.matches.length === runtime.options.limit) {\r\n\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t\treturn i + 1;\r\n\t\t} else {\r\n\t\t\t// Nesting tags inside comments and quotes have been ignored\r\n\t\t\tnestingTest = this._testNesting(runtime, i);\r\n\t\t\t// ---------------------\r\n\t\t\t// STOP ON THIS CHARACTER...?\r\n\t\t\t// ---------------------\r\n\t\t\tvar nestingTest = this._testNesting(runtime, i);\r\n\t\t\t// STOP CHAR(S)? at top level?\r\n\t\t\tvar stopChar = this._testChars(runtime.options.stopChars || [], runtime, i);\r\n\t\t\tif (!runtime.nesting.length && stopChar !== false) {\r\n\t\t\t\truntime.options.stopChar = stopChar;\r\n\t\t\t\truntime.options.stopCharForward = this.$str.substr(i);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t// ---------------------\r\n\t\t\t// Match and split now...\r\n\t\t\t// ---------------------\r\n\t\t\tif (!runtime.delims.length) {\r\n\t\t\t\t// BLOCK-BASED SPLITTING...\r\n\t\t\t\tif (runtime.nesting.length === 2 && nestingTest.starting) {\r\n\t\t\t\t\truntime.matches.push(null);\r\n\t\t\t\t\tthis._push(runtime, nestingTest.starting);\r\n\t\t\t\t\tcharWidth = nestingTest.starting.length;\r\n\t\t\t\t} else if (!runtime.nesting.length && nestingTest.ending) {\r\n\t\t\t\t\tthis._push(runtime, nestingTest.ending);\r\n\t\t\t\t\tcharWidth = nestingTest.ending.length;\r\n\t\t\t\t\truntime.matches.push(null);\r\n\t\t\t\t} else/*no-nesting flag*/ {\r\n\t\t\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// ---------------------\r\n\t\t\t\t// DELIMS-BASED SPLITTING\r\n\t\t\t\t// ---------------------\r\n\t\t\t\tif (!runtime.nesting.length && !nestingTest.ending) {\r\n\t\t\t\t\t// In case the chars at index 0 is a delim,\r\n\t\t\t\t\t// the resulting split should first have an empty string, instead of undefined\r\n\t\t\t\t\tthis._push(runtime, '');\r\n\t\t\t\t\tvar matchedDelim = this._testChars(runtime.delims, runtime, i);\r\n\t\t\t\t\tif (matchedDelim !== false) {\r\n\t\t\t\t\t\truntime.matches.push(matchedDelim);\r\n\t\t\t\t\t\truntime.matchesi[i] = matchedDelim;\r\n\t\t\t\t\t\tcharWidth = matchedDelim.length || 1;\r\n\t\t\t\t\t\tif (!runtime.options.preserveDelims) {\r\n\t\t\t\t\t\t\t// The current character is a delimiter...\r\n\t\t\t\t\t\t\t// and should not get to appending to the split series down the line\r\n\t\t\t\t\t\t\tvar nextIndex = i + (matchedDelim.length || 1);\r\n\t\t\t\t\t\t\tif (nextIndex === this.$str.length) {\r\n\t\t\t\t\t\t\t\t// In case the chars at last index is a delim,\r\n\t\t\t\t\t\t\t\t// the resulting split should last have an empty string\r\n\t\t\t\t\t\t\t\tthis._push(runtime, '');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn nextIndex;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._push(runtime, matchedDelim || this.$str[i]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar chars = nestingTest.starting || nestingTest.ending || this.$str[i];\r\n\t\t\t\t\tcharWidth = chars.length;\r\n\t\t\t\t\tthis._push(runtime, chars);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn i + charWidth;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a quote start/end character on the current cursor.\r\n\t *\r\n\t * @param object\truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return object\r\n\t */\r\n\t_testQuotes(runtime, i) {\r\n\t\tvar result = {};\r\n\t\t(runtime.options.quotes || []).forEach(quote => {\r\n\t\t\tif (this.$str.substr(i, 1) === quote) {\r\n\t\t\t\tif (!runtime.openQuote) {\r\n\t\t\t\t\truntime.openQuote = quote;\r\n\t\t\t\t\tresult.starting = quote;\r\n\t\t\t\t} else if (quote === runtime.openQuote) {\r\n\t\t\t\t\truntime.openQuote = false;\r\n\t\t\t\t\tresult.ending = quote;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a comment start/end character on the current cursor.\r\n\t *\r\n\t * @param object\truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return object\r\n\t */\r\n\t_testComments(runtime, i) {\r\n\t\tvar result = {};\r\n\t\t(runtime.options.comments || []).forEach(block => {\r\n\t\t\tif (!runtime.openComment) {\r\n\t\t\t\tvar starting = _first(block);\r\n\t\t\t\tif (this.$str.substr(i).startsWith(starting)) {\r\n\t\t\t\t\truntime.openComment = block;\r\n\t\t\t\t\tresult.starting = starting;\r\n\t\t\t\t}\r\n\t\t\t} else if (_last(block) === _last(runtime.openComment)) {\r\n\t\t\t\tvar ending = _last(block);\r\n\t\t\t\tif (this.$str.substr(i).startsWith(ending)) {\r\n\t\t\t\t\truntime.openComment = false;\r\n\t\t\t\t\tresult.ending = ending;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a nesting start/end character on the current cursor.\r\n\t *\r\n\t * @param object\truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return object\r\n\t */\r\n\t_testNesting(runtime, i) {\r\n\t\tvar result = {};\r\n\t\t(runtime.options.blocks || []).forEach(block => {\r\n\t\t\tvar starting = _first(block);\r\n\t\t\tif (this.$str.substr(i).startsWith(starting)) {\r\n\t\t\t\truntime.nesting = runtime.nesting.concat([block]);\r\n\t\t\t\tresult.starting = starting;\r\n\t\t\t} else if (runtime.nesting.length && _last(block) === _last(_last(runtime.nesting))) {\r\n\t\t\t\tvar ending = _last(block);\r\n\t\t\t\tif (this.$str.substr(i).startsWith(ending)) {\r\n\t\t\t\t\truntime.nesting = runtime.nesting.slice(0, -1);\r\n\t\t\t\t\tresult.ending = ending;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\truntime.maxDepth = Math.max(runtime.maxDepth, runtime.nesting.length);\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a delimiter or stop character on the current cursor.\r\n\t *\r\n\t * @param array\t\ttestList\r\n\t * @param object \truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\t_testChars(testList, runtime, i) {\r\n\t\tfor (var k = 0; k < testList.length; k ++) {\r\n\t\t\tvar test = testList[k];\r\n\t\t\tif (_isFunction(test)) {\r\n\t\t\t\tvar ret = test(this.$str.substr(0, i), this.$str.substr(i));\r\n\t\t\t\tif (ret !== false) {\r\n\t\t\t\t\treturn ret;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (runtime.options.useRegex) {\r\n\t\t\t\tvar m = this.$str.substr(i).match(new RegExp('^' + test, runtime.options.useRegex !== true ? runtime.options.useRegex : ''));\r\n\t\t\t\tif (m) {\r\n\t\t\t\t\treturn m[0];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ((!runtime.options.ci && this.$str.substr(i, test.length) === test)\r\n\t\t\t|| (runtime.options.ci && this.$str.substr(i, test.length).toLowerCase() === test.toLowerCase())) {\r\n\t\t\t\treturn test;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Expr helper: pushes a character or set of characters into the current split series.\r\n\t *\r\n\t * @param object \truntime\r\n\t * @param string\tchars\r\n\t * @param string\ttarget\r\n\t * @param bool\t\tisNewSeries\r\n\t *\r\n\t * @return void\r\n\t */\r\n\t_push(runtime, chars, target = 'tokens', isNewSeries = false) {\r\n\t\tvar splitSeries = runtime.matches.length;\r\n\t\tif (_isUndefined(runtime.tokens[splitSeries])) {\r\n\t\t\truntime.tokens[splitSeries] = '';\r\n\t\t}\r\n\r\n\t\tif (target === 'comments') {\r\n\t\t\tif (!runtime.tokens[splitSeries].comments) {\r\n\t\t\t\truntime.tokens[splitSeries] = new String(runtime.tokens[splitSeries]);\r\n\t\t\t\truntime.tokens[splitSeries].comments = [];\r\n\t\t\t}\r\n\t\t\tvar splitSeries2 = runtime.tokens[splitSeries].comments.length - (!runtime.tokens[splitSeries].comments.length || isNewSeries ? 0 : 1);\r\n\t\t\truntime.tokens[splitSeries].comments[splitSeries2] = (runtime.tokens[splitSeries].comments[splitSeries2] || '') + chars;\r\n\t\t} else {\r\n\t\t\tvar comments = runtime.tokens[splitSeries].comments;\r\n\t\t\truntime.tokens[splitSeries] = runtime.tokens[splitSeries] + chars;\r\n\t\t\t//runtime.tokens[splitSeries].comments = comments;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Splits the instance string on the given delimeters and returns the tokens.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tsplit(str, delims, options) {\r\n\t\treturn this.lex(delims, options).tokens;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Splits the instance string on the given delimeters and returns the matches.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions:\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tmatch(str, delims, options) {\r\n\t\treturn this.lex(delims, options).matches;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Parses the instance string on the given delimeters using regex.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return object\r\n\t */\r\n\tregParse(delims, options) {\r\n\t\treturn this.lex(delims, _merge({useRegex: true}, options || {}));\r\n\t}\r\n\t\r\n\t/**\r\n\t * Splits the instance string on the given delimeters using regex; returns the tokens.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tregSplit(delims, options) {\r\n\t\treturn this.regParse(delims, options).tokens;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Matches the instance string on the given delimeters using regex; returns the matches.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tregMatch(delims, options) {\r\n\t\treturn this.regParse(delims, options).matches;\r\n\t}\r\n};\r\n\r\n/**\r\n * @var array\r\n */\r\nLexer.$blocks = [['(', ')'], ['[', ']'], ['{', '}'],];\r\n\r\n/**\r\n * @var array\r\n */\r\nLexer.$quotes = ['\"', \"'\", '`',];\r\n\r\n/**\r\n * @var array\r\n */\r\nLexer.$comments = [['/*', '*/'], ['//', \"\\n\"],];\r\n\r\n/**\r\n * @var object\r\n */\r\nLexer.$cache = {};","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * AbstractionInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Abstraction'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ArrInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'ArrayType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\nimport ArrInterface from './ArrInterface.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Array utils\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Arr = class extends ArrInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(exprs) {\r\n\t\tsuper();\r\n\t\tthis.exprs = exprs || [];\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tinherit(Super) {\r\n\t\tif (Super instanceof ArrInterface) {\r\n\t\t\tvar newExprs = Super.exprs.filter(exprA => {\r\n\t\t\t\treturn this.exprs.reduce((uniqueSoFar, exprB) => uniqueSoFar && !exprA.even(exprB), true);\r\n\t\t\t});\r\n\t\t\tthis.exprs = newExprs.concat(this.exprs);\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.exprs.map(expr => expr.eval(context, params));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn '[' + this.exprs.map(expr => expr.stringify(params)).join(', ') + ']';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (_wrapped(expr, '[', ']') && !Lexer.match(expr.trim(), [' ']).length) {\r\n\t\t\tvar splits = Lexer.split(_unwrap(expr, '[', ']'), [','])\r\n\t\t\t\t.map(n => n.trim()).filter(n => n).map(expr => parseCallback(expr));\r\n\t\t\treturn new this(splits);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @export\r\n */\r\nexport default Arr;\r\n","\r\n/**\r\n * Returns a list of unique items.\r\n *\r\n * @param array\t \t\t\t\tarr\r\n *\t *\r\n * @return array\r\n */\r\nexport default function(arr) {\r\n\tconst distinct = (value, index, self) => {\r\n\t\treturn self.indexOf(value) === index;\r\n\t};\r\n\treturn arr.filter(distinct);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * AssertionInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'AssertionExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _first from '@webqit/util/arr/first.js';\r\nimport _flatten from '@webqit/util/arr/flatten.js';\r\nimport _unique from '@webqit/util/arr/unique.js';\r\nimport AssertionInterface from './AssertionInterface.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Assertion class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Assertion = class extends AssertionInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(exprs, logic) {\r\n\t\tsuper();\r\n\t\tthis.exprs = exprs;\r\n\t\tthis.logic = logic;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\t eval(context = null, params = {}) {\r\n\t\tvar Assertion = this.constructor;\r\n\t\tif (this.logic.toLowerCase() === Assertion.negation.toLowerCase()) {\r\n\t\t\treturn !_first(this.exprs).eval(context, params);\r\n\t\t}\r\n\t\tvar operators = _flatten(Assertion.operators);\r\n\t\tvar logic = (this.logic || '').trim().toUpperCase();\r\n\t\tvar isOr = logic === (Assertion.operators.or || '').trim().toUpperCase();\r\n\t\tvar isNor = logic === (Assertion.operators.nor || '').trim().toUpperCase();\r\n\t\tvar isAnd = logic === (Assertion.operators.and || '').trim().toUpperCase();\r\n\t\tvar isNand = logic === (Assertion.operators.nand || '').trim().toUpperCase();\r\n\t\tvar lastResult = true, trues = 0;\r\n\t\tfor(var i = 0; i < this.exprs.length; i ++) {\r\n\t\t\tlastResult = this.exprs[i].eval(context, params);\r\n\t\t\tif (isAnd && !lastResult) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (isNand && !lastResult) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tif (isOr && lastResult) {\r\n\t\t\t\treturn lastResult;\r\n\t\t\t}\r\n\t\t\ttrues += lastResult ? 1 : 0;\r\n\t\t}\r\n\t\tif (isOr) {\r\n\t\t\t// Which is falsey,\r\n\t\t\t// by virtue of getting here\r\n\t\t\treturn lastResult;\r\n\t\t}\r\n\t\tif (isAnd || isNand) {\r\n\t\t\t// For AND and NAND, all entries must be true by now,\r\n\t\t\t// by virtue of getting here.\r\n\t\t\t// For AND, this means true; for NAND, false\r\n\t\t\treturn isAnd;\r\n\t\t}\r\n\t\t// For NOR, all entries need to be false\r\n\t\treturn isNor && trues === 0;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\tvar Assertion = this.constructor;\r\n\t\tif (this.logic.toLowerCase() === Assertion.negation.toLowerCase()) {\r\n\t\t\treturn this.logic + _first(this.exprs).stringify(params);\r\n\t\t}\r\n\t\treturn this.exprs.map(expr => expr.stringify(params)).join(' ' + this.logic.trim() + ' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (expr.toUpperCase().startsWith(this.negation.toUpperCase())) {\r\n\t\t\treturn new this(\r\n\t\t\t\t[parseCallback(expr.substr(this.negation.length))],\r\n\t\t\t\tthis.negation\r\n\t\t\t);\r\n\t\t}\r\n\t\tvar parse = Lexer.lex(expr, _flatten(this.operators));\r\n\t\tif (parse.tokens.length > 1) {\r\n\t\t\tvar logic = _unique(parse.matches);\r\n\t\t\tif (logic.length > 1) {\r\n\t\t\t\tthrow new Error('\"AND\" and \"OR\" logic cannot be asserted in the same expression: ' + expr + '!');\r\n\t\t\t}\r\n\t\t\treturn new this(\r\n\t\t\t\tparse.tokens.map(expr => parseCallback(expr.trim())),\r\n\t\t\t\t_first(logic)\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nAssertion.negation = '!';\r\n\r\n/**\r\n * @prop object\r\n */\r\nAssertion.operators = {\r\n\tand: '&&',\r\n\tor: '||',\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Assertion;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * AssignmentInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'AssignmentExpression'; },\r\n});\r\nexport default Interface;\r\n","/**\r\n * ReferenceError\r\n */\r\nexport default class extends Error {\r\n    constructor(...args) {\r\n        super(...args);\r\n        this.name = 'Reference Error';\r\n    }\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _last from '@webqit/util/arr/last.js';\r\nimport _before from '@webqit/util/str/before.js';\r\nimport _after from '@webqit/util/str/after.js';\r\nimport _isNumber from '@webqit/util/js/isNumber.js';\r\nimport _isArray from '@webqit/util/js/isArray.js';\r\nimport _isUndefined from '@webqit/util/js/isUndefined.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport AssignmentInterface from './AssignmentInterface.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport SyntaxError from '../SyntaxError.js';\r\nimport ReferenceError from '../ReferenceError.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Assignment class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Assignment = class extends AssignmentInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(initKeyword, reference, val, operator = '=', postIncrDecr = false) {\r\n\t\tsuper();\r\n\t\tthis.initKeyword = initKeyword;\r\n\t\tthis.reference = reference;\r\n\t\tthis.val = val;\r\n\t\tthis.operator = operator;\r\n\t\tthis.postIncrDecr = postIncrDecr;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\tvar val, initialVal, reference = this.reference.getEval(context, params);\r\n\t\tif (['++', '--'].includes(this.operator)) {\r\n\t\t\tinitialVal = this.reference.eval(context, params);\r\n\t\t\tif (!_isNumber(initialVal)) {\r\n\t\t\t\tthrow new Error(this.reference + ' must be a number!');\r\n\t\t\t}\r\n\t\t\tif (this.operator === '++') {\r\n\t\t\t\tval = initialVal + 1;\r\n\t\t\t} else {\r\n\t\t\t\tval = initialVal - 1;\r\n\t\t\t}\r\n\t\t} else if (['+=', '-=', '*=', '/='].includes(this.operator)) {\r\n\t\t\tvar operandA = reference.get();\r\n\t\t\tvar operandB = this.val.eval(context, params);\r\n\t\t\tif (this.operator !== '+=' && (!_isNumber(operandA) || !_isNumber(operandB))) {\r\n\t\t\t\tthrow new Error(this + ' - operands must each be a number!');\r\n\t\t\t}\r\n\t\t\tif (this.operator === '*=') {\r\n\t\t\t\tval = operandA * operandB;\r\n\t\t\t} else if (this.operator === '/=') {\r\n\t\t\t\tval = operandA / operandB;\r\n\t\t\t} else if (this.operator === '-=') {\r\n\t\t\t\tval = operandA - operandB;\r\n\t\t\t} else {\r\n\t\t\t\tval = operandA + operandB;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tval = this.val.eval(context, params);\r\n\t\t}\r\n\t\ttry {\r\n\t\t\treference.set(val, this.initKeyword);\r\n\t\t\tif (params && _isArray(params.references)) {\r\n\t\t\t\t_pushUnique(params.references, this.reference.toString());\r\n\t\t\t}\r\n\t\t\treturn this.postIncrDecr ? initialVal : val;\r\n\t\t} catch(e) {\r\n\t\t\tif (e instanceof ReferenceError) {\r\n\t\t\t\tthrow new ReferenceError('[' + this + ']: ' + e.message);\r\n\t\t\t} else {\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\tif (['++', '--'].includes(this.operator)) {\r\n\t\t\treturn this.postIncrDecr \r\n\t\t\t\t? this.reference.stringify(params) + this.operator\r\n\t\t\t\t: this.operator + this.reference.stringify(params);\r\n\t\t}\r\n\t\treturn (this.initKeyword ? this.initKeyword + ' ' : '')\r\n\t\t\t+ [this.reference.stringify(params), this.operator.trim(), this.val.stringify(params)].join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar parse = Lexer.lex(expr, this.operators.concat([testBlockEnd]));\r\n\t\tif (parse.matches.length) {\r\n\t\t\tvar initKeyword, reference, val, operator = parse.matches[0].trim(), isIncrDecr = ['++', '--'].includes(operator), postIncrDecr;\r\n\t\t\tif (isIncrDecr) {\r\n\t\t\t\tpostIncrDecr = (expr.trim().endsWith('++') || expr.trim().endsWith('--'));\r\n\t\t\t\treference = parse.tokens[postIncrDecr ? 'shift' : 'pop']().trim();\r\n\t\t\t} else {\r\n\t\t\t\treference = parse.tokens.shift().trim();\r\n\t\t\t\tval = parse.tokens.shift().trim();\r\n\t\t\t}\r\n\t\t\tif (['var', 'let', 'const'].includes(_before(reference, ' '))) {\r\n\t\t\t\tif (operator !== '=') {\r\n\t\t\t\t\tthrow new SyntaxError('Invalid declaration: ' + expr);\r\n\t\t\t\t}\r\n\t\t\t\tinitKeyword = _before(reference, ' ');\r\n\t\t\t\treference = _after(reference, ' ').trim();\r\n\t\t\t}\r\n\t\t\tif (!((reference = parseCallback(reference, null, {role: 'ASSIGNMENT_SPECIFIER'})) instanceof ReferenceInterface) \r\n\t\t\t|| (!isIncrDecr && !(val = parseCallback(val)))) {\r\n\t\t\t\tthrow new SyntaxError(expr);\r\n\t\t\t}\r\n\t\t\treturn new this(initKeyword, reference, val, operator, postIncrDecr);\r\n\t\t}\r\n\t}\r\n};\t\r\n\r\n/**\r\n * @prop array\r\n */\r\nAssignment.operators = [\r\n\t'+=',\r\n\t'-=',\r\n\t'*=',\r\n\t'/=',\r\n\t'++',\r\n\t'--',\r\n];\r\n\r\nconst testBlockEnd = (a, b) => {\r\n\t// Match exactly \"=\", not \"=>\", \"==\", \"===\"\r\n\tif (!a.endsWith('=') && b.startsWith('=') && !b.startsWith('=>') && !b.startsWith('==') && !b.startsWith('===')) {\r\n\t\treturn '=';\r\n\t}\r\n\treturn false;\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Assignment;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * BoolInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'BooleanType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ArgumentsInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Arguments'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ComparisonInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'ComparisonExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _flatten from '@webqit/util/arr/flatten.js';\r\nimport _first from '@webqit/util/arr/first.js';\r\nimport _last from '@webqit/util/arr/last.js';\r\nimport _difference from '@webqit/util/arr/difference.js';\r\nimport _isArray from '@webqit/util/js/isArray.js';\r\nimport _isObject from '@webqit/util/js/isObject.js';\r\nimport _isString from '@webqit/util/js/isString.js';\r\nimport _each from '@webqit/util/obj/each.js';\r\nimport ComparisonInterface from './ComparisonInterface.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Comparison class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Comparison extends ComparisonInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(operand1, operand2, operator) {\r\n\t\tsuper();\r\n\t\tthis.operand1 = operand1;\r\n\t\tthis.operand2 = operand2;\r\n\t\tthis.operator = operator;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.constructor.compare(\r\n\t\t\tthis.operand1.eval(context, params), \r\n\t\t\tthis.operand2.eval(context, params), \r\n\t\t\tthis.operator\r\n\t\t);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn [\r\n\t\t\tthis.operand1.stringify(params), \r\n\t\t\tthis.operator, \r\n\t\t\tthis.operand2.stringify(params)\r\n\t\t].join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar operators = _flatten(this.operators).map(oper => ' ' + oper + ' ');\r\n\t\tvar parse = Lexer.lex(expr, operators);\r\n\t\tif (parse.tokens.length > 1) {\r\n\t\t\tif (parse.tokens.length > 2) {\r\n\t\t\t\tthrow new Error('Malformed \"Comparison\" expression: ' + expr + '!');\r\n\t\t\t}\r\n\t\t\treturn new this(\r\n\t\t\t\tparseCallback(_first(parse.tokens).trim()),\r\n\t\t\t\tparseCallback(_last(parse.tokens).trim()),\r\n\t\t\t\tparse.matches[0].trim()\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * -------------------------------------------------------\r\n\t */\r\n\t \r\n\t/**\r\n\t * Use the operator type to compare the two operands\r\n\t *\r\n\t * @param mixed\t\toperand1\t\t\r\n\t * @param mixed\t\toperand2\t\t\r\n\t * @param string \toperator\t\t\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tstatic compare(operand1, operand2, operator = '==') {\r\n\t\tif (_flatten(this.operators).indexOf(operator) === -1) {\r\n\t\t\tthrow new Error('The operator \"' + operator + '\" is not recognized.');\r\n\t\t}\r\n\t\tswitch(operator) {\r\n\t\t\tcase '===':\r\n\t\t\t\treturn operand1 === operand2;\r\n\t\t\tcase '==':\r\n\t\t\tcase '=':\r\n\t\t\t\treturn operand1 == operand2;\r\n\t\t\tcase '>':\r\n\t\t\t\treturn operand1 > operand2;\r\n\t\t\tcase '<':\r\n\t\t\t\treturn operand1 < operand2;\r\n\t\t\tcase '>=':\r\n\t\t\t\treturn operand1 >= operand2;\r\n\t\t\tcase '<=':\r\n\t\t\t\treturn operand1 <= operand2;\r\n\t\t\tcase '!=':\r\n\t\t\t\treturn operand1 != operand2;\r\n\t\t\tcase '<>':\r\n\t\t\tcase '!==':\r\n\t\t\t\treturn operand1 !== operand2;\r\n\t\t\tcase '^=':\r\n\t\t\t\treturn _isString(operand1) && operand1.startsWith(operand2);\r\n\t\t\tcase '$=':\r\n\t\t\t\treturn _isString(operand1) && operand1.endsWith(operand2);\r\n\t\t\tcase '*=':\r\n\t\t\t\t// Contains\r\n\t\t\t\treturn _isArray(operand2) || _isString(operand2) ? operand1.indexOf(operand2) > -1 : false;\r\n\t\t\tcase '~=':\r\n\t\t\t\t// Contains word\r\n\t\t\t\treturn _isString(operand1) && _isString(operand2) && (' ' + operand1 + ' ').indexOf(' ' + operand2 + ' ') > -1;\r\n\t\t\tcase '>=<': // Between\r\n\t\t\t\t if (!(_isArray(operand2) && operand2.length === 2)) {\r\n\t\t\t\t\t throw new Error('A \\'Between\\' comparison requires argument 2 to be an array of exactly 2 values.');\r\n\t\t\t\t }\r\n\t\t\t\t return operand1 >= operand2[0] && operand1 <= operand2[1];\r\n\t\r\n\t\t\tcase '/**/': // Regex\r\n\t\t\t\treturn operand2.match(new RegExp(operand1));\r\n\t\t\tdefault:\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * Compares two operands for differences\r\n\t *\r\n\t * @param mixed\t\toperand1\t\t\r\n\t * @param mixed\t\toperand2\t\t\r\n\t * @param bool\t \tstrict\t\t\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tstatic diff(operand1, operand2, strict) {\r\n\t\treturn !this.compare(operand1, operand2, strict ? '===' : '==');\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nComparison.operators = {\r\n\texact: {\r\n\t\tis: '===',\r\n\t\tisNull: '===',\r\n\t\tequalsTo: '==',\r\n\t\tstrictlyNotEqualsTo: '!==',\r\n\t\tnotEqualsTo: '!=',\r\n\t},\r\n\trelative: {\r\n\t\tlesserThan: '<',\r\n\t\tgreaterThan: '>',\r\n\t\tlesserThanOrEqualsTo: '<=',\r\n\t\tgreaterThanOrEqualsTo: '>=',\r\n\t\tbetween: '>=<',\r\n\t},\r\n\tpartial: {\r\n\t\tstartsWith: '^=',\r\n\t\tendsWith: '$=',\r\n\t\tcontains: '*=',\r\n\t\tany: '~=',\r\n\t\tin: '~=',\r\n\t\tmatches: '/**/',\r\n\t},\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ConditionInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'TernaryConditional'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport ConditionInterface from './ConditionInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Condition class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Condition extends ConditionInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(assertion, onTrue, onFalse) {\r\n\t\tsuper();\r\n\t\tthis.assertion = assertion;\r\n\t\tthis.onTrue = onTrue;\r\n\t\tthis.onFalse = onFalse;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.assertion.eval(context, params) \r\n\t\t\t? this.onTrue.eval(context, params) \r\n\t\t\t: this.onFalse.eval(context, params);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn [\r\n\t\t\tthis.assertion.stringify(params), \r\n\t\t\tthis.constructor.operators[0], \r\n\t\t\tthis.onTrue.stringify(params),\r\n\t\t\tthis.constructor.operators[1], \r\n\t\t\tthis.onFalse.stringify(params)\r\n\t\t].join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar splits = Lexer.split(expr, this.operators);\r\n\t\tif (splits.length > 1) {\r\n\t\t\tif (splits.length === 2) {\r\n\t\t\t\tthrow new Error('Malformed ternary expression: ' + expr + '!');\r\n\t\t\t}\r\n\t\t\treturn new this(\r\n\t\t\t\tparseCallback(splits[0].trim()),\r\n\t\t\t\tparseCallback(splits[1].trim()),\r\n\t\t\t\tparseCallback(splits[2].trim())\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nCondition.operators = [\r\n\t'?', \r\n\t':',\r\n];","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * DeletionInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'DeleteExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _last from '@webqit/util/arr/last.js';\r\nimport _isUndefined from '@webqit/util/js/isUndefined.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport DeletionInterface from './DeletionInterface.js';\r\nimport SyntaxError from '../SyntaxError.js';\r\nimport ReferenceError from '../ReferenceError.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Deletion class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Deletion = class extends DeletionInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(reference, operator = 'delete') {\r\n\t\tsuper();\r\n\t\tthis.reference = reference;\r\n\t\tthis.operator = operator;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\ttry {\r\n\t\t\treturn this.reference.getEval(context, params).del();\r\n\t\t} catch(e) {\r\n\t\t\tif (e instanceof ReferenceError) {\r\n\t\t\t\tthrow new ReferenceError('[' + this + ']: ' + e.message);\r\n\t\t\t} else {\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.operator + ' ' + this.reference.stringify(params);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar parse = Lexer.lex(expr, Object.values(this.operators));\r\n\t\tif (parse.matches.length === 1 && expr.startsWith(parse.matches[0] + ' ')) {\r\n\t\t\tvar reference;\r\n\t\t\tif (!((reference = parseCallback(parse.tokens.pop().trim(), null, {role: 'DELETION_SPECIFIER'})) instanceof ReferenceInterface)) {\r\n\t\t\t\tthrow new SyntaxError(expr);\r\n\t\t\t}\r\n\t\t\treturn new this(reference, parse.matches[0].trim());\r\n\t\t}\r\n\t}\r\n};\t\r\n\r\n/**\r\n * @prop array\r\n */\r\nDeletion.operators = {\r\n\tred: 'reduce', \r\n\tdel: 'delete',\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Deletion;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport IndependentExprInterface from '../IndependentExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * FuncInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends IndependentExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'FunctionType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * BlockInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Block'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ReturnInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'ReturnDirective'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * NumInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'NumberType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * StrInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'StringType'; },\r\n});\r\nexport default Interface;\r\n","/**\r\n * @imports\r\n */\r\nimport _isString from '@webqit/util/js/isString.js';\r\nimport CallInterface from './grammar/CallInterface.js';\r\nimport NumInterface from './grammar/NumInterface.js';\r\nimport StrInterface from './grammar/StrInterface.js';\r\n\r\n\r\n/**\r\n * UTILS\r\n */\r\nexport function pathStartsWith(a, b) {\r\n\treturn b.reduce((prev, value, i) => prev && value === a[i], true);\r\n};\r\nexport function pathAfter(a, b) {\r\n\treturn a.slice(b.length);\r\n};\r\nexport function pathIsSame(a, b) {\r\n\treturn a.length === b.length && a.reduce((prev, value, i) => prev && value === b[i], true);\r\n};\r\nexport function referencesToPaths(references) {\r\n    return references.map(expr => {\r\n        var seg = expr, pathArray = [];\r\n        do {\r\n            if (seg instanceof CallInterface) {\r\n                pathArray.splice(0);\r\n                seg = seg.reference;\r\n            }\r\n            if (_isString(seg.name)) {\r\n                pathArray.unshift(seg.name);\r\n            } else if (seg.name instanceof NumInterface) {\r\n                pathArray.unshift(seg.name.int);\r\n            } else if (seg.name instanceof StrInterface) {\r\n                pathArray.unshift(seg.name.expr);\r\n            } else {\r\n                pathArray.splice(0);\r\n            }\r\n        } while(seg = seg.context);\r\n        return pathArray;\r\n    });\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeObject from '@webqit/util/js/isTypeObject.js';\r\nimport _isUndefined from '@webqit/util/js/isUndefined.js';\r\nimport _isFunction from '@webqit/util/js/isFunction.js';\r\nimport _isClass from '@webqit/util/js/isClass.js';\r\nimport _isString from '@webqit/util/js/isString.js';\r\nimport _isNull from '@webqit/util/js/isNull.js';\r\nimport _isNumber from '@webqit/util/js/isNumber.js';\r\nimport _after from '@webqit/util/str/after.js';\r\nimport _before from '@webqit/util/str/before.js';\r\nimport _unique from '@webqit/util/arr/unique.js';\r\nimport ReferenceError from './ReferenceError.js';\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default class Scope {\r\n\r\n\t/**\r\n\t * Creates a new context stack.\r\n\t *\r\n\t * @param object\t \tparams\r\n\t * @param object\t\tparams\r\n\t *\r\n\t * @return Scope\r\n\t */\r\n\tconstructor(stack, params = {}) {\r\n\t\tif (!('main' in stack)) {\r\n\t\t\tthrow new Error('A \"main\" context must be provided!');\r\n\t\t}\r\n\t\tObject.defineProperty(this, 'stack', {value: stack || {}, enumerable: false});\r\n\t\tObject.defineProperty(this, 'params', {value: params || {}, enumerable: false});\r\n\t\tif (stack.super) {\r\n\t\t\tObject.defineProperty(this.stack, 'super', {value: Scope.create(stack.super, {errorLevel: params.errorLevel}), enumerable: false});\r\n\t\t}\r\n\t\tObject.defineProperty(this.stack, 'local', {value: stack.local || {}, enumerable: false});\r\n\t\tObject.defineProperty(this.stack, '$local', {value: stack.$local || {}, enumerable: false});\r\n\t}\r\n\r\n\t/**\r\n\t * Binds a callback to changes\r\n\t * that happen in the contexts.\r\n\t *\r\n\t * @param object\t\t \ttrap\r\n\t * @param function\t\t \tcallback\r\n\t *\r\n\t * @return Scope\r\n\t */\r\n\tobserve(trap, callback, params = {}) {\r\n\t\tif (this.stack.super) {\r\n\t\t\tthis.stack.super.observe(trap, (e) => {\r\n\t\t\t\tif (e.props.filter(prop => !_has(this.stack.local, prop, trap) && !_has(this.stack.main, prop, trap)).length) {\r\n\t\t\t\t\te.scope = 'super';\r\n\t\t\t\t\treturn callback(e);\r\n\t\t\t\t}\r\n\t\t\t}, params);\r\n\t\t}\r\n\t\t\r\n\t\tvar _params  = {...params};\r\n\t\t_params.subtree = 'auto';\r\n\t\t_params.tags = (_params.tags || []).slice(0);\r\n\t\t_params.tags.push(this, 'jsen-context',);\r\n\t\t_params.diff = true;\r\n\r\n\t\ttrap.observe(this.stack, changes => {\r\n\t\t\tvar references = [];\r\n\t\t\tchanges.forEach(c => {\r\n\t\t\t\t// Changes firing directly from super and local should be ignored\r\n\t\t\t\tif (c.name === 'main') {\r\n\t\t\t\t\tif (c.path.length > 1) {\r\n\t\t\t\t\t\treferences.push(c.path.slice(1));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvar keysMain = _unique((_isTypeObject(c.value) ? Object.keys(c.value) : []).concat(c.oldValue && _isTypeObject(c.oldValue) ? Object.keys(c.oldValue) : []));\r\n\t\t\t\t\t\treferences.push(...keysMain.map(k => [k]));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treferences = references.filter(ref => !_has(this.stack.local, ref[0], trap));\r\n\t\t\tif (references.length) {\r\n\t\t\t\tvar props = references.map(ref => ref[0]);\r\n\t\t\t\treturn callback({\r\n\t\t\t\t\tprops,\r\n\t\t\t\t\treferences,\r\n\t\t\t\t\tscope: 'local',\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}, _params);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Unbinds callbacks previously bound\r\n\t * with observe()\r\n\t *\r\n\t * @param object\t\t \ttrap\r\n\t * @param object\t\t \tparams\r\n\t *\r\n\t * @return Scope\r\n\t */\r\n\tunobserve(trap, params = {}) {\r\n\t\tif (this.stack.super) {\r\n\t\t\tthis.stack.super.unobserve(trap, params);\r\n\t\t}\r\n\t\tvar _params  = {...params};\r\n\t\t_params.tags = (_params.tags || []).slice(0);\r\n\t\t_params.tags.push(this, 'jsen-context',);\r\n\t\ttrap.unobserve(this.stack, null, null, _params);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Tries the handler on the different contexts in the stack.\r\n\t *\r\n\t * @param string|number \tprop\r\n\t * @param function\t\t \tcallback\r\n\t * @param function\t\t \tfinal\r\n\t *\r\n\t * @return Scope\r\n\t */\r\n\thandle(prop, callback, final, level = 0) {\r\n\t\tvar callMain = () => {\r\n\t\t\treturn callback(this.stack.main, null, () => {\r\n\t\t\t\tif (this.stack.super) {\r\n\t\t\t\t\treturn this.stack.super.handle(prop, callback, final, level + 1);\r\n\t\t\t\t}\r\n\t\t\t\tif (final) {\r\n\t\t\t\t\treturn final();\r\n\t\t\t\t}\r\n\t\t\t}, level);\r\n\t\t};\r\n\t\t// Normally, we would begin with local...\r\n\t\t// but no if...\r\n\t\tif (prop === 'toString' && this.stack.local.toString === Object.prototype.toString) {\r\n\t\t\treturn callMain();\r\n\t\t}\r\n\t\t// Conditions are right, we begin with local\r\n\t\treturn callback(this.stack.local, this.stack.$local, callMain, level);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a property's value from the first possessing context.\r\n\t *\r\n\t * @param string|number prop\r\n\t * @param object\t\ttrap\r\n\t * @param bool\t\t\tbindThis\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\tget(prop, trap = {}, bindThis = true) {\r\n\t\tif (prop instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop = prop + '';\r\n\t\t}\r\n\t\treturn this.handle(prop, (contxtObj, contxtMeta, advance, level) => {\r\n\t\t\tvar val = _get(contxtObj, prop, trap);\r\n\t\t\t// asking first mught not go well generally && _has(this[i], prop, trap)\r\n\t\t\tif (!_isUndefined(val) || _has(contxtObj, prop, trap)) {\r\n\t\t\t\tif (_isFunction(val) && !_isClass(val) && bindThis) {\r\n\t\t\t\t\treturn val.bind(contxtObj);\r\n\t\t\t\t}\r\n\t\t\t\treturn val;\r\n\t\t\t}\r\n\t\t\treturn advance();\r\n\t\t}/* Not good for RQL derived fields , () => {throw new ReferenceError('\"' + prop + '\" is undefined!');}*/);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Updates a property's value from the first possessing context.\r\n\t * Or adds a new context to set the property.\r\n\t *\r\n\t * @param string|number prop\r\n\t * @param mixed\t\t\tval\r\n\t * @param object\t\ttrap\r\n\t * @param bool\t\t\tinitKeyword\r\n\t * @param bool\t\t\tisRootVar\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tset(prop, val, trap = {}, initKeyword = false, isRootVar = true) {\r\n\t\tif (this.params.type === 2 && initKeyword === 'var' && this.stack.super) {\r\n\t\t\treturn this.stack.super.set(prop, val, trap, initKeyword);\r\n\t\t}\r\n\t\tif (prop instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop = prop + '';\r\n\t\t}\r\n\t\tconst _set = (cntxt, prop, val, trap) => {\r\n\t\t\tif (trap.set) {\r\n\t\t\t\treturn trap.set(cntxt, prop, val);\r\n\t\t\t}\r\n\t\t\tcntxt[prop] = val;\r\n\t\t\treturn true;\r\n\t\t};\r\n\t\treturn this.handle(initKeyword ? true : prop, (contxtObj, localContxtMeta, advance, level) => {\r\n\t\t\t// Whatever the level of localContext...\r\n\t\t\tif (localContxtMeta && localContxtMeta[prop] === 'const') {\r\n\t\t\t\tthrow new LogicalError('CONST ' + prop + ' cannot be modified!');\r\n\t\t\t}\r\n\t\t\t// Set this locally, we wont be getting to advance()\r\n\t\t\tif (initKeyword) {\r\n\t\t\t\tlocalContxtMeta[prop] = initKeyword;\r\n\t\t\t\treturn _set(contxtObj, prop, val, trap);\r\n\t\t\t}\r\n\t\t\t// For any other contex, it must already exists\r\n\t\t\tif (_has(contxtObj, prop, trap)) {\r\n\t\t\t\treturn _set(contxtObj, prop, val, trap);\r\n\t\t\t}\r\n\t\t\ttry {\r\n\t\t\t\treturn advance();\r\n\t\t\t} catch(e) {\r\n\t\t\t\tif ((e instanceof ReferenceError) && contxtObj && !localContxtMeta && level === 0 && this.params.strictMode === false) {\r\n\t\t\t\t\t// Assign to undeclared variables\r\n\t\t\t\t\treturn _set(contxtObj, prop, val, trap);\r\n\t\t\t\t}\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t}, () => {throw new ReferenceError('\"' + prop + '\" does not exist in scope!');});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Deletes a property from the first possessing context.\r\n\t *\r\n\t * @param string|number prop\r\n\t * @param object\t\ttrap\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tdel(prop, trap = {}) {\r\n\t\tif (prop instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop = prop + '';\r\n\t\t}\r\n\t\treturn this.handle(prop, (contxtObj, contxtMeta, advance) => {\r\n\t\t\tif (_has(contxtObj, prop, trap)) {\r\n\t\t\t\tif (contxtMeta) {\r\n\t\t\t\t\tdelete contxtMeta[prop];\r\n\t\t\t\t}\r\n\t\t\t\tif (trap.deleteProperty || trap.del) {\r\n\t\t\t\t\treturn (trap.deleteProperty || trap.del)(contxtObj, prop);\r\n\t\t\t\t}\r\n\t\t\t\tdelete contxtObj[prop];\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn advance();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Tests if a property exists in any context.\r\n\t *\r\n\t * @param string|number prop\r\n\t * @param string|number prop2\r\n\t * @param object\t\ttrap\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\thas(prop, prop2, trap = {}) {\r\n\t\tif (prop instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop = prop + '';\r\n\t\t}\r\n\t\tif (prop2 instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop2 = prop2 + '';\r\n\t\t}\r\n\t\treturn this.handle(prop, (contxtObj, contxtMeta, advance) => {\r\n\t\t\tif (_has(contxtObj, prop, trap)) {\r\n\t\t\t\tvar contextObj2 = _get(contxtObj, prop, trap);\r\n\t\t\t\treturn _has(contextObj2, prop2, trap);\r\n\t\t\t}\r\n\t\t\treturn advance();\r\n\t\t}, () => {throw new ReferenceError('\"' + prop + '\" is undefined!');});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Tests if a property exists in any context.\r\n\t *\r\n\t * @param string|number prop\r\n\t * @param array\t\t\targs\r\n\t * @param object\t\ttrap\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\texec(prop, args, trap = {}) {\r\n\t\tif (prop instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop = prop + '';\r\n\t\t}\r\n\t\treturn this.handle(prop, (contxtObj, contxtMeta, advance) => {\r\n\t\t\tvar fn = _get(contxtObj, prop, trap);\r\n\t\t\tif (!_isUndefined(fn) || _has(contxtObj, prop, trap)) {\r\n\t\t\t\tif (!_isFunction(fn)) {\r\n\t\t\t\t\tif (trap.exec) {\r\n\t\t\t\t\t\treturn trap.exec(contxtObj, prop, args);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthrow new ReferenceError('\"' + prop + '\" is not a function! (Called on type: ' + typeof contxtObj + '.)');\r\n\t\t\t\t}\r\n\t\t\t\tif (trap.apply) {\r\n\t\t\t\t\treturn trap.apply(fn, contxtObj, args);\r\n\t\t\t\t}\r\n\t\t\t\treturn fn.apply(contxtObj, args);\r\n\t\t\t}\r\n\t\t\treturn advance();\r\n\t\t}, () => {\r\n\t\t\tif (trap.execUnknown) {\r\n\t\t\t\treturn trap.execUnknown(this, prop, args);\r\n\t\t\t}\r\n\t\t\tthrow new ReferenceError('\"' + prop + '()\" is undefined!');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Factory method for making a Scope instance.\r\n\t *\r\n\t * @param array|object \tcntxt\r\n\t * @param object \t\tparams\r\n\t * @param object \t\ttrap\r\n\t *\r\n\t * @return Scope\r\n\t */\r\n\tstatic create(cntxt, params = {}, trap = {}) {\r\n\t\tif (cntxt instanceof Scope) {\r\n\t\t\treturn cntxt;\r\n\t\t}\r\n\t\tvar scopeObj = {};\r\n\t\tif (trap.set) {\r\n\t\t\ttrap.set(scopeObj, 'main', cntxt);\r\n\t\t} else {\r\n\t\t\tscopeObj.main = cntxt;\r\n\t\t}\r\n\t\treturn new Scope(scopeObj, params);\r\n\t}\r\n\r\n\t/**\r\n\t * Factory method for making a stack Scope hierarchies.\r\n\t *\r\n\t * @param array\t\t \tcntxts\r\n\t * @param object \t\tparams\r\n\t * @param object \t\ttrap\r\n\t *\r\n\t * @return Scope\r\n\t */\r\n\tstatic createStack(cntxts, params = {}, trap = {}) {\r\n\t\treturn cntxts.reverse().reduce((supr, cntxt, i) => {\r\n\t\t\tif (cntxt instanceof Scope) {\r\n\t\t\t\tif (i === 0) {\r\n\t\t\t\t\treturn cntxt;\r\n\t\t\t\t}\r\n\t\t\t\tthrow new Error('Only the top-most context is allowed to be an instance of Scope.')\r\n\t\t\t}\r\n\t\t\tvar scopeObj = {};\r\n\t\t\tif (trap.set) {\r\n\t\t\t\ttrap.set(scopeObj, 'main', cntxt);\r\n\t\t\t} else {\r\n\t\t\t\tscopeObj.main = cntxt;\r\n\t\t\t}\r\n\t\t\tscopeObj.super = supr;\r\n\t\t\treturn new Scope(scopeObj, params);\r\n\t\t}, null);\r\n\t}\r\n};\r\n\r\nconst _get = (cntxt, prop, trap) => {\r\n\tif (_isNull(cntxt) || _isUndefined(cntxt)) {\r\n\t\treturn;\r\n\t}\r\n\treturn trap.get && _isTypeObject(cntxt) ? trap.get(cntxt, prop) : (\r\n\t\tcntxt[prop]\r\n\t);\r\n};\r\n\r\nconst _has = (cntxt, prop, trap) => {\r\n\tif (_isNull(cntxt) || _isUndefined(cntxt)) {\r\n\t\treturn false;\r\n\t}\r\n\treturn trap.has && _isTypeObject(cntxt) ? trap.has(cntxt, prop) : (\r\n\t\t_isTypeObject(cntxt) ? prop in cntxt : !_isUndefined(cntxt[prop])\r\n\t);\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeFunction from './isTypeFunction.js';\r\n\r\n/**\r\n * Tells if val is of type \"class\".\r\n *\r\n * @param object \t\tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isTypeFunction(val) && /^class\\s?/.test(Function.prototype.toString.call(val));\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport _copy from '@webqit/util/obj/copy.js';\r\nimport _flatten from '@webqit/util/arr/flatten.js';\r\nimport BlockInterface from './BlockInterface.js';\r\nimport IfInterface from './IfInterface.js';\r\nimport ReturnInterface from './ReturnInterface.js';\r\nimport AssignmentInterface from './AssignmentInterface.js';\r\nimport DeletionInterface from './DeletionInterface.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport { referencesToPaths, pathStartsWith, pathAfter } from '../util.js';\r\nimport Scope from '../Scope.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Block class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Block extends BlockInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(stmts, delim) {\r\n\t\tsuper();\r\n\t\tthis.stmts = stmts || [];\r\n\t\tthis.delim = delim;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\r\n\t\tparams = {...params};\r\n\t\tvar returned, returnCallback = params.returnCallback;\r\n\t\tparams.returnCallback = flag => {\r\n\t\t\treturned = flag;\r\n\t\t};\r\n\r\n\t\t// Current!\r\n\t\tcontext = Scope.create(context);\r\n\t\tvar callEval = (stmt, context, _params) => {\r\n\t\t\ttry {\r\n\t\t\t\treturn stmt.eval(context, _params);\r\n\t\t\t} catch(e) {\r\n\t\t\t\tif (_params.catch) {\r\n\t\t\t\t\t_params.catch(e);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t};\r\n\t\t\r\n\t\tvar results = [], skippedAbort;\r\n\t\tfor (var i = 0; i < this.stmts.length; i ++) {\r\n\t\t\tvar stmt = this.stmts[i];\r\n\t\t\t// Lets be called...\r\n\t\t\tvar reads = referencesToPaths(stmt.meta.reads);\r\n\t\t\tvar deepReads = referencesToPaths(stmt.meta.deep.reads || []);\r\n\t\t\tvar isDirectEventTarget = (params.references || []).filter(ref => reads.filter(v => pathStartsWith(v, ref)).length);\r\n\t\t\tvar isIndirectEventTarget = (params.references || []).filter(ref => deepReads.filter(v => pathStartsWith(v, ref)).length);\r\n\t\t\tvar isFirstRunOrDirectOrIndirectReference = !params.references || !params.references.length || (isDirectEventTarget = isDirectEventTarget.length) || (isIndirectEventTarget = isIndirectEventTarget.length);\r\n\t\t\tvar isLocalAssignmentInEventbasedRuntime = params.references/** On the event-based runtime for... */ && context.params.type === 2/** ...onTrue/onFalse blocks */ && (stmt instanceof AssignmentInterface) && stmt.initKeyword/** Local assignments within it ... might be needed by selected references */;\r\n\t\t\tif (isFirstRunOrDirectOrIndirectReference/** || (isLocalAssignmentInEventbasedRuntime Experimental and currently disabled */) {\r\n\t\t\t\tvar _params = params;\r\n\t\t\t\tif (isDirectEventTarget) {\r\n\t\t\t\t\t_params = {...params};\r\n\t\t\t\t\tdelete _params.references;\r\n\t\t\t\t}\r\n\t\t\t\tresults[i] = callEval(stmt, context, _params);\r\n\t\t\t\tif (stmt instanceof ReturnInterface || returned) {\r\n\t\t\t\t\tif (returnCallback) {\r\n\t\t\t\t\t\treturnCallback(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn results[i];\r\n\t\t\t\t}\r\n\t\t\t\tif (((stmt instanceof IfInterface) && stmt.abortive) || returned === false) {\r\n\t\t\t\t\tskippedAbort = true;\r\n\t\t\t\t\tif (returnCallback) {\r\n\t\t\t\t\t\treturnCallback(false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// Add this change for subsequent statements\r\n\t\t\t\t// This is a local change!\r\n\t\t\t\tif (params.references && ((stmt instanceof AssignmentInterface) || (stmt instanceof DeletionInterface))) {\r\n\t\t\t\t\tparams.references = params.references.concat(referencesToPaths([stmt.reference]));\r\n\t\t\t\t}\r\n\t\t\t} else if (params.references && (stmt instanceof AssignmentInterface) && (stmt.val instanceof ReferenceInterface)) {\r\n\t\t\t\t// E.g: app = document.state; (This statement won't evaluate above if reference was \"document.state.something\")\r\n\t\t\t\t// So we need to record that app.something has changed\r\n\t\t\t\tparams.references = params.references.slice(0);\r\n\t\t\t\tlet basePath = referencesToPaths([stmt.reference])[0], // app\r\n\t\t\t\t\tleafPath = referencesToPaths([stmt.val])[0]; // document.state\r\n\t\t\t\tparams.references.forEach(ref/** document.state.something */ => {\r\n\t\t\t\t\tif (pathStartsWith(ref, leafPath)) {\r\n\t\t\t\t\t\t// app.something\r\n\t\t\t\t\t\tparams.references.push(basePath.concat(pathAfter(ref, leafPath)));\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn results;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.stmts.map(stmt => stmt.stringify(params)).join(this.delim);\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar parse = Lexer.lex(expr + ';', _flatten(this.operators).concat([Block.testBlockEnd]));\r\n\t\tif (parse.matches.length) {\r\n\t\t\treturn new this(\r\n\t\t\t\tparse.tokens.map(stmt => parseCallback(stmt.trim())).filter(a => a),\r\n\t\t\t\tparse.matches[0].trim()\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic testBlockEnd(a, b) {\r\n\t\t// Cases of code blocks that won't end in \";\"\r\n\t\tif (a.endsWith('}') && !b.trim().startsWith('else')) {\r\n\t\t\treturn '';\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop array\r\n */\r\nBlock.operators = [\r\n\t';',\r\n\t\"\\r\\n\",\r\n];\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _copy from '@webqit/util/obj/copy.js';\r\nimport _each from '@webqit/util/obj/each.js';\r\nimport _flatten from '@webqit/util/arr/flatten.js';\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport FuncInterface from './FuncInterface.js';\r\nimport Block from './Block.js';\r\nimport Scope from '../Scope.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Func class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Func = class extends FuncInterface {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(paramters, statements, arrowFunctionFormatting = {}) {\r\n\t\tsuper();\r\n\t\tthis.paramters = paramters || {};\r\n\t\tthis.statements = statements;\r\n\t\tthis.statements.isIndependent = true;\r\n\t\tthis.arrowFunctionFormatting = arrowFunctionFormatting;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tinherit(Super) {\r\n\t\tif (Super instanceof FuncInterface) {\r\n\t\t\tvar parentParams = Object.keys(Super.paramters);\r\n\t\t\tvar ownParams = Object.keys(this.paramters);\r\n\t\t\tfor (var i = 0; i < Math.max(ownParams.length, parentParams.length); i ++) {\r\n\t\t\t\tvar nameInParent = parentParams[i];\r\n\t\t\t\tvar nameInSelf = ownParams[i];\r\n\t\t\t\tif (!nameInSelf && nameInParent) {\r\n\t\t\t\t\tthrow new Error('Parameter #' + i + ' (' + nameInParent + ') in parent function must be implemented.');\r\n\t\t\t\t}\r\n\t\t\t\tif (nameInSelf && nameInParent) {\r\n\t\t\t\t\tvar defaultValInParent = Super.paramters[nameInParent];\r\n\t\t\t\t\tvar defaultValInSelf = this.paramters[nameInSelf];\r\n\t\t\t\t\tif (defaultValInSelf && !defaultValInParent) {\r\n\t\t\t\t\t\tthrow new Error('Parameter #' + i + ' (' + nameInSelf + ') must not have a default value as established in parent function.');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (defaultValInSelf && defaultValInParent && defaultValInSelf.jsenType !== defaultValInParent.jsenType) {\r\n\t\t\t\t\t\tthrow new Error('Default value for parameter #' + i + ' (' + nameInSelf + ') must be of type ' + defaultValInParent.jsenType + ' as established in parent function.');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.sup = Super;\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\tvar instance = this;\r\n\t\tparams = {...params};\r\n\t\tdelete params.returnCallback;\r\n\t\treturn function(...args) {\r\n\t\t\tvar newMainContext = {};\r\n\t\t\t_each(Object.keys(instance.paramters), (i, name) => {\r\n\t\t\t\tvar defaultVal = instance.paramters[name];\r\n\t\t\t\tif (args.length - 1 < i && !defaultVal) {\r\n\t\t\t\t\tthrow new Error('The parameter \"' + name + '\" is required.');\r\n\t\t\t\t}\r\n\t\t\t\tnewMainContext[name] = args.length > i \r\n\t\t\t\t\t? args[i] \r\n\t\t\t\t\t: (instance.paramters[name] \r\n\t\t\t\t\t\t? instance.paramters[name].eval(context, params) \r\n\t\t\t\t\t\t: null);\r\n\t\t\t});\r\n\t\t\tif (!instance.arrowFunctionFormatting) {\r\n\t\t\t\tnewMainContext['this'] = this;\r\n\t\t\t}\r\n\t\t\t// But this newer context should come first\r\n\t\t\tvar errorLevel = context instanceof Scope ? context.params.errorLevel : undefined;\r\n\t\t\tvar nestedContext = new Scope({main:newMainContext, super:context}, {errorLevel});\r\n\t\t\tvar retrn = instance.statements.eval(nestedContext, params);\r\n\t\t\tif (instance.arrowFunctionFormatting.body === false) {\r\n\t\t\t\treturn retrn[0];\r\n\t\t\t}\r\n\t\t\treturn retrn;\r\n\t\t};\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\tvar paramters = [];\r\n\t\t_each(this.paramters, (name, value) => {\r\n\t\t\tparamters.push(name + (value ? '=' + value.stringify(params) : ''));\r\n\t\t});\r\n\t\tif (this.arrowFunctionFormatting) {\r\n\t\t\tvar headNoWrap = this.arrowFunctionFormatting.head === false || (paramters.length === 1 && paramters[0].indexOf('=') === -1);\r\n\t\t\tvar bodyNoWrap = this.arrowFunctionFormatting.body === false\r\n\t\t\treturn (headNoWrap ? paramters[0] : '(' + paramters.join(', ') + ')')\r\n\t\t\t+ ' => ' + (bodyNoWrap ? this.statements.stringify(params) : '{' + this.statements.stringify(params) + '}');\r\n\t\t}\r\n\t\treturn 'function (' + paramters.join(', ') + ') {' + this.statements.stringify(params) + '}';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\texpr = expr.trim();\r\n\t\tvar splits;\r\n\t\tif (expr.startsWith('function') \r\n\t\t&& (splits = Lexer.split(expr, []).slice(1).filter(b => b.trim())) && splits.length === 2) {\r\n\t\t\tvar arrowFunctionFormatting = false;\r\n\t\t\tvar funcHead = _unwrap(splits.shift().trim(), '(', ')');\r\n\t\t\tvar funcBody = _unwrap(splits.shift().trim(), '{', '}');\r\n\t\t} else if (!expr.startsWith('function') \r\n\t\t&& (splits = Lexer.split(expr, ['=>'])) && splits.length === 2) {\r\n\t\t\tvar funcHead = splits.shift().trim();\r\n\t\t\tvar funcBody = splits.shift().trim();\r\n\t\t\tvar arrowFunctionFormatting = {};\r\n\t\t\tif (_wrapped(funcHead, '(', ')')) {\r\n\t\t\t\tfuncHead = _unwrap(funcHead, '(', ')');\r\n\t\t\t} else {\r\n\t\t\t\tarrowFunctionFormatting.head = false;\r\n\t\t\t}\r\n\t\t\tif (_wrapped(funcBody, '{', '}')) {\r\n\t\t\t\tfuncBody = _unwrap(funcBody, '{', '}');\r\n\t\t\t} else {\r\n\t\t\t\tarrowFunctionFormatting.body = false;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar paramters = {};\r\n\t\tLexer.split(funcHead, [',']).forEach(param => {\r\n\t\t\tvar paramSplit = param.split('=');\r\n\t\t\tif (paramSplit[1]) {\r\n\t\t\t\tparamters[paramSplit[0].trim()] = parseCallback(paramSplit[1].trim(), null, {\r\n\t\t\t\t\t// Any varaibles should be added to public vars\r\n\t\t\t\t\tmeta: null,\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tparamters[param.trim()] = null;\r\n\t\t\t}\r\n\t\t});\r\n\t\tvar block = parseCallback(funcBody, [Block], {assert:false}) || parseCallback(funcBody, null, {\r\n\t\t\t// Any varaibles should be added to public vars\r\n\t\t\tmeta: null,\r\n\t\t});\r\n\t\treturn new this(\r\n\t\t\tparamters,\r\n\t\t\tblock.jsenType === 'Block' ? block : new Block([block]),\r\n\t\t\tarrowFunctionFormatting,\r\n\t\t);\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nFunc.operators = ['=>',];\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Func;","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport IfInterface from './IfInterface.js';\r\nimport ReturnInterface from './ReturnInterface.js';\r\nimport Block from './Block.js';\r\nimport Scope from '../Scope.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Condition class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst If = class extends IfInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(assertion, onTrue, onFalse, params = {}) {\r\n\t\tsuper();\r\n\t\tthis.assertion = assertion;\r\n\t\tthis.onTrue = onTrue;\r\n\t\tthis.onFalse = onFalse;\r\n        this.params = params;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n        var errorLevel = context instanceof Scope ? context.params.errorLevel : undefined;\r\n        var _context = new Scope({\r\n            main:{}, \r\n            super:context,\r\n        }, {type: 2, errorLevel});\r\n\t\treturn  this.assertion.eval(context/** original context */, params)\r\n\t\t\t? (this.onTrue ? this.onTrue.eval(_context, params) : undefined)\r\n            : (this.onFalse ? this.onFalse.eval(_context, params) : undefined);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n        var onTrue = this.onTrue && this.params.onTrueIsBlock \r\n            ? '{' + this.onTrue.stringify(params) + '}' \r\n            : (this.onTrue ? this.onTrue.stringify(params) : '');\r\n        var onFalse = this.onFalse && this.params.onFalseIsBlock \r\n            ? '{' + this.onFalse.stringify(params) + '}' \r\n            : (this.onFalse ? this.onFalse.stringify(params) : '');\r\n\t\treturn 'if (' + this.assertion.stringify(params) + ')' + onTrue + (onFalse ? ' else ' + onFalse : '');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n        expr = expr.trim();\r\n        var splits;\r\n        if (expr.startsWith('if') \r\n\t\t&& (splits = Lexer.split(expr, [], {limit:2}/*IMPORTANT*/).slice(1).filter(b => b.trim())) && splits.length === 2) {\r\n            var assertion = parseCallback(_unwrap(splits.shift().trim(), '(', ')').trim());\r\n            var rest = Lexer.split(splits.shift().trim(), ['else'], {limit:1}/*IMPORTANT*/);\r\n            var abortive;\r\n            var onTrue = rest.shift().trim(), onTrueIsBlock, onFalse = (rest.shift() || '').trim(), onFalseIsBlock;\r\n            if (_wrapped(onTrue, '{', '}')) {\r\n                // The braces gives us the onTrue block\r\n                onTrueIsBlock = true;\r\n                onTrue = _unwrap(onTrue, '{', '}').trim();\r\n            }\r\n            onTrue = parseCallback(onTrue, [Block], {assert:false, meta:null}) || parseCallback(onTrue, null, {meta:null});\r\n            if (onFalse) {\r\n                if (_wrapped(onFalse, '{', '}')) {\r\n                    // The braces gives us the onTrue block\r\n                    onFalseIsBlock = true;\r\n                    onFalse = _unwrap(onFalse, '{', '}').trim();\r\n                }\r\n                onFalse = parseCallback(onFalse, [Block], {assert:false, meta:null}) || parseCallback(onFalse, null, {meta:null});\r\n            } else if (onTrue) {\r\n                abortive = onTrue.stmts.filter(stmt => stmt instanceof ReturnInterface).length;\r\n            }\r\n\t\t\tconst instance = new this(assertion, onTrue, onFalse, {\r\n                    onTrueIsBlock,\r\n                    onFalseIsBlock\r\n                }\r\n            );\r\n            instance.abortive = abortive;\r\n            return instance;\r\n         }\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default If;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\n\r\n/**\r\n * Returns the intersection of two arrays;\r\n * optionally using a custom matching function.\r\n *\r\n * @param array \tarr\r\n * @param array\t \tarr2\r\n * @param function \tcallback\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, arr2, callback = null) {\r\n\treturn !_isArray(arr2) ? [] : arr.filter(val1 => callback \r\n\t\t? arr2.filter(val2 => callback(val1, val2)).length \r\n\t\t: arr2.indexOf(val1) !== -1\r\n\t);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * MathInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'MathExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNumeric from '@webqit/util/js/isNumeric.js';\r\nimport _flatten from '@webqit/util/arr/flatten.js';\r\nimport _intersect from '@webqit/util/arr/intersect.js';\r\nimport _unique from '@webqit/util/arr/unique.js';\r\nimport MathInterface from './MathInterface.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Math class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Math = class extends MathInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(val, exprs) {\r\n\t\tsuper();\r\n\t\tthis.val = val;\r\n\t\tthis.exprs = exprs;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.exprs.reduce((currentTotal, expr) => {\r\n\t\t\tvar val = expr.val.eval(context, params);\r\n\t\t\tvar operator = expr.operator.trim();\r\n\t\t\tif ((!_isNumeric(currentTotal) || !_isNumeric(val)) && operator !== '+') {\r\n\t\t\t\tthrow new Error('Invalid Math expression: ' + this.toString() + '!');\r\n\t\t\t}\r\n\t\t\tswitch(operator) {\r\n\t\t\t\tcase '+':\r\n\t\t\t\t\treturn currentTotal + val;\r\n\t\t\t\tcase '-':\r\n\t\t\t\t\treturn currentTotal - val;\r\n\t\t\t\tcase '*':\r\n\t\t\t\t\treturn currentTotal * val;\r\n\t\t\t\tcase '/':\r\n\t\t\t\t\treturn currentTotal / val;\r\n\t\t\t}\r\n\t\t}, this.val.eval(context, params));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn [this.val.stringify(params)].concat(\r\n\t\t\tthis.exprs.map(expr => expr.operator + ' ' + expr.val.stringify(params))\r\n\t\t).join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar parse = Lexer.lex(expr, _flatten(this.operators));\r\n\t\tif (parse.tokens.filter(t => t).length > 1 && parse.matches.length === parse.tokens.length - 1) {\r\n\t\t\tvar operators = _unique(parse.matches);\r\n\t\t\tif (_intersect(operators, this.operators.sup).length && _intersect(operators, this.operators.sub).length) {\r\n\t\t\t\tthrow new Error('\"Addition/subtraction\" and \"multiplication/division\" operators cannot be used in the same expression: ' + expr + '!');\r\n\t\t\t}\r\n\t\t\treturn new this(\r\n\t\t\t\tparseCallback(parse.tokens.shift().trim()),\r\n\t\t\t\tparse.tokens.map((expr, i) => {return {\r\n\t\t\t\t\toperator: parse.matches[i],\r\n\t\t\t\t\tval: parseCallback(expr.trim())\r\n\t\t\t\t};})\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nMath.operators = {\r\n\tsup: ['*', '/'],\r\n\tsub: ['+', '-'],\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Math;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ObjInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'ObjectType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\nimport _first from '@webqit/util/arr/first.js';\r\nimport _last from '@webqit/util/arr/last.js';\r\nimport _each from '@webqit/util/obj/each.js';\r\nimport ObjInterface from './ObjInterface.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Object utils\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Obj = class extends ObjInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(entries) {\r\n\t\tsuper();\r\n\t\tthis.entries = entries || {};\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tinherit(Super) {\r\n\t\tif (Super instanceof ObjInterface) {\r\n\t\t\t_each(Super.entries, (name, val) => {\r\n\t\t\t\tif (!(name in this.entries)) {\r\n\t\t\t\t\tthis.entries[name] = val;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\tvar items = {};\r\n\t\t_each(this.entries, (key, expr) => {\r\n\t\t\titems[key] = expr.eval(context, params);\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\tvar str = [];\r\n\t\t_each(this.entries, (key, expr) => {\r\n\t\t\tstr.push(key + Obj.operators.sub + expr.stringify(params));\r\n\t\t});\r\n\t\treturn '{' + str.join(Obj.operators.sup) + '}';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (_wrapped(expr, '{', '}') && !Lexer.match(expr.trim(), [' ']).length) {\r\n\t\t\tvar entries = {};\r\n\t\t\tvar _entriesSplit = Lexer.split(_unwrap(expr, '{', '}'), [Obj.operators.sup])\r\n\t\t\t\t.map(n => n.trim()).filter(n => n);\r\n\t\t\t_each(_entriesSplit, (key, expr) => {\r\n\t\t\t\tvar entry = Lexer.split(expr, [Obj.operators.sub], {limit:1}/*IMPORTANT*/);\r\n\t\t\t\tentries[_first(entry).trim()] = parseCallback(_last(entry).trim());\r\n\t\t\t});\r\n\t\t\treturn new this(entries);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nObj.operators = {\r\n\tsup: ',',\r\n\tsub: ':',\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Obj;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * PresenceInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'PresenceOperator'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _last from '@webqit/util/arr/last.js';\r\nimport _isUndefined from '@webqit/util/js/isUndefined.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport PresenceInterface from './PresenceInterface.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport SyntaxError from '../SyntaxError.js';\r\nimport ReferenceError from '../ReferenceError.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Presence class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Presence = class extends PresenceInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(prop, reference, operator = 'in') {\r\n\t\tsuper();\r\n\t\tthis.prop = prop;\r\n\t\tthis.reference = reference;\r\n\t\tthis.operator = operator;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\tvar prop = this.prop.eval(context, params);\r\n\t\ttry {\r\n\t\t\treturn this.reference.getEval(context, params).has(prop);\r\n\t\t} catch(e) {\r\n\t\t\tif (e instanceof ReferenceError) {\r\n\t\t\t\tthrow new ReferenceError('[' + this + ']: ' + e.message);\r\n\t\t\t} else {\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn [this.prop.stringify(params), this.operator, this.reference.stringify(params)].join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar parse = Lexer.lex(expr, this.operators);\r\n\t\tif (parse.tokens.length === 2) {\r\n\t\t\tvar prop, reference;\r\n\t\t\tif (!(prop = parseCallback(parse.tokens.shift().trim()))\r\n\t\t\t|| !((reference = parseCallback(parse.tokens.shift().trim())) instanceof ReferenceInterface)) {\r\n\t\t\t\tthrow new SyntaxError(expr);\r\n\t\t\t}\r\n\t\t\treturn new this(prop, reference, parse.matches[0].trim());\r\n\t\t}\r\n\t}\r\n};\t\r\n\r\n/**\r\n * @prop array\r\n */\r\nPresence.operators = [' in '];\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Presence;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isUndefined from '@webqit/util/js/isUndefined.js';\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport ExprInterface from '../ExprInterface.js';\r\nimport Scope from '../Scope.js';\r\nimport SyntaxError from '../SyntaxError.js';\r\nimport ReferenceError from '../ReferenceError.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Reference class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Reference extends ReferenceInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(context, name, backticks = false) {\r\n\t\tsuper();\r\n\t\tthis.context = context;\r\n\t\tthis.name = name;\r\n\t\tthis.backticks = backticks;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tgetEval(context = null, params = {}) {\r\n\t\tvar sourceContext = context, name = this.name;\r\n\t\tif (this.context) {\r\n\t\t\tif (name instanceof ExprInterface) {\r\n\t\t\t\tname = name.eval(context, params);\r\n\t\t\t}\r\n\t\t\tsourceContext = this.context.eval(context, params);\r\n\t\t}\r\n\t\tvar isRootVar = !this.context;\r\n\t\treturn {\r\n\t\t\tget() {\r\n\t\t\t\treturn Scope.create(sourceContext, params).get(name, params.trap);\r\n\t\t\t},\r\n\t\t\tdel() {\r\n\t\t\t\treturn Scope.create(sourceContext, params).del(name, params.trap);\r\n\t\t\t},\r\n\t\t\thas(prop) {\r\n\t\t\t\treturn Scope.create(sourceContext, params).has(name, prop, params.trap);\r\n\t\t\t},\r\n\t\t\tset(val, initKeyword = null) {\r\n\t\t\t\treturn Scope.create(sourceContext, params).set(name, val, params.trap, initKeyword, isRootVar);\r\n\t\t\t},\r\n\t\t\texec(args) {\r\n\t\t\t\treturn Scope.create(sourceContext, params).exec(name, args, params.trap);\r\n\t\t\t},\r\n\t\t};\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\ttry {\r\n\t\t\treturn this.getEval(context, params).get();\r\n\t\t} catch(e) {\r\n\t\t\tif (e instanceof ReferenceError) {\r\n\t\t\t\tthrow new ReferenceError('[' + this + ']: ' + e.message);\r\n\t\t\t} else {\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\tvar name = this.name;\r\n\t\tif (this.context) {\r\n\t\t\tvar subjectContext = this.context.stringify(params);\r\n\t\t\tif (name instanceof ExprInterface) {\r\n\t\t\t\tname = '[' + name.stringify(params) + ']';\r\n\t\t\t} else if (this.backticks) {\r\n\t\t\t\tname = '`' + name + '`';\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar subjectContext = params.context;\r\n\t\t\tif (this.backticks) {\r\n\t\t\t\tname = '`' + name + '`';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn (subjectContext || '') + (subjectContext && !name.startsWith('[') ? Reference.separator : '') + name;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (!Lexer.match(expr.trim(), [' ']).length) {\r\n\t\t\tvar splits = Lexer.split(expr, []);\r\n\t\t\t// ------------------------\r\n\t\t\t// name, first\r\n\t\t\t// ------------------------\r\n\t\t\tvar context, name = splits.pop(), backticks;\r\n\t\t\tvar nameSplit = Lexer.split(name.trim(), [this.separator], {preserveDelims:true});\r\n\t\t\tif (nameSplit.length > 1) {\r\n\t\t\t\tname = nameSplit.pop().substr(1);\r\n\t\t\t\tsplits = splits.concat(nameSplit);\r\n\t\t\t}\r\n\t\t\tif (_wrapped(name, '`', '`')) {\r\n\t\t\t\tname = _unwrap(name, '`', '`');\r\n\t\t\t\tbackticks = true;\r\n\t\t\t}\r\n\t\t\t// ------------------------\r\n\t\t\t// context, second\r\n\t\t\t// ------------------------\r\n\t\t\tif (splits.length) {\r\n\t\t\t\tcontext = parseCallback(splits.join(''), null, {role: 'CONTEXT'});\r\n\t\t\t}\r\n\t\t\tif (_wrapped(name, '[', ']')) {\r\n\t\t\t\tif (!context) {\r\n\t\t\t\t\tthrow new SyntaxError(expr);\r\n\t\t\t\t}\r\n\t\t\t\tname = parseCallback(_unwrap(name, '[', ']'));\r\n\t\t\t}\r\n\t\t\treturn new this(context, name, backticks);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop string\r\n */\r\nReference.separator = '.';\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * VoidInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Void'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Subscript from './index.js';\r\n\r\n// As globals\r\nif (!window.WebQit) {\r\n\twindow.WebQit = {};\r\n}\r\nwindow.WebQit.Subscript = Subscript;"],"sourceRoot":""}